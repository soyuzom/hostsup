{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"网盘自动填写密码【增强版】","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http*://*.pcs.baidu.com/*","http*://*.baidupcs.com/*","http*://*:8666/file/*","http*://*.baidu.com/file/*","http*://index.baidu.com/*","http*://*.gov/*","http*://*.gov.cn/*","http*://*.taobao.com/*","http*://*.tmall.com/*","http*://*.alimama.com/*","http*://*.jd.com/*","http://*.ctrip.com/*","https://*.evernote.com/*","https://*.yinxiang.com/*","/^https?://(localhost|10\\.|192\\.|127\\.)/","/https?://www.baidu.com/(?:s|baidu)\\?/","http*://www.zhihu.com/question/*/answers/created"],"orig_includes":["http://*","https://*","http://pan.baidu.com/s/*","http://eyun.baidu.com/s/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278855980},"enabled":false,"position":1,"file_url":"https://greasyfork.org/scripts/13463-%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E5%AF%86%E7%A0%81-%E5%A2%9E%E5%BC%BA%E7%89%88/code/%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E5%AF%86%E7%A0%81%E3%80%90%E5%A2%9E%E5%BC%BA%E7%89%88%E3%80%91.user.js","uuid":"c7e9185e-df8c-45b5-8565-486ed56c03a5","source":""},{"name":"百度网盘直接下载助手增强版","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278855990},"enabled":true,"position":2,"uuid":"619faedb-494a-4c0c-b1ef-799381f0a4ad","source":""},{"name":"极速无缝解析VIP视频","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v.youku.com/v_show/*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/dianying/*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://*.acfun.cn/v/*","*://*.bilibili.com/video/*","*://*.bilibili.com/anime/*","*://vip.pptv.com/show/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.wasu.cn/Play/show/*","*://miaomiaoai.cn/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278855998},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/29738-%E6%9E%81%E9%80%9F%E6%97%A0%E7%BC%9D%E8%A7%A3%E6%9E%90vip%E8%A7%86%E9%A2%91/code/%E6%9E%81%E9%80%9F%E6%97%A0%E7%BC%9D%E8%A7%A3%E6%9E%90VIP%E8%A7%86%E9%A2%91.user.js","uuid":"8bb45f9b-de02-4ac8-a4de-749ce454fb02","source":""},{"name":"bye-flash-hello-html5 | 再见flash 你好html5","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["*://*.le.com/*","*://*.iqiyi.com/*html*","*://v.qq.com/*","*://*.cctv.com/*","*://www.mgtv.com/*/*.html*","*://zt.mgtv.com/act/*","*://www.mgtv.com/news","*://www.mgtv.com/live","*://live.mgtv.com*","*://*.icourse163.org/*","*://open.163.com/movie*","*://study.163.com/course/courseLearn*","*://mooc.study.163.com/learn/*","*://live.bilibili.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856001},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/30879-bye-flash-hello-html5-%E5%86%8D%E8%A7%81flash-%E4%BD%A0%E5%A5%BDhtml5/code/bye-flash-hello-html5%20%7C%20%E5%86%8D%E8%A7%81flash%20%E4%BD%A0%E5%A5%BDhtml5.user.js","uuid":"9d1c824f-0876-43b4-8993-dc30c6609c4c","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgIGJ5ZS1mbGFzaC1oZWxsby1odG1sNSB8IOWGjeingWZsYXNoIOS9oOWlvWh0bWw1Ci8vIEBuYW1lc3BhY2UgICBodHRwczovL2dyZWFzeWZvcmsub3JnL2VuL3VzZXJzLzEzMTk2NS1sZXZpbml0Ci8vIEBhdXRob3IgICAgICBsZXZpbml0Ci8vIEBkZXNjcmlwdGlvbiDlm73lhoXkuLvmtYHop4bpopHnvZHnq5nnmoRIVE1MNeaSreaUvgovLyBAaW5jbHVkZSAgICAgKjovLyoubGUuY29tLyoKLy8gQGluY2x1ZGUgICAgICo6Ly8qLmlxaXlpLmNvbS8qaHRtbCoKLy8gQGluY2x1ZGUgICAgICo6Ly92LnFxLmNvbS8qCi8vIEBpbmNsdWRlICAgICAqOi8vKi5jY3R2LmNvbS8qCi8vIEBpbmNsdWRlICAgICAqOi8vd3d3Lm1ndHYuY29tLyovKi5odG1sKgovLyBAaW5jbHVkZSAgICAgKjovL3p0Lm1ndHYuY29tL2FjdC8qCi8vIEBpbmNsdWRlICAgICAqOi8vd3d3Lm1ndHYuY29tL25ld3MKLy8gQGluY2x1ZGUgICAgICo6Ly93d3cubWd0di5jb20vbGl2ZQovLyBAaW5jbHVkZSAgICAgKjovL2xpdmUubWd0di5jb20qCi8vIEBpbmNsdWRlICAgICAqOi8vKi5pY291cnNlMTYzLm9yZy8qCi8vIEBpbmNsdWRlICAgICAqOi8vb3Blbi4xNjMuY29tL21vdmllKgovLyBAaW5jbHVkZSAgICAgKjovL3N0dWR5LjE2My5jb20vY291cnNlL2NvdXJzZUxlYXJuKgovLyBAaW5jbHVkZSAgICAgKjovL21vb2Muc3R1ZHkuMTYzLmNvbS9sZWFybi8qCi8vIEBpbmNsdWRlICAgICAqOi8vbGl2ZS5iaWxpYmlsaS5jb20vKgovLyBAcnVuLWF0ICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQHZlcnNpb24gICAgIDEuNwovLyBAZ3JhbnQgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KLy8ndXNlIHN0cmljdCc7CnZhciB1YSA9IG51bGw7ICAvL3VzZXItYWdlbnTlj5blgLwKdmFyIGlzUGhvbmUgPSBmYWxzZTsgIC8v5piv5ZCm5L2/55So56e75YqodWEKdmFyIGVsZSA9IGZ1bmN0aW9uIChlbGVtZW50KSB7ICAvL+iOt+WPluWFg+e0oOWvueixoeeahOWHveaVsAogICAgcmV0dXJuIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoZWxlbWVudCk7Cn07CnZhciBjaGFuZ2VVQSA9IGZ1bmN0aW9uICh1YSkgeyAvL+abtOaUuXVh55qE5Ye95pWwCiAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkobmF2aWdhdG9yLCAndXNlckFnZW50JywgewogICAgICAgIHZhbHVlOiB1YSwKICAgICAgICB3cml0YWJsZTogZmFsc2UsCiAgICAgICAgY29uZmlndXJhYmxlOiBmYWxzZSwKICAgICAgICBlbnVtZXJhYmxlOiB0cnVlCiAgICB9KTsKfTsKCihmdW5jdGlvbiAoKSB7ICAvL+WIpOaWreenu+WKqHVh55u45YWz5L+h5oGvCiAgICB2YXIgcGhvbmUgPSBbICAvL+i/meS6m+e9keermeS9v+eUqOenu+WKqHVhCiAgICAgICAgJ2NjdHYnLAogICAgICAgICcuMTYzJywKICAgICAgICAnbWd0dicsCiAgICAgICAgJ2lxaXlpJwogICAgXTsKCiAgICBpZiAobG9jYXRpb24uaG9zdC5pbmRleE9mKCdpcWl5aScpID49IDAgJiYgbmF2aWdhdG9yLnVzZXJBZ2VudC5pbmRleE9mKCdGaXJlZm94JykgPT09IC0xKSB7CiAgICAgICAgaXNQaG9uZSA9IGZhbHNlOyAgLy/niLHlpYfoibrnmoRodG1sNeS4jeaUr+aMgWZpcmVmb3gKICAgIH0gZWxzZSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBwaG9uZS5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAobG9jYXRpb24uaG9zdC5pbmRleE9mKHBob25lW2ldKSA+PSAwKSB7CiAgICAgICAgICAgICAgICBpc1Bob25lID0gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KfSkoKTsKCmlmIChpc1Bob25lKSB7ICAvL+enu+WKqHVh55qE572R56uZCiAgICB1YSA9ICdNb3ppbGxhLzUuMCAoTGludXg7IFU7IEFuZHJvaWQgNC4wLjQ7IEdULUk5MzAwIEJ1aWxkL0lNTTc2RCkgQXBwbGVXZWJLaXQvNjAxLjEgKEtIVE1MLCBsaWtlIEdlY2tvKSBWZXJzaW9uLzQuMCBNb2JpbGUgU2FmYXJpLzYwMS4xLjQ2JzsKICAgIGNoYW5nZVVBKHVhKTsKfSBlbHNlIHsgIC8v5L2/55SoY2hyb21l44CBbWFj44CBc2FmYXJp562JdWEKICAgIGlmICgobG9jYXRpb24uaG9zdCA9PT0gJ3YucXEuY29tJyB8fCBsb2NhdGlvbi5ob3N0ID09PSAnbGl2ZS5iaWxpYmlsLmNvbScpICYmIG5hdmlnYXRvci51c2VyQWdlbnQuaW5kZXhPZignRWRnZScpID09PSAtMSkgewogICAgICAgIGNvbnNvbGUubG9nKCfmlK/mjIFodG1sNScpOyAgLy9FZGdl55qE6IW+6K6v6KeG6aKR5ZKMYuermeebtOaSreS4jeaUr+aMgWh0bWw1CiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmhyZWYuaW5kZXhPZignaXFpeWknKSA+PSAwKSB7CiAgICAgICAgY29uc29sZS5sb2coJ+aUr+aMgWh0bWw1Jyk7CiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmhvc3QuaW5kZXhPZignbGUuY29tJykgPj0gMCkgeyAgLy9sZS5jb23lr7ltYWMrc2FmYXJp5oOF5pyJ54us6ZKfCiAgICAgICAgdWEgPSAnTW96aWxsYS81LjAgKE1hY2ludG9zaDsgSW50ZWwgTWFjIE9TIFggMTBfMTJfNikgQXBwbGVXZWJLaXQvNjAzLjMuOCAoS0hUTUwsIGxpa2UgR2Vja28pIFZlcnNpb24vMTAuMS4yIFNhZmFyaS82MDMuMy44JzsKICAgICAgICBjaGFuZ2VVQSh1YSk7CiAgICB9IGVsc2UgeyAgLy9jaHJvbWUgdWEKICAgICAgICB1YSA9ICdNb3ppbGxhLzUuMCAoTWFjaW50b3NoOyBJbnRlbCBNYWMgT1MgWCAxMF8xMl82KSBBcHBsZVdlYktpdC82MDMuMy44IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzYxLjAuMzE2My45MSBTYWZhcmkvNjAzLjMuOCc7CiAgICAgICAgY2hhbmdlVUEodWEpOwogICAgfQp9CgppZiAobG9jYXRpb24uaHJlZi5zZWFyY2goJ29wZW4uMTYzJykgPj0gMCkgeyAgLy/nvZHmmJPlhazlvIDor74KICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIHZhciB2ID0gZWxlKCcudmlkZW8td3JhcHBlciB2aWRlbycpOwogICAgICAgIGVsZSgnYm9keScpLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjZTRmMGViJzsKICAgICAgICBpZiAoISF2ID09PSB0cnVlKSB7ICAvL+iuvue9ruinhumikeaSreaUvuWMuuWfn+eahOmrmOW6pgogICAgICAgICAgICB2LnNldEF0dHJpYnV0ZSgnc3R5bGUnLCAnaGVpZ2h0OjEwMCUnKTsKICAgICAgICB9CiAgICB9LCAyMzMzKTsKfQoKd2luZG93Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHsKICAgIGlmIChpc1Bob25lID09PSB0cnVlICYmIChsb2NhdGlvbi5ocmVmLnNlYXJjaCgnc3R1ZHkuMTYzJykgPj0gMCB8fCBsb2NhdGlvbi5ocmVmLnNlYXJjaCgnaXFpeWkuY29tJykgPj0gMCkpIHsKICAgICAgICB2YXIgdmlkZW9FbGVtZW50ID0gZWxlKCd2aWRlbycpOyAgLy/op4bpopHlhYPntKAKICAgICAgICBpZiAoISF2aWRlb0VsZW1lbnQgPT09IHRydWUpIHsKICAgICAgICAgICAgdmlkZW9FbGVtZW50LnNldEF0dHJpYnV0ZSgnY29udHJvbHMnLCAnY29udHJvbHMnKTsgIC8v5pi+56S65pKt5pS+5o6n5Yi25p2hCiAgICAgICAgICAgIGlmIChsb2NhdGlvbi5ocmVmLnNlYXJjaCgnaXFpeWkuY29tJykgPj0gMCkgewogICAgICAgICAgICAgICAgaXFpeWkoKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIGlxaXlpKCkgeyAgLy/niLHlpYfoibrnmoTnm7jlhbPosIPmlbQKICAgICAgICB2YXIgZGVmYXVsdFByb2Nlc3MgPSBlbGUoJy5wcm9jZXNzLXJlc3BvbnNlJyk7ICAvL+eIseWlh+iJuum7mOiupOeahOi/m+W6puadoQogICAgICAgIHZhciBjb250cm9sMiA9IGVsZSgnLmJvdHRvbScpOyAgLy/mkq3mlL7kuIvkuIDkuKrop4bpopHlkozosIPmlbTnlLvotKjnmoTmjqfliLbmnaEKICAgICAgICBpZiAoISFjb250cm9sMiA9PT0gdHJ1ZSkgewogICAgICAgICAgICBjb250cm9sMi5zdHlsZS5ib3R0b20gPSAnMjVweCc7ICAvL+aSreaUvuS4i+S4gOS4quinhumikeWSjOiwg+aVtOeUu+i0qOeahOaOp+WItuadoeW+gOS4iuaUvgogICAgICAgICAgICBpZiAoISFkZWZhdWx0UHJvY2VzcyA9PT0gdHJ1ZSkgewogICAgICAgICAgICAgICAgZGVmYXVsdFByb2Nlc3Muc3R5bGUuZGlzcGxheSA9ICdub25lJzsgIC8v6K6p6buY6K6k6L+b5bqm5p2h5raI5aSxCiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn07Cg=="},{"name":"网盘自动填写密码【威力加强版】","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["http*://*.pcs.baidu.com/*","http*://*.baidupcs.com/*","http*://*:8666/file/*","http*://*.baidu.com/file/*","http*://index.baidu.com/*","http*://*.gov/*","http*://*.gov.cn/*","http*://*.taobao.com/*","http*://*.tmall.com/*","http*://*.alimama.com/*","http*://*.jd.com/*","http://*.zol.com.cn/*","http://*.ctrip.com/*","https://*.evernote.com/*","https://*.yinxiang.com/*","/^https?://(localhost|10\\.|192\\.|127\\.)/","/https?://www.baidu.com/(?:s|baidu)\\?/","http*://www.zhihu.com/question/*/answers/created"],"orig_includes":["http://pan.baidu.com/s/*","http://eyun.baidu.com/s/*","http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"CatPW":"o{\"Src\":\"https://pan.baidu.com/s/1eSIQ15w\",\"Hash\":\"\",\"webSrc\":\"http%3A%2F%2Fwww.zdfans.com%2F7337.html\",\"webTitle\":\"%E8%BF%85%E9%9B%B7%20v9.1.43.938%20%E6%AD%A3%E5%BC%8F%E7%89%88%E5%8E%BB%E5%B9%BF%E5%91%8A%E7%BB%BF%E8%89%B2%E7%BA%AF%E5%87%80%E7%89%88%20%E2%80%93%20zd423\"}"},"ts":1509678155079},"enabled":true,"position":5,"file_url":"https://greasyfork.org/scripts/29762-%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E5%AF%86%E7%A0%81-%E5%A8%81%E5%8A%9B%E5%8A%A0%E5%BC%BA%E7%89%88/code/%E7%BD%91%E7%9B%98%E8%87%AA%E5%8A%A8%E5%A1%AB%E5%86%99%E5%AF%86%E7%A0%81%E3%80%90%E5%A8%81%E5%8A%9B%E5%8A%A0%E5%BC%BA%E7%89%88%E3%80%91.user.js","uuid":"ed0fbd5a-ebd9-4078-bb9e-5696465d9cfd","source":""},{"name":"破解VIP会员视频集合","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":["*://*.bilibili.com/blackboard/*"],"orig_includes":[],"orig_matches":["*://*.iqiyi.com/*","*://*.youku.com/*","*://*.le.com/*","*://*.letv.com/*","*://v.qq.com/*","*://*.tudou.com/*","*://*.mgtv.com/*","*://film.sohu.com/*","*://tv.sohu.com/*","*://*.acfun.cn/v/*","*://*.bilibili.com/*","*://vip.1905.com/play/*","*://*.pptv.com/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.fun.tv/vplay/*","*://*.wasu.cn/Play/show/*","*://*.56.com/*"],"orig_noframes":true,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856011},"enabled":true,"position":6,"file_url":"https://greasyfork.org/scripts/27530-%E7%A0%B4%E8%A7%A3vip%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88/code/%E7%A0%B4%E8%A7%A3VIP%E4%BC%9A%E5%91%98%E8%A7%86%E9%A2%91%E9%9B%86%E5%90%88.user.js","uuid":"2780da2e-bc5b-4d1b-883e-e33287233f3e","source":""},{"name":"AutoUnlock","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["http://maijz128.github.io/AutoUnlock/AutoUnlock/?open=*","https://maijz128.github.io/AutoUnlock/AutoUnlock/?open=*","http://pan.baidu.com/share/init?*","https://pan.baidu.com/share/init?*","http://localhost:8094/AutoUnlock/?open=*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856015},"enabled":true,"position":7,"file_url":"https://greasyfork.org/scripts/31324-autounlock/code/AutoUnlock.user.js","uuid":"65cc0249-c5ce-4493-a3e4-5b3fd019b6fb","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICBBdXRvVW5sb2NrCi8vIEBuYW1lc3BhY2UgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy9zY3JpcHRzLzMxMzI0LWF1dG91bmxvY2sKLy8gQHZlcnNpb24gICAgICAwLjIuMyAgICAgICAgICAKLy8gQGRlc2NyaXB0aW9uICDoh6rliqjot7Povazlubbop6PplIHnmb7luqbnvZHnm5jjgIFNZWdh5YiG5LqrCi8vIEBhdXRob3IgICAgICAgTWFpSloKLy8gQGhvbWVwYWdlVVJMICBodHRwczovL2dpdGh1Yi5jb20vbWFpanoxMjgvQXV0b1VubG9jawovLyBAc3VwcG9ydFVSTCAgIGh0dHBzOi8vZ2l0aHViLmNvbS9tYWlqejEyOC9BdXRvVW5sb2NrCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL21haWp6MTI4LmdpdGh1Yi5pby9BdXRvVW5sb2NrL0F1dG9VbmxvY2svP29wZW49KgovLyBAbWF0Y2ggICAgICAgIGh0dHBzOi8vbWFpanoxMjguZ2l0aHViLmlvL0F1dG9VbmxvY2svQXV0b1VubG9jay8/b3Blbj0qCi8vIEBtYXRjaCAgICAgICAgaHR0cDovL3Bhbi5iYWlkdS5jb20vc2hhcmUvaW5pdD8qCi8vIEBtYXRjaCAgICAgICAgaHR0cHM6Ly9wYW4uYmFpZHUuY29tL3NoYXJlL2luaXQ/KgovLyBAbWF0Y2ggICAgICAgIGh0dHA6Ly9sb2NhbGhvc3Q6ODA5NC9BdXRvVW5sb2NrLz9vcGVuPSoKLy8gQGdyYW50ICAgICAgICBHTV9zZXRWYWx1ZQovLyBAZ3JhbnQgICAgICAgIEdNX2dldFZhbHVlCi8vIEBncmFudCAgICAgICAgR01fZ2V0VGFiCi8vIEBncmFudCAgICAgICAgR01fc2F2ZVRhYgovLyBAZ3JhbnQgICAgICAgIEdNX2dldFRhYnMKLy8gQGdyYW50ICAgICAgICB1bnNhZmVXaW5kb3cKLy8gPT0vVXNlclNjcmlwdD09Cgpjb25zdCBTSVRFX1dBSVRfVElNRSA9IDUwMDsKY29uc3QgREFUQV9PVkVSX1RJTUUgPSAxMCAqIDEwMDA7CgooZnVuY3Rpb24gKCkgewogICAgJ3VzZSBzdHJpY3QnOwogICAgcnVuKCk7Cn0pKCk7CgpmdW5jdGlvbiBydW4oKSB7CiAgICB2YXIgaXNBdXRvVW5sb2NrU2l0ZSA9IGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiQXV0b1VubG9jayIpID4gLTE7CiAgICB2YXIgaXNCYWlkdVNoYXJlSW5pdFNpdGUgPSBsb2NhdGlvbi5ocmVmLmluZGV4T2YoInBhbi5iYWlkdS5jb20vc2hhcmUvaW5pdCIpID4gLTE7CgogICAgaWYgKGlzQXV0b1VubG9ja1NpdGUpIHsKICAgICAgICB2YXIgaW50ZXIgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChBdXRvVW5sb2NrLmRvbmUpIHsKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXIpOwogICAgICAgICAgICAgICAgaGFuZGxlKEF1dG9VbmxvY2spOwogICAgICAgICAgICB9CiAgICAgICAgfSwgNTApOwogICAgfSBlbHNlIGlmIChpc0JhaWR1U2hhcmVJbml0U2l0ZSkgewogICAgICAgIHVubG9ja19iYWlkdSgpOwogICAgfQp9CgpmdW5jdGlvbiBoYW5kbGUoYXV0b1VubG9jaykgewogICAgY29uc3QgdXJsID0gYXV0b1VubG9jay51cmw7CiAgICBjb25zdCBwYXNzd29yZCA9IGF1dG9VbmxvY2sucGFzc3dvcmQ7CiAgICBjb25zdCBpc01lZ2EgPSB1cmwuaW5kZXhPZigibWVnYS5ueiIpID4gLTE7CiAgICBjb25zdCBpc0JhaWR1UGFuID0gdXJsLmluZGV4T2YoInBhbi5iYWlkdS5jb20iKSA+IC0xOwoKCiAgICBpZiAoaXNCYWlkdVBhbikgewogICAgICAgIGhhbmRsZUJhaWR1KHVybCwgcGFzc3dvcmQpOwogICAgfSBlbHNlIGlmIChpc01lZ2EpIHsKICAgICAgICBoYW5kbGVNZWdhKHVybCwgcGFzc3dvcmQpOwogICAgfQp9CgpmdW5jdGlvbiBoYW5kbGVCYWlkdSh1cmwsIHBhc3N3b3JkKSB7CiAgICB2YXIgYXV0b1VubG9jayA9IHsKICAgICAgICB1cGRhdGVUaW1lOiBEYXRlLm5vdygpLAogICAgICAgIHVybDogdXJsLAogICAgICAgIHBhc3N3b3JkOiBwYXNzd29yZAogICAgfTsKICAgIGNvbnNvbGUuZ3JvdXAoIkF1dG9VbmxvY2tTaXRlID4+IHBhbi5iYWl1LmNvbToiKTsKICAgIGNvbnNvbGUuaW5mbyhhdXRvVW5sb2NrKTsKICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTsKCiAgICAvLyBpbml0IHRhYgogICAgR01fZ2V0VGFiKGZ1bmN0aW9uIChvKSB7CiAgICAgICAgdmFyIHRoaXNfdGFiX2RhdGEgPSBvOwogICAgICAgIHRoaXNfdGFiX2RhdGFbVEFCX0lEXSA9IHRydWU7CiAgICAgICAgdGhpc190YWJfZGF0YS5BdXRvVW5sb2NrID0gYXV0b1VubG9jazsKICAgICAgICBHTV9zYXZlVGFiKHRoaXNfdGFiX2RhdGEpOwoKICAgICAgICBqdW1wU2l0ZSh1cmwpOwogICAgfSk7Cgp9CgpmdW5jdGlvbiBoYW5kbGVNZWdhKHVybCwgcGFzc3dvcmQpIHsKICAgIHZhciB0YXJnZXRVUkwgPSB1cmwgKyBwYXNzd29yZDsKICAgIGp1bXBTaXRlKHRhcmdldFVSTCk7Cn0KCi8vIOabtOaWsOaVsOaNruWQjui3s+i9rOWIsOe9keebmApmdW5jdGlvbiBqdW1wU2l0ZSh1cmwpIHsKICAgIHZhciB0YXJnZXRVUkwgPSB1cmw7CiAgICBpZiAodGFyZ2V0VVJMLmluZGV4T2YoImh0dHAiKSAhPT0gMCkgewogICAgICAgIHRhcmdldFVSTCA9ICJodHRwOi8vIiArIHRhcmdldFVSTDsKICAgIH0KICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgIGlmICh0YXJnZXRVUkwpIHsKICAgICAgICAgICAgbG9jYXRpb24uaHJlZiA9IHRhcmdldFVSTDsKICAgICAgICB9CiAgICB9LCBTSVRFX1dBSVRfVElNRSk7Cn0KCmZ1bmN0aW9uIHVubG9ja19iYWlkdSgpIHsKICAgIHZhciBhdXRvVW5sb2NrID0gbnVsbDsKCiAgICBHTV9nZXRUYWIoZnVuY3Rpb24gKG8pIHsKICAgICAgICB2YXIgdGFiID0gbzsKICAgICAgICBpZiAodGFiW1RBQl9JRF0pIHsKICAgICAgICAgICAgYXV0b1VubG9jayA9IHRhYi5BdXRvVW5sb2NrOwogICAgICAgICAgICBjb25zb2xlLmdyb3VwKCJBdXRvVW5sb2NrOiIpOwogICAgICAgICAgICBjb25zb2xlLmluZm8oYXV0b1VubG9jayk7CiAgICAgICAgICAgIGNvbnNvbGUuZ3JvdXBFbmQoKTsKICAgICAgICB9CgogICAgICAgIGlmIChhdXRvVW5sb2NrKSB7CiAgICAgICAgICAgIGNvbnN0IG5vd1RpbWUgPSBEYXRlLm5vdygpOwogICAgICAgICAgICBjb25zdCB1cGRhdGVUaW1lID0gcGFyc2VJbnQoYXV0b1VubG9jay51cGRhdGVUaW1lKSB8fCAwOwogICAgICAgICAgICBjb25zdCBub3RPdmVydGltZSA9IChub3dUaW1lIC0gdXBkYXRlVGltZSkgPCBEQVRBX09WRVJfVElNRTsKCiAgICAgICAgICAgIGlmIChub3RPdmVydGltZSkgewogICAgICAgICAgICAgICAgX3VubG9ja19iYWlkdShhdXRvVW5sb2NrLnBhc3N3b3JkKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIuaVsOaNruW3sui2heaXtu+8gSIpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfSk7Cgp9CgpmdW5jdGlvbiBfdW5sb2NrX2JhaWR1KHBhc3N3b3JkLCBjb3VudCkgewogICAgY29uc3QgTUFYX1RJTUUgPSAxMCAqIDEwMDA7CiAgICBjb25zdCBJTlRFUlZBTCA9IDUwOwogICAgY29uc3QgTUFYX0NPVU5UID0gTUFYX1RJTUUgLyBJTlRFUlZBTDsKICAgIGNvdW50ID0gY291bnQgfHwgMTsKCiAgICBjb25zb2xlLmxvZygicGFzc3dvcmQ6ICIgKyBwYXNzd29yZCArICIgY291bnQ6ICIgKyBjb3VudCk7CiAgICBpZiAoY291bnQgPCBNQVhfQ09VTlQgJiYgcGFzc3dvcmQpIHsKCiAgICAgICAgdmFyIGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoUEFOX0JBSURVX0NPTS5JbnB1dElEKTsKICAgICAgICB2YXIgc3VibWl0QnRuID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoUEFOX0JBSURVX0NPTS5TdWJtaXRCdG5JRCk7CiAgICAgICAgaWYgKGlucHV0ICYmIHN1Ym1pdEJ0bikgewogICAgICAgICAgICBpbnB1dC52YWx1ZSA9IHBhc3N3b3JkOwogICAgICAgICAgICBzdWJtaXRCdG4uY2xpY2soKTsKICAgICAgICB9CgogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBfdW5sb2NrX2JhaWR1KHBhc3N3b3JkLCBjb3VudCArIDEpOwogICAgICAgIH0sIElOVEVSVkFMKTsKICAgIH0KfQoKCmNvbnN0IFRBQl9JRCA9ICJUYWJfQXV0b1VubG9jayI7Cgpjb25zdCBQQU5fQkFJRFVfQ09NID0gewogICAgU3VibWl0QnRuSUQ6ICJzdWJtaXRCdG4iLAogICAgSW5wdXRJRDogImFjY2Vzc0NvZGUiCn07CgoKLy8KLy8gR01fZ2V0VGFicyhmdW5jdGlvbiAoZGIpIHsKLy8gICAgIHZhciBhbGxfdGFicyA9IGRiOwovLyAgICAgdmFyIHRhYiA9IG51bGw7Ci8vICAgICAvLyBmb3IgKHZhciBpIGluIGFsbF90YWJzKSB7Ci8vICAgICAvLyAgICAgdGFiID0gYWxsX3RhYnNbaV07Ci8vICAgICAvLwovLyAgICAgLy8gICAgIGlmICh0YWJbVEFCX0lEXSkgewovLyAgICAgLy8gICAgICAgICBhdXRvVW5sb2NrID0gdGFiLkF1dG9VbmxvY2s7Ci8vICAgICAvLyAgICAgICAgIGNvbnNvbGUuaW5mbyhhdXRvVW5sb2NrKTsKLy8gICAgIC8vICAgICAgICAgY29uc29sZS5pbmZvKHRhYik7Ci8vICAgICAvLyAgICAgICAgIGJyZWFrOwovLyAgICAgLy8gICAgIH0KLy8gICAgIC8vIH0KLy8gfSk7CgpmdW5jdGlvbiBzZXRQcmVmKG5hbWUsIHZhbHVlKSB7IC8vICBjcm9zcy1icm93c2VyIEdNX3NldFZhbHVlCiAgICB2YXIgYSA9ICcnLCBiID0gJyc7CiAgICB0cnkgewogICAgICAgIGEgPSB0eXBlb2YgR01fc2V0VmFsdWUudG9TdHJpbmc7CiAgICAgICAgYiA9IEdNX3NldFZhbHVlLnRvU3RyaW5nKCkKICAgIH0gY2F0Y2ggKGUpIHsKICAgIH0KICAgIGlmICh0eXBlb2YgR01fc2V0VmFsdWUgPT09ICdmdW5jdGlvbicgJiYKICAgICAgICAoYSA9PT0gJ3VuZGVmaW5lZCcgfHwgYi5pbmRleE9mKCdub3Qgc3VwcG9ydGVkJykgPT09IC0xKSkgewogICAgICAgIEdNX3NldFZhbHVlKG5hbWUsIHZhbHVlKTsgLy8gR3JlYXNlbW9ua2V5LCBUYW1wZXJtb25rZXksIEZpcmVmb3ggZXh0ZW5zaW9uCiAgICB9IGVsc2UgewogICAgICAgIHZhciBscyA9IG51bGw7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbHMgPSB3aW5kb3cubG9jYWxTdG9yYWdlIHx8IG51bGwKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgfQogICAgICAgIGlmIChscykgewogICAgICAgICAgICByZXR1cm4gbHMuc2V0SXRlbShuYW1lLCB2YWx1ZSk7IC8vIENocm9tZSBzY3JpcHQsIE9wZXJhIGV4dGVuc2lvbnMKICAgICAgICB9CiAgICB9Cn0KCmZ1bmN0aW9uIGdldFByZWYobmFtZSkgeyAvLyBjcm9zcy1icm93c2VyIEdNX2dldFZhbHVlCiAgICB2YXIgYSA9ICcnLCBiID0gJyc7CiAgICB0cnkgewogICAgICAgIGEgPSB0eXBlb2YgR01fZ2V0VmFsdWUudG9TdHJpbmc7CiAgICAgICAgYiA9IEdNX2dldFZhbHVlLnRvU3RyaW5nKCkKICAgIH0gY2F0Y2ggKGUpIHsKICAgIH0KICAgIGlmICh0eXBlb2YgR01fZ2V0VmFsdWUgPT09ICdmdW5jdGlvbicgJiYKICAgICAgICAoYSA9PT0gJ3VuZGVmaW5lZCcgfHwgYi5pbmRleE9mKCdub3Qgc3VwcG9ydGVkJykgPT09IC0xKSkgewogICAgICAgIHJldHVybiBHTV9nZXRWYWx1ZShuYW1lLCBudWxsKTsgLy8gR3JlYXNlbW9ua2V5LCBUYW1wZXJtb25rZXksIEZpcmVmb3ggZXh0ZW5zaW9uCiAgICB9IGVsc2UgewogICAgICAgIHZhciBscyA9IG51bGw7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgbHMgPSB3aW5kb3cubG9jYWxTdG9yYWdlIHx8IG51bGwKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgfQogICAgICAgIGlmIChscykgewogICAgICAgICAgICByZXR1cm4gbHMuZ2V0SXRlbShuYW1lKTsgLy8gQ2hyb21lIHNjcmlwdCwgT3BlcmEgZXh0ZW5zaW9ucwogICAgICAgIH0KICAgIH0KfQ=="},{"name":"My Novel Reader","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":true,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http://read.qidian.com/BookReader/vol,*,*.aspx","*/List.htm","*/List.html","*/List.shtml","*/index.htm","*/index.html","*/index.shtml","*/Default.htm","*/Default.html","*/Default.shtml"],"orig_includes":["*://read.qidian.com/*,*.aspx","*://readbook.qidian.com/bookreader/*,*.html","*://read.qidian.com/BookReaderOld/*,*.aspx","*://read.qidian.com/BookReader/*,*.aspx","*://wwwploy.qidian.com/BookReader/*,*.aspx","*://free.qidian.com/Free/ReadChapter.aspx?*","*://www.qdmm.com/BookReader/*,*.aspx","*://www.qdwenxue.com/BookReader/*,*.aspx","*://chuangshi.qq.com/read/bookreader/*.html*","*://chuangshi.qq.com/*bk/*/*-r-*.html*","*://yunqi.qq.com/*bk/*/*.html","*://dushu.qq.com/read.html?bid=*","*://www.jjwxc.net/onebook.php?novelid=*","*://book.zongheng.com/chapter/*/*.html","*://www.xxsy.net/books/*/*.html","*://book.zhulang.com/*/*.html","*://www.17k.com/chapter/*/*.html","*://mm.17k.com/chapter/*/*.html","*://www.kanxia.net/k/*/*/*.html","*://www.qingdi.com/files/article/html/*/*/*.html","*://www.xkzw.org/*/*.html","*://shouda8.com/*/*.html","*://novel.hongxiu.com/*/*/*.shtml","*://www.readnovel.com/novel/*.html","*://tieba.baidu.com/p/*","*://booklink.me/*","*://2.booklink.me/*","*://www.shumilou.co/*/*.html","*://www.shumilou.us/*/*.html","*://www.shumilou.net/*/*/*.html","*://www.wcxiaoshuo.com/wcxs-*-*/","*://www.xiaoshuoz.com/wcxs-*-*/","*://www.quledu.com/wcxs-*-*/","*://www.ranwen.cc/*/*/*/*.html","*://www.ranwen.net/files/article/*/*/*.html","*://www.ranwena.com/files/article/*/*/*.html","*://www.64mi.com/*/*/*/*.html","*://www.bxs.cc/*/*.html*","*://www.laishuwu.com/html/*/*/*.html","*://www.binhuo.com/html/*/*/*.html","*://www.haoqi99.com/haoqi99/*/*/*.shtml","*://www.shuhe.cc/*/*/","*://www.dudukan.net/html/*/*/*.html","*://www.hahawx.com/*/*/*.htm","*://www.zhuzhudao.com/txt/*/*/","*://www.zhuzhudao.cc/txt/*/*/","*://www.dahaomen.net/txt/*/*/","*://www.tadu.com/book/*/*/","*://www.aishoucang.com/*/*.html","*://www.wanshuba.com/Html/*/*/*.html","*://www.zhuishu.net/files/article/html/*/*/*.html","*://www.sqsxs.com/*/*/*.html*","*://www.caiwei.tw/html/*/*.html","*://www.hotsk.com/Html/Book/*/*/*.shtml","*://www.92to.com/*/*/*.html","*://www.qirexs.com/read-*-chapter-*.html","*://www.du00.com/read/*/*/*.html","*://www.qishuwu.com/*/*/","*://www.wandoou.com/book/*/*.html","*://www.6yzw.org/*/*.html","*://www.6yzw.com/*/*.html","*://www.daomengren.com/*/*.html","*://muyuge.com/*/*.html","*://www.muyuge.net/*/*.html","*://bbs.vyming.com/novel-read-*-*.html","*://www.9imw.com/novel-read-*-*.html","*://www.23zw.com/olread/*/*/*.html","*://www.50zw.com/book_*/*.html","*://www.xiangcunxiaoshuo.com/shu/*/*.html","*://www.lwxs520.com/books/*/*/*.html","*://www.zashu.net/books/*/*/*.html","*://www.piaotian.net/html/*/*/*.html","*://www.yunlaige.com/html/*/*/*.html","*://www.cfwx.net/files/article/html/*/*/*.html","*://www.qiuwu.net/html/*/*/*.html","*://www.fengwu.org/html/*/*/*.html","*://www.wenxue8.org/html/*/*/*.html","*://www.xs84.com/*_*/*","*://www.geiliwx.com/GeiLi/*/*/*.shtml*","*://www.123yq.com/read/*/*/*.shtml","*://www.123yq.org/read/*/*/*.shtml","*://www.dhzw.com/book/*/*/*.html","*://www.aszw.com/book/*/*/*.html","*://www.xsbashi.com/*_*/","*://www.vodtw.com/Html/Book/*/*/*.html","*://www.fhxs.com/read/*/*/*.shtml","*://www.snwx.com/book/*/*/*.html","*://www.33yq.com/read/*/*/*.shtml","*://www.jiaodu8.com/*/*/*/*.html","*://www.fktxt.com/book/*/*.html","*://www.186s.cn/files/article/html/*/*/*.html","*://www.6xs.cn/xs/*/*/*.html","*://www.chaojiqiangbing.com/book/*/*/*.html","*://book.moka123.com/book/*/*/*.html","*://www.suimeng.com/files/article/html/*/*/*.html","*://www.hao662.com/haoshu/*/*/*.html","*://www.tsxs.cc/files/article/html/*/*/*.html","*://www.ziyuge.com/*/*/*/*/*.html","*://book.sfacg.com/Novel/*/*/*/","*://www.7dsw.com/book/*/*/*.html","*://www.d586.com/*/*/","*://www.bookgew.com/Html/Book/*/*/*.htm","*://read.shuhaha.com/Html/Book/*/*/*.html","*://www.shuhaha.com/Html/Book/*/*/*.html","*://www.biqi.me/files/article/html/*/*/*.html","*://www.ttzw.com/book/*/*.html","*://www.uukanshu.com/*/*/*.html","*://www.uukanshu.net/*/*/*.html","*://www.173ed.com/read/*/*.html","*://www.a240.com/read/*/*.html","*://www.zhuishu.com/*/*.html","*://www.shuangde.cc/*/*.html","*://www.shenmaxiaoshuo.com/ml-*-*/","*://www.86kankan.com/read/*/*.html","*://www.fkzww.com/*/*/*.html","*://www.151kan.com/*/*/*/*.html","*://www.bookabc.net/*/*/*.html","*://www.xshuotxt.com/*/*/*/*.html","*://www.doulaidu.com/*/*/*.html","*://www.d586.com/*/*/","*://www.kanshu.la/book/*/*html","*://www.wtcxs.com/files/article/html/*/*/*.html","*://www.5du5.com/book/*/*/*.html","*://book.kanunu.org/*/*/*.html","*://www.kanunu8.com/book*/*.html","*://paitxt.com/*/*/*.html","*://www.shunong.com/yuedu/*/*/*.html","*://book.yayacms.com/*/book_*_*.html","*://www.yqhhy.cc/*/*/*.html","*://www.nuoqiu.com/static/*/*.html","*://www.17yue.com/*/*/*.html","*://dukeba.com/book/*/*/*.shtml","*://www.wenchangshuyuan.com/html/*/*/*.html","*://www.pofeng.net/xiaoshuo/*/*.html","*://www.epzww.com/book/*/*","*://*.xiaoshuokan.com/haokan/*/*.html","*://www.wobudu.com/*/*.html","*://www.qb5.com/xiaoshuo/*/*/*.html","*://www.23us.com/html/*/*/*.html","*://www.23us.cc/html/*/*/*.html","*://www.23wx.com/html/*/*/*.html","*://www.xs222.com/html/*/*/*.html","*://www.bixiage.com/*/*/*/*.html","*://www.ranwenxiaoshuo.com/files/article/html/*/*/*.html","*://www.ranwenxiaoshuo.com/*/*-*-*.html","*://www.bjxiaoshuo.com/bjxs-*-*/","*://www.59shuku.com/xiaoshuo/*/*.htm","*://www.16kbook.org/Html/Book/*/*/*.shtml","*://www.dixiaoshuo.com/Html/*/*.html","*://www.nieshu.com/Book/*/*/*.shtml","*://www.tlxsw.com/files/article/html/*/*/*.html","*://www.1kanshu.com/files/article/html/*/*/*.html","*://www.uutxt.org/book/*/*/*.html","*://www.5800.cc/*/*/*/*.html","*://www.biquge.com/*/*.html","*://www.biquge.la/book/*/*.html","*://www.qududu.com/book/*/*/*.html","*://www.free97.cn/book/*/*/*.html","*://www.122s.com/book/*/*.html","*://www.123du.net/dudu-*/*/*.html","*://www.123du.cc/dudu-*/*/*.html","*://www.123du.net/book/*/*.html","*://www.hwafa.com/*/*.html","*://www.qmshu.com/html/*/*/*.html","*://dlzw.cc/article-*-*.html","*://www.shushu5.com/read/*/*.html","*://www.xiaoyanwenxue.com/files/article/html/*/*/*.html","*://www.3gsc.com.cn/bookcon/*_*_*","*://www.bj-ibook.cn/book/*/*/*.htm","*://www.baoliny.com/*/*.html","*://www.dajiadu.net/files/article/html/*/*/*.html","*://www.yankuai.com/files/article/html/*/*/*.html","*://www.docin.net/*/*.html","*://www.dushuge.net/html/*/*/*.html","*://www.xunshu.org/xunshu/*/*/*.html","*://www.moneyren.com/book/*/*/*.shtml","*://wemaxfilipino.com/*/*/*.html","*://www.85618892.cn/xiaoshuo/*/*/*.shtml","*://www.bookba.net/Html/Book/*/*/*.html","*://www.moksos.com/*/*/*.html","*://dudu8.net/novel/*/*/*.html","*://www.dawenxue.net/html/*/*/*.html","*://www.yanmoxuan.org/book/*/*/*.html","*://www.duyidu.com/xiaoshuo/*/*/*.html","*://www.69zw.com/xiaoshuo/*/*/*.html","*://www.kan7.com/xiaoshuo/*/*/*.html","*://www.laishu.com/book/*/*/*.shtml","*://www.bxwx.org/b/*/*/*.html","*://www.bxzw.org/*/*/*/*.shtml","*://www.360118.com/html/*/*/*.html","*://www.59to.com/files/article/xiaoshuo/*/*/*.html","*://www.dyzww.com/cn/*/*/*.html","*://www.9wh.net/*/*/*.html","*://www.luoqiu.net/html/*/*/*.html","*://www.luoqiu.com/html/*/*/*.html","*://www.epzw.com/files/article/html/*/*/*.html","*://www.dashubao.co/book/*/*/*.html","*://b.faloo.com/p/*/*.html","*://www.baikv.com/*/*.html","*://www.66721.com/*/*/*.html","*://www.3dllc.com/html/*/*/*.html","*://www.xstxt.com/*/*/","*://www.zzzcn.com/3z*/*/","*://www.zzzcn.com/modules/article/App.php*","*://www.nilongdao.com/book/*/*/*.html","*://xs321.net/*/*/","*://read.guanhuaju.com/files/article/html/*/*/*.html","*://www.book108.com/*/*/*.html","*://5ycn.com/*/*/*.html","*://www.zhaoxiaoshuo.com/chapter-*-*-*/","*://*zbzw.com/*/*.html","*://manghuangji.cc/*/*.html","*://www.aiqis.com/*/*.html","*://www.fftxt.net/book/*/*.html","*://www.5kwx.com/book/*/*/*.html","*://www.uuxiaoshuo.net/html/*/*/*.html","*://www.sanyyo.org/*.html","*://www.chinaisbn.com/*/*/*.html","*://www.caihongwenxue.com/Html/Book/*/*/*.html","*://www.shushuw.cn/shu/*/*.html","*://www.78xs.com/article/*/*/*.shtml","*://www.woaixiaoshuo.com/xiaoshuo/*/*/*.html","*://www.ty2016.com/book/*/*.html","*://wx.ty2016.com/*/*/*.html","*://www.my285.com/*/*/*/*.htm","*://www.5858xs.com/html/*/*/*.html","*://book.58xs.com/html/*/*/*.html","*://book.mihua.net/*/*/*/*.html","*://www.hjwzw.com/Book/Read/*,*","*://www.hjwzw.com/Book/Read/*_*","*://www.365essay.com/*/*.htm","*://www.gengxin8.com/read/*/*.html","*://www.365xs.org/books/*/*/*.html","*://www.wuruo.com/files/article/html/*/*/*.html","*://*.8shuw.net/book/*/*.html","*://www.pashuw.com/BookReader/*/*.html","*://read.shanwen.com/html/*/*/*.html","*://www.qqxs.cc/xs/*/*/*.html","*://www.69shu.com/txt/*/*","*://www.e8zw.com/book/*/*/*.html","*://www.biquge.tw/*_*/*.html","*://www.8535.org/*/*/*.html*","*://www.yfzww.com/books/*/*/*.htm","*://www.lewen8.com/lw*/*.html","*://www.pinwenba.com/read/*/*.html","*://down1.qidian.com/bookall/*.htm*","*://www.77nt.com/*/*.html","*://www.quanbenba.com/yuedu/*/*/*.html","*://www.sto.cc/book-*-*.html","*://www.151xs.com/wuxiazuoxiong/*/chapter/*/","*://www.qududu.net/book/*/*/*.html","*://www.qingdou.cc/chapter*","*://www.shuyuewu.com/kan*","*://www.1553.net/*/*","*://www.269s.com/*/*/*","*://www.33yq.com/read/*/*/*.shtml","*://www.50zw.co/book_*/*.html","*://www.bqg5200.com/xiaoshuo/*/*/*.html","*://www.50zw.la/book_*/*.html","*://www.qu.la/book/*/*.html","*://www.luoqiu.com/read/*/*.html","*://www.biqugezw.com/*/*.html","*://www.54tushu.com/book_library/chaptershow/theId/*.html","*://www.snwx8.com/book/*/*/*.html","*://read.qidian.com/chapter/*","*://www.23zw.me/olread/*/*/*.html","*://www.piaotian.com/html/*/*/*.html","*://www.dhzw.org/book/*/*/*.html","*://www.biqiuge.com/book/*/*.html","*://www.baquge.com/files/article/html/*/*/*.html","*://www.baquge.tw/files/article/html/*/*/*.html","*://www.qu.la/book/*/*.html","*://www.bxwx9.org/b/*/*/*.html","*://www.miaobige.com/*/*/*.html","*://www.remenxs.com/du_*/*/","*://www.shuhai.com/read/*/*.html","*://www.hbooker.com/chapter/book_chapter_detail/*","*://www.mianhuatang.la/*/*/*.html","*://www.paomov.com/*/*/*.html","*://www.moyuanwenxue.com/xiaoshuo/*/*/*.htm","*://www.ggdown.com/modules/article/reader.php?aid=*","*://233yq.com/xiaoshuo/*.html","*://www.biquge.com.tw/*/*.html","*://www.daizhuzai.com/*/*.html","*://www.mywenxue.com/xiaoshuo/*/*/*.htm","*://www.yueduyue.com/*/*.html","*://www.67shu.com/*/*/*.html","*://www.wangshuge.com/books/*/*/*.html","*://www.23sw.net/*/*/*.html","*://www.ybdu.com/xiaoshuo/*/*/*.html","*://www.shudaizi.org/book/*/*.html","*://www.ymoxuan.com/book/*/*/*.html","*://www.67shu.com/*/*/*.html","*://www.bookxuan.com/*/*.html","*://wap.yc.ireader.com.cn/book/*/*/","*://m.jjwxc.net/book2/*/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"booklink_enable":"btrue","copyCurTitle":"btrue","debug":"bfalse"},"ts":1507278856028},"enabled":true,"position":8,"uuid":"c5c0788e-d542-49eb-8e6a-f64cb04727cb","source":""},{"name":"EX-百度云盘","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link?*","*://yun.baidu.com/share/link?*","*://eyun.baidu.com/s/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856035},"enabled":true,"position":9,"file_url":"https://greasyfork.org/scripts/26638-ex-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98/code/EX-%E7%99%BE%E5%BA%A6%E4%BA%91%E7%9B%98.user.js","uuid":"3a952e70-597c-41b1-96d0-12ccf68a0644","source":""},{"name":"AC-baidu： 优化百度、搜狗、谷歌搜索结果之重定向去除+去广告+favicon","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["*"],"orig_excludes":[],"orig_includes":["https://www.baidu.com/*","http://www.baidu.com/*","http://www.sogou.com/web*","https://www.sogou.com/web*","https://www.so.com/s?*","https://www.so.com/s?*","/^https?://\\w+.bing.com/.*/","/^https?\\:\\/\\/encrypted.google.[^\\/]+/","/^https?\\:\\/\\/www.google.[^\\/]+/","https://*.zhidao.baidu.com/*","https://zhidao.baidu.com/*","*.zhihu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":["baidu.com","*"],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856041},"enabled":true,"position":10,"file_url":"https://greasyfork.org/scripts/14178-ac-baidu-%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6-%E6%90%9C%E7%8B%97-%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%B9%8B%E9%87%8D%E5%AE%9A%E5%90%91%E5%8E%BB%E9%99%A4-%E5%8E%BB%E5%B9%BF%E5%91%8A-favicon/code/AC-baidu%EF%BC%9A%20%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E3%80%81%E6%90%9C%E7%8B%97%E3%80%81%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E7%BB%93%E6%9E%9C%E4%B9%8B%E9%87%8D%E5%AE%9A%E5%90%91%E5%8E%BB%E9%99%A4+%E5%8E%BB%E5%B9%BF%E5%91%8A+favicon.user.js","uuid":"3fca38ba-08b5-4c5a-bcd6-f1e09c12a4c3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgQUMtYmFpZHXvvJog5LyY5YyW55m+5bqm44CB5pCc54uX44CB6LC35q2M5pCc57Si57uT5p6c5LmL6YeN5a6a5ZCR5Y676ZmkK+WOu+W5v+WRiitmYXZpY29uCi8vIEBpY29uICAgICAgICAgICAgaHR0cHM6Ly9jb2RpbmcubmV0L3UvemIyMjcvcC96YkltZy9naXQvcmF3L21hc3Rlci9pbWcwL2ljb24uanBnCi8vIEBncmFudAkJICAgIEdNX3htbGh0dHBSZXF1ZXN0Ci8vIEBhdXRob3IgICAgICAgICAgQUMKLy8gQGNyZWF0ZSAgICAgICAgICAyMDE1LTExLTI1Ci8vIEBydW4tYXQgICAgICAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQHZlcnNpb24gICAgICAgICAxMi4xMQovLyBAY29ubmVjdCAgICAgICAgICoKLy8gQGluY2x1ZGUgICAgICAgICBodHRwczovL3d3dy5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICAgICAgIGh0dHA6Ly93d3cuYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgICAgICBodHRwOi8vd3d3LnNvZ291LmNvbS93ZWIqCi8vIEBpbmNsdWRlICAgICAgICAgaHR0cHM6Ly93d3cuc29nb3UuY29tL3dlYioKLy8gQGluY2x1ZGUgICAgICAgICBodHRwczovL3d3dy5zby5jb20vcz8qCi8vIEBpbmNsdWRlICAgICAgICAgaHR0cHM6Ly93d3cuc28uY29tL3M/KgovLyBAaW5jbHVkZSAgICAgICAgIC9eaHR0cHM/Oi8vXHcrLmJpbmcuY29tLy4qLwovLyBAaW5jbHVkZSAgICAgICAgIC9eaHR0cHM/XDpcL1wvZW5jcnlwdGVkLmdvb2dsZS5bXlwvXSsvCi8vIEBpbmNsdWRlICAgICAgICAgL15odHRwcz9cOlwvXC93d3cuZ29vZ2xlLlteXC9dKy8KLy8gQGluY2x1ZGUgICAgICAgICBodHRwczovLyouemhpZGFvLmJhaWR1LmNvbS8qCi8vIEBpbmNsdWRlICAgICAgICAgaHR0cHM6Ly96aGlkYW8uYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgICAgICAqLnpoaWh1LmNvbS8qCi8vIEBob21lLXVybCAgICAgICAgaHR0cHM6Ly9ncmVhc3lmb3JrLm9yZy96aC1UVy9zY3JpcHRzLzE0MTc4Ci8vIEBob21lLXVybDIgICAgICAgaHR0cHM6Ly9naXRodWIuY29tL2xhbmdyZW4xMzUzL0dNX3NjcmlwdAovLyBAbmFtZXNwYWNlICAgICAgIDEzNTM0NjQ1MzlAcXEuY29tCi8vIEBjb3B5cmlnaHQgICAgICAgMjAxNywgQUMKLy8gQGRlc2NyaXB0aW9uICAgICAxLue5numBjueZvuW6puOAgeaQnOeLl+OAgeiwt+atjOOAgeWlveaQnOaQnOe0oue1kOaenOS4reeahOiHquW3seeahOi3s+i9iemPiOaOpe+8jOebtOaOpeioquWVj+WOn+Wni+e2sumggS3lj43mraPpg73og73nnIvmh4IgMi7ljrvpmaTnmb7luqbnmoTlpJrkvZnlub/lkYogMy7mt7vliqBGYXZpY29u5pi+56S6IDQu6aG16Z2iQ1NTIDUu5re75Yqg6K6h5pWwIDYu5byA5YWz6YCJ5oup5Lul5LiK5Yqf6IO9Ci8vIEBsYXN0bW9kaWZpZWQgICAgMjAxNy0wOS0yNwovLyBAZmVlZGJhY2stdXJsICAgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtVFcvc2NyaXB0cy8xNDE3OAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMTEuMDItVjEyLjExIOaWsOWinuWcqOaJi+acum1vYmlsZeaooeW8j+S4i+eZvuW6pueahOmHjeWumuWQkeWkhOeQhu+8jOWFtuS9mee9keermeS7peWQjuWGjeivtOWQp++8jOS8sOiuoeayoeaciemcgOaxggovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMTAuMjctVjEyLjEwIDEu5L+u5aSN6YC85q275by66L+r55eH55qE6Zeu6aKY77ybMi7np7vpmaTlrozmlbTmqKHlvI8t6YG/5YWN5Ye6546w5ZCE56eN5oum5oiq77ybMy7kv67lpI13d3cuc28uY29t55qE6YeN5a6a5ZCR6Zeu6aKYCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wOS4xOC1WMTIuOSDmm7TmlrDljp/lm6DvvJoxLuWLv+W/mOWbveiAuzkxOO+8mzIu5pu05paw55m+5bqm5YG25bCU6YeN5a6a5ZCR5rKh5oiQ5Yqf55qE6Zeu6aKY77ybMy7kv67lpI3pobXpnaLnmoTlsI/pl67popjvvJs0LuaWsOWinuaWh+Wtl+S4i+WIkue6v+W8gOWFswovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMTUtVjEyLjgg57Sn5oCl5L+u5aSN6LC35q2M5LiK6aG16Z2i5Y2h6aG/55qE6Zeu6aKY77yM5o6S5p+l5b6X55+l5Li655m+5bqm6KeE5YiZ55qE5omp5bGV5Ye65LqG6Zeu6aKY77yM6Z2e5bi45oSf6LCi5LyX5aSa5pyL5Y+L55qE5pSv5oyB77yM5rKh5pyJ5L2g5Lus55qE5Y+N6aaI5bCx5rKh5pyJ6L+Z5Liq6ISa5pys44CC5L+u5aSN5bm256e76Zmk5LqG55m+5bqm5a6Y5pa56YeH55So55qE5paw5pa55byP5bm/5ZGK5qih5byP77yM6LKM5Ly85Y+q5ZyoY2hyb21l5LiK5Ye6546wCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wOS4xMy1WMTIuNyAxLuS/ruWkjU7lubTliY3mm7TmlrDlr7zoh7TnmoTpg6jliIbnvZHlnYDph43lrprlkJHml6DmlYjvvIznu6fnu63kvb/nlKhHRVTmlrnms5XvvIzlm6DkuLrlpb3kupvnvZHnq5nkuI3mlK/mjIFIRUFE5pa55rOV77yM6I635Y+W5oiQ5Yqf5LmL5ZCO5bCx5pat5byA77yM5bC96YeP5YeP5bCR5LqG572R57uc5byA5pSvOyAyLuS/ruWkjeaQnOeLl+eahOmDqOWIhuaQnOe0ouW8guW4uDsgMy7kv67lpI3nmb7luqblnKhjaHJvbWU2MeS4iueahOmTvuaOpeW8guW4uOmXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMTMtVjEyLjYg5byA5a2m5LmL5ZCO55qE56ys5LqM5Liq54mI5pys77yM5L+u5aSN5LiK5qyh5pu05paw5a+86Ie055qE55m+5bqm6aaW6aG16ZSZ5Lmx77yM5L+u5aSNZmlyZWZveOS4iueahOinpuWPke+8jOS/ruWkjVN1cGVyUHJlbG9hZGVy55qE57+76aG15bGV56S6Ci8vIEBub3RlICAgICAgICAgICAgMjAxNy4wOS4xMi1WMTIuNSDlvIDlrabkuYvlkI7nmoTnrKzkuIDkuKrniYjmnKzvvIzkv67lpI3lnKjnmb7luqbkuIrlgbblsJTkuI3op6blj5HnmoTpl67popjjgJDku47pppbpobXmkJzntKLnmoTml7blgJnop6blj5HjgJHvvIzlhbbmrKHlnKjlhYTlvJ9YWFgo5oiR5Lmf5b+Y5LqG5ZOq5LiqUF9QKeeahOW4ruWKqeS4i++8jOS/ruWkjeS6huWBtuWwlOS8muWFqOWxj+eJueauiuaOqOW5v+aooeW8j+eahOmXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMDYtVjEyLjQg5L+u5aSN5LiK5Liq54mI5pys5pu05paw5a+86Ie055qE55m+5bqm55+l6YGT5YaN5qyh5byC5bi46Zeu6aKYO+abtOaWsOefpeS5juS4iueahOmHjeWumuWQkemXrumimC3oh6rlt7HnmoTohJrmnKwKLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA5LjA2LVYxMi4zIOS/ruWkjeWPjOWIl+eahOaooeW8j+eahOaYvuekuumXrumimO+8jOWmguaenOaciemXrumimOW4jOacm+WPjemmiOS4gOS4i++8jOmhuuS+v+WIh+aNomNzc+adpea6kAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMDQtVjEyLjIg54m55oSP5L+u5aSN5ZyoVmlvbGVudE1vbmtleeS4iueahOiuvue9ruaXoOaViOeahOmXrumimOS7peWPiuWcqDM2MOa1j+iniOWZqOS4iueahOiuvue9ruS4jeaYvuekuumXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMDQtVjEyLjEg55m+5bqm6aG16Z2i55u05o6l5re75Yqg6K6+572u5YWl5Y+j77ybMzYw5rWP6KeI5Zmo6K6+572u5Y+v6IO95Zyo5bqV6YOo6aG16Z2i77yb5pSv5oyB5Y2V5YiX5ZKM5Y+M5YiX5qih5byP77yM55WM6Z2i5pu0576O6KeCZnJvbea1rueUn0DmnKrmrYfvvJvlj6/og73mmK/mnIDov5HkuIDmrrXml7bpl7TnmoTmnIDlkI7niYjmnKzkuobvvIzopoHlvIDlrabkuoZ+fgovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMDItVjExLjEwIOa3u+WKoOS4pOS4qumAiemhue+8jOWPr+S7pemAieaLqeaAp+enu+mZpOmDqOWIhuiuvue9rgovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDkuMDEtVjExLjkg5L+u5aSN5LiK5qyh5pu05paw5a+86Ie055qE55m+5bqm5Y675bm/5ZGK5LiN54G155qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wOC4zMC1WMTEuOCDmlrDlop7vvJoxLkdN6K6+572u5qCP55uu5Lit5Yqg5YWl6K6+572uIDIuYmFpZHUt5L2/55SoSEVBROaWueW8j+iOt+WPlu+8jOWHj+WwkeaVsOaNruS8oOi+k++8jOaQnOeLl+eJueauiu+8jOe7p+e7rUdFVOaWueW8jwovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDguMjktVjExLjcg5pa55L6/5pyL5Y+L5LusLeenu+mZpOefpeS5jumHjeWumuWQkQovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDguMDctVjExLjYg6LCD5pW077ya56e76Zmk5bCP57u/54K577yM5o2i5Li654K55Ye7RmF2aWNvbuaIluiAheaYr+iuoeaVsOWZqOW8ueWHuueql+WPo++8jOabtOaNouS4uuWKoOe+pOmTvuaOpQovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDguMDYtVjExLjUg5L+u5aSN77yM5L+d5a2Y5byC5bi477yb6aKE5pyf5LmL5ZCO5Lya5re75Yqg55m+5bqm5pCc57Si6aG16Z2i55qE5aSn6LCD5pW0Ci8vIEBub3RlICAgICAgICAgICAgMjAxNy4wOC4wNS1WMTEuNCDmlrDlop7vvJrlj43ppojlkozlu7rorq7lnLDlnYDlop7liqAKLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA4LjA0LVYxMS4zIOS/ruWkje+8mueUseS6juiLseivreS4jeWlveWvvOiHtOeahOaLvOWGmemUmeivr++8jOaEn+iwonNoauWFhOW8n+aMh+WHugovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDguMDMtVjExLjIg5paw5aKe77ya6LC35q2M6ZO+5o6l5paw5qCH562+5omT5byAOyDnp7vpmaTmkJzntKLnu5Pmnpzpk77mjqXnmoTkuIvliJLnur8KLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA3LjIyLVYxMS4xIOaWsOWinuS6huW8gOWFs+aooeW8j++8jOWPr+S7peW8gOWQr+aIluiAheWFs+mXreafkOS6m+iHquW3seS4jeWWnOasoueahOWKn+iDve+8jOW8gOWFs+WcqOWPs+S4iuinku+8jOWSjFN1cGVyUHJlbG9hZOWFseeUqAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDYuMjUtVjEwLjEg5L+u5aSN5LiK5qyh5pu05paw5a+86Ie055qE55m+5bqm5Y675bm/5ZGK55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wNi4yNS1WMTAuMCDkv67lpI3kuIrmrKHmm7TmlrDlr7zoh7TnmoTnmb7luqbnn6XpgZPlho3mrKHlh7rnjrDogIHpl67popgKLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA2LjI0LVY5Ljkg5pu05paw5LqG57+76aG155qE6Zeu6aKY77yM57uP6L+H5aSa5qyh55qE5bCd6K+V5bqU6K+l5rKh5pyJ5aSq5aSn6Zeu6aKY5LqGCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wNi4yNC1WOS44IOabtOaWsOS6hmJpbmfkuIrnmoTlm77niYdmYXZpY29u5Zyw5Z2AO+W5tuS4lOWwvemHj+WHj+WwkeS6hk1P6Kem5Y+R5qyh5pWw77yM6YG/5YWN6aG16Z2i5Y2h6aG/O+S/ruWkjeaQnOeLl+eahOmHjeWumuWQkemXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDYuMjMtVjkuNyDkuIrkvKDplJnkuoZ+6YeN5paw5p2l77yM6aG65bim5aSE55CG5LqG6LC35q2MZmF2aWNvbumXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDYuMjMtVjkuNiDkv67lpI3kuobosLfmrYzph43lrprlkJHnmoTpl67poph+fuaIkeeahOmUhQovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDYuMTEtVjkuNSDkuI3lho3kvb/nlKhET03mlrnlvI/mnaXnm5HlkKzpobXpnaLkuobvvIzkvb/nlKh0aW1lcitNT+adpeWkhOeQhu+8jOaegeWkp+WHj+WwkeS6hmNwdeWNoOeUqOaXtumXtOWSjOeerOaXtue9kemAn+WNoOeUqAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDUuMjYtVjkuNCDmgaLlpI1mYXZpY29u5qih5byP77yM546w5Zyo6L+Z5Liq6ISa5pys5Z+65pys5LiK5YWo5LqG77yM5pyJ6ZyA6KaB5Lul5ZCO5YaN6K+0Ci8vIEBub3RlICAgICAgICAgICAgMjAxNy4wNS4xNS1WOS4zIOaaguaXtuenu+mZpOeZvuW6puWPs+i+ueS+p+agj+eahOW5v+WRiuenu+mZpOaooeW8j++8jOWHhuWkh+S4i+asoeS8mOWMluWlveS6huWGjee7p+e7rQovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDUuMTItVjkuMiDmmoLml7bnp7vpmaTosLfmrYznmoTlronlhajmkJzntKLmqKHlvI/vvIzlm6DkuLrlvojlpI3mnYLnmoTljp/lm6AKLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA1LjEyLVY5LjEg5pqC5pe256e76ZmkRmF2aWNvbueahOaYvuekuu+8jOWboOS4uui/meagt+WwseadguS6hu+8jOaciemcgOimgeeahOS6uuiHquW3seWOu+ijhei/meS4quiEmuacrOWQp++8jOS/neeVmeeZvuW6puWOu+W5v+WRigovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDUuMTItVjkuMCDpm4blkIjkuobljrvph43lrprlkJEr5Y675bm/5ZGKK0Zhdmljb27mmL7npLoKLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA1LjEyLVY4Ljcg6ZuG5ZCI5LqG5Y675bm/5ZGK55qE6ISa5pys77yM5Lul5YmN55qE6YKj5Liq5Y675bm/5ZGK55qE6ISa5pys5bCx5LiN55So5LqGCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wNS4xMi1WOC42IOS/ruWkjeiwt+atjOWuieWFqOaQnOe0oueahEJVRyBWMgovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDUuMTItVjguNCDmlrDlop7vvJrpu5jorqTlsY/olL3osLfmrYznmoTlronlhajmkJzntKLlip/og70KLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjA1LjA1LVY4LjMg5L+u5aSNaW5jbHVkZeiMg+WbtOWkquWwj+WvvOiHtOeahOeZvuW6puefpemBk+eahOWxj+iUvemXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDUuMDQtVjguMiDnu4jkuo7kv67lpI3kuobnmb7luqbnn6XpgZPlm77niYfmm7/mjaLkuobmloflrZfnmoTov5nkuKrlpKdCVUc7IOmhuuS+v+WkhOeQhuS6hnN1cGVyYXBpLnpoaWRhby5iYWlkdS5jb207IOaWsOWinuiwt+atjOaQnOe0oue7k+aenOmHjeWumuWQkeWOu+mZpAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDUuMDQtVjguMSDnu4jkuo7kv67lpI3kuobnmb7luqbnn6XpgZPlm77niYfmm7/mjaLkuobmloflrZfnmoTov5nkuKrlpKdCVUfvvIzpobrkvr/lpITnkIbkuoZzdXBlcmFwaS56aGlkYW8uYmFpZHUuY29tCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wNS4wNC1WOC4wIOe7iOS6juS/ruWkjeS6hueZvuW6puefpemBk+WbvueJh+abv+aNouS6huaWh+Wtl+eahOi/meS4quWkp0JVR++8jOW+hea1i+ivlQovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDMuMjgtVjcuNiDkv67lpI3lnKhWaW9sZW50TW9ua2V55LiK55qE5LiN5pSv5oyB55qE6Zeu6aKYCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wMy4yOC1WNy41IOWwneivleS/ruWkjWNocm9tZeS4iueahOmXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDMuMjEtVjcuNCDlsJ3or5XlpITnkIZFZGdl5LiK5LiN5pSv5oyB55qE6Zeu6aKY77yM57uT5p6c5Y+R546w5pivRWRnZeacrOi6q+eahFRhbXBlck1vbmtleeaUr+aMgeaciemXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDMuMTktVjcuMyDkv67lpI3miZPlvIDnmb7luqbkuYvlkI7lho3mrKHngrnlh7vigJznmb7luqbkuIDkuIvigJ3lr7zoh7TnmoTml6Dms5Xmm7TmlrDph43lrprlkJHpl67popgKLy8gQG5vdGUgICAgICAgICAgICAyMDE3LjAzLjE5LVY3LjIg5pyq55+l5Y6f5ZugY2hyb21l55qETXV0YXRpb25PYnNlcnZlcuaXoOazleS9v+eUqOS6hu+8jOe7p+e7reWbnuW9kuS7peWJjeeahERPTU5vZGVJbnNlcnRlZAovLyBAbm90ZSAgICAgICAgICAgIDIwMTcuMDIuMTctVjcuMCDkv67lpI3mkJzni5fnmoTmkJzntKLnu5Pmnpzph43lrprlkJHpl67popgr5pS55Liq5ZCN5a2XCi8vIEBub3RlICAgICAgICAgICAgMjAxNy4wMi4xNy1WNi45IOS/ruWkjeaQnOeLl+eahOaQnOe0oue7k+aenOmHjeWumuWQkemXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTYuMTIuMTAtVjYuOCAqKioKLy8gQG5vdGUgICAgICAgICAgICAyMDE2LjEwLjI3LVY2Ljcg5L+u5aSN5LqG5Lul5YmN55qE6YeN5aSN6K+35rGC77yM546w5Zyo55qE6K+35rGC5pWw5bqU6K+l5bCP5LqG5b6I5aSa77yM572R57uc5Lmf5bCx5LiN5Y2h5LqG77yM5oSf6KeJ6JCM6JCM5ZOSCi8vIEBub3RlICAgICAgICAgICAgMjAxNi4wNC4yNC1WNi42IOaBouWkjeS7peWJjeeahOeJiOacrO+8jOWboOS4uuWFvOWuueaAp+mXrumimAovLyBAbm90ZSAgICAgICAgICAgIDIwMTUuMTIuMDEtVjUuMCDliqDlhaXmkJzni5fnmoTmlK/mjIHvvIzkvYbmmK/mlK/mjIHkuI3mmK/lvojlpb0KLy8gQG5vdGUgICAgICAgICAgICAyMDE1LjExLjI1LVYyLjAg5LyY5YyW77yM5bey57uP5piv55yf5a6e5Zyw5Z2A55qE5LiN5YaN5bCd6K+V6I635Y+WCi8vIEBub3RlICAgICAgICAgICAgMjAxNS4xMS4yNS1WMS4wIOWujOaIkOWOu+aOieeZvuW6pumHjeWumuWQkeeahOWKn+iDvQovLyBAZ3JhbnQgICAgICAgICAgIEdNX2dldFZhbHVlCi8vIEBncmFudCAgICAgICAgICAgR01fc2V0VmFsdWUKLy8gQGdyYW50ICAgICAgICAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kCi8vIEByZXF1aXJlICAgICAgICAgaHR0cHM6Ly9jZG4uYm9vdGNzcy5jb20vanF1ZXJ5LzMuMi4xL2pxdWVyeS5taW4uanMKLy8gPT0vVXNlclNjcmlwdD09CgovLyDliJ3mrKHvvJrov5jmmK/ph4fnlKjkuoZzZXRJbnRlcnZhbOadpeWkhOeQhu+8jOaEn+iniei/meagt+eahOivnemAn+W6puW6lOivpeavlERvbeW/q++8jOS5n+avlE1P6YCC55So77yM5Zug5Li6TU/pnIDopoHlnKjmnIDlkI7miY3og73osIPnlKjvvIzlrp7nlKjmgKfov5jkuI3lpoJ0aW1lcgovLyDkuYvlkI7vvJrov5jmmK/ph4fnlKhNT+eahOaWueW8j+adpeWkhOeQhgooZnVuY3Rpb24gKCkgewogICAgdmFyIGZhdGhlck5hbWUgPSBuZXcgQXJyYXkoCiAgICAgICAgImMtY29udGFpbmVyIiwgLy9iYWlkdTEKICAgICAgICAicmMiLCAvL2dvb2dsZQogICAgICAgICJiX2FsZ28iLCAvL2JpbmcxCiAgICAgICAgImJfYW5zIiwgLy9iaW5nMgogICAgICAgICJ2cndyYXAiLCAvL3NvZ291MQogICAgICAgICJyYiIsLy9zb2dvdTIKICAgICAgICAicmVzLWxpc3QiLy9zby0zNjAKICAgICk7Ly8gRmF2aWNvbuaUvuWcqHh45L2N572uCiAgICB2YXIgaXNSZWRpcmVjdEVuYWJsZSA9IHRydWU7CiAgICB2YXIgaXNBZHNFbmFibGUgPSB0cnVlOwogICAgdmFyIEFkc1N0eWxlTW9kZSA9IDE7Ly8gMC3kuI3luKZjc3PvvJsxLeWNleWIl+mdoOW3pu+8mzIt5Y2V5YiX5bGF5Lit77ybMy3lj4zliJflsYXkuK0KICAgIHZhciBpc0Zhdmljb25FbmFibGUgPSB0cnVlOwogICAgdmFyIGlzQ291bnRlckVuYWJsZSA9IGZhbHNlOwogICAgdmFyIGlzQUxpbmVFbmFibGUgPSBmYWxzZTsKICAgIExvYWRTZXR0aW5nKCk7IC8vIOivu+WPluS4quS6uuiuvue9ruS/oeaBrwogICAgdmFyIFN0eXBlX05vcm1hbDsgLy8g5Y676YeN5a6a5ZCR55qE6YCJ5oupCiAgICB2YXIgRnR5cGU7IC8vIGZhdmljb27nmoTpgInmi6kKICAgIHZhciBDdHlwZTsgLy8gQ291bnRlcueahOmAieaLqQogICAgdmFyIFNpdGVUeXBlSUQ7IC8vIOagh+iusOW9k+WJjeaYr+WTquS4quermeeCuVvnmb7luqY9MTvmkJzni5c9MjvosLfmrYw9Mzvlv4XlupQ9NDvnn6XkuY49NTvlhbbku5Y9Nl0KICAgIHZhciBTaXRlVHlwZT17CiAgICAgICAgQkFJRFU6MSwKICAgICAgICBTT0dPVToyLAogICAgICAgIFNPOjMsCiAgICAgICAgR09PR0xFOjQsCiAgICAgICAgQklORzo1LAogICAgICAgIFpISUhVOjYsCiAgICAgICAgT1RIRVJTOjcsCiAgICB9OwoKICAgIHZhciBBQ01PID0gd2luZG93Lk11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luZG93LldlYktpdE11dGF0aW9uT2JzZXJ2ZXIgfHwgd2luZG93Lk1vek11dGF0aW9uT2JzZXJ2ZXI7CiAgICB2YXIgb3B0aW9uID0geydjaGlsZExpc3QnOiB0cnVlLCAnc3VidHJlZSc6IHRydWV9OwogICAgdmFyIG9ic2VydmVyID0gbmV3IEFDTU8oZnVuY3Rpb24gKHJlY29yZHMpIHsKICAgICAgICB0cnkgewogICAgICAgICAgICBTaG93U2V0dGluZygpOwogICAgICAgICAgICBBQ0hhbmRsZSgpOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB9CiAgICB9KTsKICAgIHRyeXsKICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Db250ZW50TG9hZGVkJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAvLyDlpoLmnpzmsqHmnIlTdXBlclByZWxvYWTnmoTor53pgqPkuYjlsLHkvJroh6rliqjosIPnlKjov5nkuKoKICAgICAgICAgICAgICAgIFNob3dTZXR0aW5nKCk7CiAgICAgICAgICAgIH0sIDEwMDApOwogICAgICAgIH0sIGZhbHNlKTsKICAgIH1jYXRjaCAoZSl7fQogICAgaWYgKGxvY2F0aW9uLmhvc3QuaW5kZXhPZigid3d3LmJhaWR1LmNvbSIpID4gLTEpIHsKICAgICAgICBTaXRlVHlwZUlEID0gU2l0ZVR5cGUuQkFJRFU7CiAgICAgICAgU3R5cGVfTm9ybWFsID0gImgzLnQ+YSwgI3Jlc3VsdHMgLmMtY29udGFpbmVyPi5jLWJsb2NrYSI7IC8vUEMsbW9iaWxlCiAgICAgICAgRnR5cGUgPSAiLnJlc3VsdC1vcCwgLmMtc2hvd3VybCI7CiAgICAgICAgQ3R5cGUgPSAiI2NvbnRlbnRfbGVmdD5kaXZbc3JjaWRdICpbY2xhc3N+PXRdLFtjbGFzc349b3BfYmVzdF9hbnN3ZXJfcXVlc3Rpb25dIjsKICAgICAgICBzdGFydFNlbGVjdCgiI3dyYXBwZXIsI3BhZ2UtYmQiLCAiI3dyYXBwZXIsI3BhZ2UtYmQiLCBvcHRpb24pOwogICAgfSBlbHNlIGlmIChsb2NhdGlvbi5ob3N0LmluZGV4T2YoInNvZ291IikgPiAtMSkgewogICAgICAgIFNpdGVUeXBlSUQgPSBTaXRlVHlwZS5TT0dPVTsKICAgICAgICBTdHlwZV9Ob3JtYWwgPSAiaDMucHQ+YSwgaDMudnJUaXRsZT5hIjsKICAgICAgICBGdHlwZSA9ICJjaXRlW2lkKj0nY2FjaGVyZXN1bHRfaW5mb18nXSI7CiAgICAgICAgQ3R5cGUgPSAiLnJlc3VsdHM+ZGl2IjsKICAgICAgICBzdGFydFNlbGVjdCgiYm9keSIsICJib2R5Iiwgb3B0aW9uKTsKICAgIH0gIGVsc2UgaWYgKGxvY2F0aW9uLmhvc3QuaW5kZXhPZigic28uY29tIikgPiAtMSkgewogICAgICAgIFNpdGVUeXBlSUQgPSBTaXRlVHlwZS5TTzsKICAgICAgICBTdHlwZV9Ob3JtYWwgPSAiLnJlcy1saXN0IGgzPmEiOwogICAgICAgIEZ0eXBlID0gIi5yZXMtbGlua2luZm8gY2l0ZSI7CiAgICAgICAgQ3R5cGUgPSAiLnJlc3VsdHM+ZGl2IjsKICAgICAgICBzdGFydFNlbGVjdCgiYm9keSIsICJib2R5Iiwgb3B0aW9uKTsKICAgIH0gZWxzZSBpZiAobG9jYXRpb24uaG9zdC5pbmRleE9mKCJnb29nbGUiKSA+IC0xKSB7CiAgICAgICAgU2l0ZVR5cGVJRCA9IFNpdGVUeXBlLkdPT0dMRTsKICAgICAgICBGdHlwZSA9ICIuX1JtIjsKICAgICAgICBDdHlwZSA9ICIuc3JnPmRpdltjbGFzc349Z10gKltjbGFzc349cl0sLl95RT5kaXZbY2xhc3N+PV9ra10iOwogICAgICAgIHN0YXJ0U2VsZWN0KCJib2R5IiwgImJvZHkiLCBvcHRpb24pOwogICAgfSBlbHNlIGlmIChsb2NhdGlvbi5ob3N0LmluZGV4T2YoImJpbmciKSA+IC0xKSB7CiAgICAgICAgU2l0ZVR5cGVJRCA9IFNpdGVUeXBlLkJJTkc7CiAgICAgICAgRnR5cGUgPSAiLmJfYXR0cmlidXRpb24+Y2l0ZSI7CiAgICAgICAgQ3R5cGUgPSAiI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbnNdLCNiX3Jlc3VsdHM+bGlbY2xhc3N+PWJfYWxnb10sI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbGdvXSI7CiAgICAgICAgc3RhcnRTZWxlY3QoImJvZHkiLCAiYm9keSIsIG9wdGlvbik7CiAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmhvc3QuaW5kZXhPZigiemhpaHUuY29tIikgPiAtMSkgewogICAgICAgIFNpdGVUeXBlSUQgPSBTaXRlVHlwZS5aSElIVTsKICAgICAgICBzdGFydFNlbGVjdCgiLkNhcmQgLkxpc3QiLCAiLkNhcmQgLkxpc3QiLCBvcHRpb24pOwogICAgfSBlbHNlIHsKICAgICAgICBTaXRlVHlwZUlEID0gU2l0ZVR5cGUuT1RIRVJTOwogICAgICAgIEFDX2FkZFN0eWxlKCIud29yZC1yZXBsYWNle2Rpc3BsYXk6IG5vbmUgIWltcG9ydGFudDt9Iik7CiAgICB9CiAgICBHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCdBQy3ph43lrprlkJHohJrmnKzorr7nva4nLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgIH0pOwogICAgQUNfYWRkU3R5bGUoCiAgICAgICAgIi5vcHItcmVjb21tZW5kcy1tZXJnZS1pbWd0ZXh0e2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7fSIgKyAvLyDnp7vpmaTnmb7luqbmtY/op4jlmajmjqjlub8KICAgICAgICAiLnJlc190b3BfYmFubmVye2Rpc3BsYXk6bm9uZX0iIC8vIOenu+mZpOWPr+iDveeahOeZvuW6pkhUVFBT5Yqr5oyB5pi+56S66Zeu6aKYCiAgICApOwogICAgaWYoIWlzQUxpbmVFbmFibGUpewogICAgICAgIEFDX2FkZFN0eWxlKCJhe3RleHQtZGVjb3JhdGlvbjpub25lfSIpOy8vIOenu+mZpOi/meS6m+S4quS4i+WIkue6vwogICAgfQogICAgZnVuY3Rpb24gQUNfYWRkU3R5bGUoY3NzLCBjbGFzc05hbWUpewogICAgICAgIHZhciB0b3V0ID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKXsKICAgICAgICAgICAgaWYoZG9jdW1lbnQuYm9keSAhPSBudWxsKXsKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodG91dCk7CiAgICAgICAgICAgICAgICB0cnl7ZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiLiIrY2xhc3NOYW1lKS5yZW1vdmUoKTt9Y2F0Y2ggKGUpe307CiAgICAgICAgICAgICAgICB2YXIgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7CiAgICAgICAgICAgICAgICBpZihjbGFzc05hbWUgIT0gbnVsbCkKICAgICAgICAgICAgICAgICAgICBjc3NOb2RlLmNsYXNzTmFtZSA9IGNsYXNzTmFtZTsKICAgICAgICAgICAgICAgIGNzc05vZGUuaW5uZXJIVE1MID0gY3NzOwogICAgICAgICAgICAgICAgdHJ5e2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY3NzTm9kZSk7fWNhdGNoIChlKXtjb25zb2xlLmxvZyhlLm1lc3NhZ2UpO30KICAgICAgICAgICAgfQogICAgICAgIH0sIDIwMCk7CiAgICB9CiAgICBmdW5jdGlvbiBzdGFydFNlbGVjdChjaGVja05vZGUsIHNlbGVjdG9yLCBvcHRpb24pIHsKICAgICAgICB2YXIgdHQgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGNoZWNrTm9kZSkpIHsKICAgICAgICAgICAgICAgIGNsZWFySW50ZXJ2YWwodHQpOwogICAgICAgICAgICAgICAgLyoqKuacgOWQjuW/hemhu+imgeiuvue9ruWlvU1P57un57ut55uR5ZCs6aG16Z2i5pWw5o2uLS3oh6rliqjliqDovb3kuIvkuIDpobXnmoTpl67popgqKiovCiAgICAgICAgICAgICAgICB0cnl7CiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSwgb3B0aW9uKTsKICAgICAgICAgICAgICAgIH1jYXRjaCAoZSl7CiAgICAgICAgICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCBvcHRpb24pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfSwgMjAwKTsKICAgIH0KICAgIGZ1bmN0aW9uIEFDSGFuZGxlKCkgewogICAgICAgIEluc2VydFNldHRpbmdNZW51KCk7CiAgICAgICAgaWYgKGlzUmVkaXJlY3RFbmFibGUpIHsKICAgICAgICAgICAgaWYoU3R5cGVfTm9ybWFsICE9IG51bGwgJiYgU3R5cGVfTm9ybWFsICE9ICIiKQogICAgICAgICAgICAgICAgcmVzZXRVUkxOb3JtYWwoJChTdHlwZV9Ob3JtYWwpKTsgLy8g55m+5bqm5pCc54uX5Y676YeN5a6a5ZCRLeaZrumAmuaooeW8j+OAkOazqOaEj+S4jeiDveS4umRvY3VtZW50LnF1ZXJ5Li7jgJEKICAgICAgICAgICAgaWYoU2l0ZVR5cGVJRCA9PSBTaXRlVHlwZS5HT09HTEUpCiAgICAgICAgICAgICAgICByZW1vdmVPbk1vdXNlRG93bkZ1bmMoKTsgLy8g56e76Zmkb25Nb3VzZURvd27kuovku7bvvIzosLfmrYzljrvph43lrprlkJEKICAgICAgICAgICAgaWYoU2l0ZVR5cGVJRCA9PSBTaXRlVHlwZS5aSElIVSkKICAgICAgICAgICAgICAgIHJlbW92ZUxpbmtUYXJnZXQoKTsgLy8g56e76Zmk55+l5LmO55qE6YeN5a6a5ZCR6Zeu6aKYCiAgICAgICAgICAgIHRyeXskKCIucmVzX3RvcF9iYW5uZXIiKS5yZW1vdmUoKTt9Y2F0Y2ggKGUpe30gLy8g56e76Zmk55m+5bqm5Y+v6IO95pi+56S655qE5Yqr5oyBCiAgICAgICAgICAgIHRyeXskKCJib2R5Pi5yZXN1bHQtb3AiKS5yZW1vdmUoKTt9Y2F0Y2ggKGUpe30gLy8g56e76Zmk5Y+v6IO95Ye6546w55qE6I6r5ZCN5om+5LiN5Yiw5L2N572u55qE5YWo5bGP5o6o6I2QCiAgICAgICAgICAgIHRyeXskKCIuYy1jb250YWluZXIgL2RlZXAvIC5jLWNvbnRhaW5lciIpLnJlbW92ZSgpO31jYXRjaCAoZSl7fSAvLyDnp7vpmaTnmb7luqbnmoTmgbblv4NTaGFkb3cgRE9N77yIU2hhZG93biBSb29077yJCiAgICAgICAgfQogICAgICAgIGlmIChpc0Zhdmljb25FbmFibGUpIHsKICAgICAgICAgICAgYWRkRmF2aWNvbihkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKEZ0eXBlKSk7IC8vIOa3u+WKoEZhdmljb27mmL7npLoKICAgICAgICB9CiAgICAgICAgaWYgKGlzQ291bnRlckVuYWJsZSkgewogICAgICAgICAgICBhZGRDb3VudGVyKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoQ3R5cGUpKTsKICAgICAgICB9CiAgICAgICAgaWYgKGlzQWRzRW5hYmxlKSB7CiAgICAgICAgICAgIEZTQmFpZHUoKTsKICAgICAgICAgICAgcmVtb3ZlQURfYmFpZHVfc29nb3UoKTsgLy8g56e76Zmk55m+5bqm5bm/5ZGKCiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICQoImlucHV0W25hbWU9J3NwLWFjLWFfZm9yY2Vfc3R5bGUnXSIpLmF0dHIoImRpc2FibGVkIiwgImRpc2FibGVkIik7CiAgICAgICAgfQogICAgfQogICAgaWYgKGlzQWRzRW5hYmxlKXsKICAgICAgICBGU0JhaWR1KCk7IC8vIOa3u+WKoOiuvue9rumhuS3ljZXlj4zliJfmmL7npLoKICAgIH0KICAgIGZ1bmN0aW9uIEFDdG9nZ2xlU2V0dGluZ0Rpc3BsYXkoKSB7CiAgICAgICAgLy8g5pi+56S677yf6ZqQ6JeP6K6+572u55WM6Z2iCiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3AtYWMtY29udGVudCIpLnN0eWxlLmRpc3BsYXkgPT0gJ2Jsb2NrJykKICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzcC1hYy1jb250ZW50Iikuc3R5bGUuZGlzcGxheSA9ICdub25lJzsKICAgICAgICAgICAgZWxzZQogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICB9LCAxMDApOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIGZ1bmN0aW9uIFNob3dTZXR0aW5nKCkgewogICAgICAgIC8vIOWmguaenOS4jeWtmOWcqOeahOivne+8jOmCo+S5iOiHquW3seWIm+W7uuS4gOS4qi1jb3B5IGZyb20gc3VwZXJQcmVsb2FkCiAgICAgICAgaWYgKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzcC1hYy1jb250YWluZXIiKSA9PSBudWxsKSB7CiAgICAgICAgICAgIEFDX2FkZFN0eWxlKCcjc3AtYWMtY29udGFpbmVye3otaW5kZXg6OTk5OTk5IWltcG9ydGFudDt0ZXh0LWFsaWduOmxlZnQhaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6d2hpdGU7fSNzcC1hYy1jb250YWluZXIgKntmb250LXNpemU6MTNweCFpbXBvcnRhbnQ7Y29sb3I6YmxhY2shaW1wb3J0YW50O2Zsb2F0Om5vbmUhaW1wb3J0YW50O30jc3AtYWMtbWFpbi1oZWFke3Bvc2l0aW9uOnJlbGF0aXZlIWltcG9ydGFudDt0b3A6MCFpbXBvcnRhbnQ7bGVmdDowIWltcG9ydGFudDt9I3NwLWFjLXNwYW4taW5mb3twb3NpdGlvbjphYnNvbHV0ZSFpbXBvcnRhbnQ7cmlnaHQ6MXB4IWltcG9ydGFudDt0b3A6MCFpbXBvcnRhbnQ7Zm9udC1zaXplOjEwcHghaW1wb3J0YW50O2xpbmUtaGVpZ2h0OjEwcHghaW1wb3J0YW50O2JhY2tncm91bmQ6bm9uZSFpbXBvcnRhbnQ7Zm9udC1zdHlsZTppdGFsaWMhaW1wb3J0YW50O2NvbG9yOiM1YTVhNWEhaW1wb3J0YW50O3RleHQtc2hhZG93OndoaXRlIDBweCAxcHggMXB4IWltcG9ydGFudDt9I3NwLWFjLWNvbnRhaW5lciBpbnB1dHt2ZXJ0aWNhbC1hbGlnbjptaWRkbGUhaW1wb3J0YW50O2Rpc3BsYXk6aW5saW5lLWJsb2NrIWltcG9ydGFudDtvdXRsaW5lOm5vbmUhaW1wb3J0YW50O2hlaWdodDphdXRvICFpbXBvcnRhbnQ7cGFkZGluZzowcHggIWltcG9ydGFudDttYXJnaW4tYm90dG9tOjBweCAhaW1wb3J0YW50O21hcmdpbi10b3A6IDBweCAhaW1wb3J0YW50O30jc3AtYWMtY29udGFpbmVyIGlucHV0W3R5cGU9Im51bWJlciJde3dpZHRoOjUwcHghaW1wb3J0YW50O3RleHQtYWxpZ246bGVmdCFpbXBvcnRhbnQ7fSNzcC1hYy1jb250YWluZXIgaW5wdXRbdHlwZT0iY2hlY2tib3giXXtib3JkZXI6MXB4IHNvbGlkICNCNEI0QjQhaW1wb3J0YW50O3BhZGRpbmc6MXB4IWltcG9ydGFudDttYXJnaW46M3B4IWltcG9ydGFudDt3aWR0aDoxM3B4IWltcG9ydGFudDtoZWlnaHQ6MTNweCFpbXBvcnRhbnQ7YmFja2dyb3VuZDpub25lIWltcG9ydGFudDtjdXJzb3I6cG9pbnRlciFpbXBvcnRhbnQ7dmlzaWJpbGl0eTp2aXNpYmxlICFpbXBvcnRhbnQ7cG9zaXRpb246c3RhdGljICFpbXBvcnRhbnQ7fSNzcC1hYy1jb250YWluZXIgaW5wdXRbdHlwZT0iYnV0dG9uIl17Ym9yZGVyOjFweCBzb2xpZCAjY2NjIWltcG9ydGFudDtjdXJzb3I6cG9pbnRlciFpbXBvcnRhbnQ7YmFja2dyb3VuZDpub25lIWltcG9ydGFudDt3aWR0aDphdXRvIWltcG9ydGFudDtoZWlnaHQ6YXV0byFpbXBvcnRhbnQ7fSNzcC1hYy1jb250YWluZXIgbGl7bGlzdC1zdHlsZTpub25lIWltcG9ydGFudDttYXJnaW46M3B4IDAhaW1wb3J0YW50O2JvcmRlcjpub25lIWltcG9ydGFudDtmbG9hdDpub25lIWltcG9ydGFudDt9I3NwLWFjLWNvbnRhaW5lciBmaWVsZHNldHtib3JkZXI6MnB4IGdyb292ZSAjY2NjIWltcG9ydGFudDstbW96LWJvcmRlci1yYWRpdXM6M3B4IWltcG9ydGFudDtib3JkZXItcmFkaXVzOjNweCFpbXBvcnRhbnQ7cGFkZGluZzo0cHggOXB4IDZweCA5cHghaW1wb3J0YW50O21hcmdpbjoycHghaW1wb3J0YW50O2Rpc3BsYXk6YmxvY2shaW1wb3J0YW50O3dpZHRoOmF1dG8haW1wb3J0YW50O2hlaWdodDphdXRvIWltcG9ydGFudDt9I3NwLWFjLWNvbnRhaW5lciBsZWdlbmR7bGluZS1oZWlnaHQ6MjBweCAhaW1wb3J0YW50O21hcmdpbi1ib3R0b206MHB4ICFpbXBvcnRhbnQ7fSNzcC1hYy1jb250YWluZXIgZmllbGRzZXQ+dWx7cGFkZGluZzowIWltcG9ydGFudDttYXJnaW46MCFpbXBvcnRhbnQ7fSNzcC1hYy1jb250YWluZXIgdWwjc3AtYWMtYV91c2VpZnJhbWUtZXh0ZW5ke3BhZGRpbmctbGVmdDo0MHB4IWltcG9ydGFudDt9I3NwLWFjLXJlY3R7cG9zaXRpb246cmVsYXRpdmUhaW1wb3J0YW50O3RvcDowIWltcG9ydGFudDtsZWZ0OjAhaW1wb3J0YW50O2Zsb2F0OnJpZ2h0IWltcG9ydGFudDtoZWlnaHQ6MTBweCFpbXBvcnRhbnQ7d2lkdGg6MTBweCFpbXBvcnRhbnQ7cGFkZGluZzowIWltcG9ydGFudDttYXJnaW46MCFpbXBvcnRhbnQ7LW1vei1ib3JkZXItcmFkaXVzOjNweCFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2JvcmRlcjoxcHggc29saWQgd2hpdGUhaW1wb3J0YW50Oy13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIDVweCAwIHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwwIDAgM3B4IHJnYmEoMCwwLDAsMC44KSFpbXBvcnRhbnQ7LW1vei1ib3gtc2hhZG93Omluc2V0IDAgNXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDAgMCAzcHggcmdiYSgwLDAsMCwwLjgpIWltcG9ydGFudDtib3gtc2hhZG93Omluc2V0IDAgNXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDAgMCAzcHggcmdiYSgwLDAsMCwwLjgpIWltcG9ydGFudDtvcGFjaXR5OjAuOCFpbXBvcnRhbnQ7fSNzcC1hYy1kb3QsI3NwLWFjLWN1ci1tb2Rle3Bvc2l0aW9uOmFic29sdXRlIWltcG9ydGFudDt6LWluZGV4Ojk5OTkhaW1wb3J0YW50O3dpZHRoOjVweCFpbXBvcnRhbnQ7aGVpZ2h0OjVweCFpbXBvcnRhbnQ7cGFkZGluZzowIWltcG9ydGFudDstbW96LWJvcmRlci1yYWRpdXM6M3B4IWltcG9ydGFudDtib3JkZXItcmFkaXVzOjNweCFpbXBvcnRhbnQ7Ym9yZGVyOjFweCBzb2xpZCB3aGl0ZSFpbXBvcnRhbnQ7b3BhY2l0eToxIWltcG9ydGFudDstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAtMnB4IDFweCByZ2JhKDAsMCwwLDAuMyksaW5zZXQgMCAycHggMXB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwwcHggMXB4IDJweCByZ2JhKDAsMCwwLDAuOSkhaW1wb3J0YW50Oy1tb3otYm94LXNoYWRvdzppbnNldCAwIC0ycHggMXB4IHJnYmEoMCwwLDAsMC4zKSxpbnNldCAwIDJweCAxcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDBweCAxcHggMnB4IHJnYmEoMCwwLDAsMC45KSFpbXBvcnRhbnQ7Ym94LXNoYWRvdzppbnNldCAwIC0ycHggMXB4IHJnYmEoMCwwLDAsMC4zKSxpbnNldCAwIDJweCAxcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDBweCAxcHggMnB4IHJnYmEoMCwwLDAsMC45KSFpbXBvcnRhbnQ7fSNzcC1hYy1kb3R7cmlnaHQ6LTNweCFpbXBvcnRhbnQ7dG9wOi0zcHghaW1wb3J0YW50O30jc3AtYWMtY3VyLW1vZGV7bGVmdDotM3B4IWltcG9ydGFudDt0b3A6LTNweCFpbXBvcnRhbnQ7d2lkdGg6NnB4IWltcG9ydGFudDtoZWlnaHQ6NnB4IWltcG9ydGFudDt9I3NwLWFjLWNvbnRlbnR7cGFkZGluZzowIWltcG9ydGFudDttYXJnaW46NXB4IDVweCAwIDAhaW1wb3J0YW50Oy1tb3otYm9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2JvcmRlci1yYWRpdXM6M3B4IWltcG9ydGFudDtib3JkZXI6MXB4IHNvbGlkICNBMEEwQTAhaW1wb3J0YW50Oy13ZWJraXQtYm94LXNoYWRvdzotMnB4IDJweCA1cHggcmdiYSgwLDAsMCwwLjMpIWltcG9ydGFudDstbW96LWJveC1zaGFkb3c6LTJweCAycHggNXB4IHJnYmEoMCwwLDAsMC4zKSFpbXBvcnRhbnQ7Ym94LXNoYWRvdzotMnB4IDJweCA1cHggcmdiYSgwLDAsMCwwLjMpIWltcG9ydGFudDt9I3NwLWFjLW1haW57cGFkZGluZzo1cHghaW1wb3J0YW50O2JvcmRlcjoxcHggc29saWQgd2hpdGUhaW1wb3J0YW50Oy1tb3otYm9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O2JvcmRlci1yYWRpdXM6M3B4IWltcG9ydGFudDtiYWNrZ3JvdW5kLWNvbG9yOiNGMkYyRjchaW1wb3J0YW50O2JhY2tncm91bmQ6LW1vei1saW5lYXItZ3JhZGllbnQodG9wLCNGQ0ZDRkMsI0YyRjJGNyAxMDAlKSFpbXBvcnRhbnQ7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwwIDAsMCAxMDAlLGZyb20oI0ZDRkNGQyksdG8oI0YyRjJGNykpIWltcG9ydGFudDt9I3NwLWFjLWZvb3R7cG9zaXRpb246cmVsYXRpdmUhaW1wb3J0YW50O2xlZnQ6MCFpbXBvcnRhbnQ7cmlnaHQ6MCFpbXBvcnRhbnQ7bWluLWhlaWdodDoyMHB4IWltcG9ydGFudDt9I3NwLWFjLXNhdmVidXR0b257cG9zaXRpb246YWJzb2x1dGUhaW1wb3J0YW50O3RvcDowIWltcG9ydGFudDtyaWdodDoycHghaW1wb3J0YW50O30jc3AtYWMtY29udGFpbmVyIC5zcC1hYy1zcGFuYnV0dG9ue2JvcmRlcjoxcHggc29saWQgI2NjYyFpbXBvcnRhbnQ7LW1vei1ib3JkZXItcmFkaXVzOjNweCFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozcHghaW1wb3J0YW50O3BhZGRpbmc6MnB4IDNweCFpbXBvcnRhbnQ7Y3Vyc29yOnBvaW50ZXIhaW1wb3J0YW50O2JhY2tncm91bmQtY29sb3I6I0Y5RjlGOSFpbXBvcnRhbnQ7LXdlYmtpdC1ib3gtc2hhZG93Omluc2V0IDAgMTBweCA1cHggd2hpdGUhaW1wb3J0YW50Oy1tb3otYm94LXNoYWRvdzppbnNldCAwIDEwcHggNXB4IHdoaXRlIWltcG9ydGFudDtib3gtc2hhZG93Omluc2V0IDAgMTBweCA1cHggd2hpdGUhaW1wb3J0YW50O30nKTsKICAgICAgICAgICAgdmFyIENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpOwogICAgICAgICAgICBDb250YWluZXIuaWQgPSAic3AtYWMtY29udGFpbmVyIjsKICAgICAgICAgICAgQ29udGFpbmVyLnN0eWxlID0gInBvc2l0aW9uOiBmaXhlZCAhaW1wb3J0YW50OyB0b3A6IDEwJTtyaWdodDogNyU7IjsKICAgICAgICAgICAgQ29udGFpbmVyLmlubmVySFRNTCA9CiAgICAgICAgICAgICAgICAiICAgIDxkaXYgaWQ9J3NwLWFjLWNvbnRlbnQnIHN0eWxlPSdkaXNwbGF5OiBub25lOyc+XG4iICsKICAgICAgICAgICAgICAgICIgICAgICAgIDxkaXYgaWQ9J3NwLWFjLW1haW4nPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICA8ZmllbGRzZXQgaWQ9J3NwLWFjLWF1dG9wYWdlci1maWVsZCcgc3R5bGU9J2Rpc3BsYXk6YmxvY2s7Jz5cbiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgICAgIDxsZWdlbmQgdGl0bGU9J+iHquWKqOe/u+mhteaooeW8j+eahOebuOWFs+iuvue9ricgc3R5bGU9J2NvbG9yOiByZWQgIWltcG9ydGFudDsnPkFDLemHjeWumuWQkeiuvue9rjwvbGVnZW5kPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgPHVsPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgIDxsaT48bGFiZWw+PGlucHV0IHRpdGxlPSdBQy3ph43lrprlkJEnIGlkPSdzcC1hYy1yZWRpcmVjdCcgbmFtZT0nc3AtYWMtYV9zZXBhcmF0b3InIHRpdGxlPSdBQy3ph43lrprlkJEnIHR5cGU9J2NoZWNrYm94JyAiICsgKGlzUmVkaXJlY3RFbmFibGUgPyAnY2hlY2tlZCcgOiAnJykgKyAiPuS4u+WKn+iDvS3ph43lrprlkJHlip/og708L2xhYmVsPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgICAgICAmbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8bGFiZWw+PGlucHV0IHRpdGxlPSfph43lrprlkJEt5pmu6YCa5qih5byPJyBuYW1lPSdzcC1hYy1hX2ZvcmNlX3JlZGlNb2QnIHZhbHVlPScwJyB0eXBlPSdyYWRpbycgY2hlY2tlZD7ph43lrprlkJEt5pmu6YCa5qih5byPPC9sYWJlbD4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICAgICAgPC9saT5cbiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgICAgICAgICA8bGk+PGxhYmVsPjxpbnB1dCB0aXRsZT0nQUMt5Y675bm/5ZGKJyBpZD0nc3AtYWMtYWRzJyBuYW1lPSdzcC1hYy1hX2ZvcmNlJyB0eXBlPSdjaGVja2JveCcgIiArIChpc0Fkc0VuYWJsZSA/ICdjaGVja2VkJyA6ICcnKSArICI+6ZmE5YqgMS3ljrvlub/lkYrlip/og708L2xhYmVsPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgIDwvbGk+XG4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICAgICAgPGxpPiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgICAgICAgICAgICAgJm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PGxhYmVsPjxpbnB1dCB0aXRsZT0n5Y675bm/5ZGKLeWOn+Wni+aooeW8jycgbmFtZT0nc3AtYWMtYV9mb3JjZV9zdHlsZScgdmFsdWU9JzAnIHR5cGU9J3JhZGlvJyAiICsgKEFkc1N0eWxlTW9kZT09MCA/ICdjaGVja2VkJyA6ICcnKSArICI+5Y675bm/5ZGKLeWOn+Wni+aooeW8jzwvbGFiZWw+IiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IHRpdGxlPSfljrvlub/lkYot5Y2V5YiX5pmu6YCaJyBuYW1lPSdzcC1hYy1hX2ZvcmNlX3N0eWxlJyB2YWx1ZT0nMScgIHR5cGU9J3JhZGlvJyAiICsgKEFkc1N0eWxlTW9kZT09MSA/ICdjaGVja2VkJyA6ICcnKSArICI+5Y675bm/5ZGKLeWNleWIl+aZrumAmjwvbGFiZWw+IiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgICAgICA8QlIvPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzxsYWJlbD48aW5wdXQgdGl0bGU9J+WOu+W5v+WRii3ljZXliJflsYXkuK0nIG5hbWU9J3NwLWFjLWFfZm9yY2Vfc3R5bGUnIHZhbHVlPScyJyAgdHlwZT0ncmFkaW8nICIgKyAoQWRzU3R5bGVNb2RlPT0yID8gJ2NoZWNrZWQnIDogJycpICsgIj7ljrvlub/lkYot5Y2V5YiX5bGF5LitPC9sYWJlbD4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgdGl0bGU9J+WOu+W5v+WRii3lj4zliJflsYXkuK0nIG5hbWU9J3NwLWFjLWFfZm9yY2Vfc3R5bGUnIHZhbHVlPSczJyAgdHlwZT0ncmFkaW8nICIgKyAoQWRzU3R5bGVNb2RlPT0zID8gJ2NoZWNrZWQnIDogJycpICsgIj7ljrvlub/lkYot5Y+M5YiX5bGF5LitPC9sYWJlbD4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICAgICAgPC9saT5cbiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgICAgICAgICA8bGk+PGxhYmVsPjxpbnB1dCB0aXRsZT0nQUMt5re75YqgRmF2aWNvbicgaWQ9J3NwLWFjLWZhdmljb24nIG5hbWU9J3NwLWFjLWFfZm9yY2UnIHR5cGU9J2NoZWNrYm94JyAiICsgKGlzRmF2aWNvbkVuYWJsZSA/ICdjaGVja2VkJyA6ICcnKSArICI+6ZmE5YqgMi1GYXZpY29u5Yqf6IO9PC9sYWJlbD5cbiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgICAgICAgICA8L2xpPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgIDxsaT48bGFiZWw+PGlucHV0IHRpdGxlPSdBQy3mt7vliqDnvJblj7cnIGlkPSdzcC1hYy1jb3VudGVyJyBuYW1lPSdzcC1hYy1hX2ZvcmNlJyB0eXBlPSdjaGVja2JveCcgIiArIChpc0NvdW50ZXJFbmFibGUgPyAnY2hlY2tlZCcgOiAnJykgKyAiPumZhOWKoDMt57yW5Y+35Yqf6IO9PC9sYWJlbD48L2xpPlxuIiArCiAgICAgICAgICAgICAgICAiICAgICAgICAgICAgICAgIDxsaT48bGFiZWw+PGlucHV0IHRpdGxlPSdBQy3mloflrZfkuIvliJLnur8nIGlkPSdzcC1hYy1hbGluZScgbmFtZT0nc3AtYWMtYV9mb3JjZScgdHlwZT0nY2hlY2tib3gnICIgKyAoaXNBTGluZUVuYWJsZSA/ICdjaGVja2VkJyA6ICcnKSArICI+6ZmE5YqgNC3kuIvliJLnur88L2xhYmVsPjwvbGk+XG4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICAgICAgPGxpPjxhIHRhcmdldD0nX2JsYW5rJyBocmVmPSdodHRwczovL3NoYW5nLnFxLmNvbS93cGEvcXVud3BhP2lka2V5PTViYmZlOWRlMWU4MWEwOTMwYmQwNTNmMzE1N2FhZDJkYmIzZmE3Yjk5MWFjOWYyMmVhOWYyZTJmNTNlZmRlODAnIHN0eWxlPSdjb2xvcjpyZWQgIWltcG9ydGFudDsnPuiBlOezu+S9nOiAhSzmj5Dlu7rorq4s5a+75rGC5biu5YqpLOiEmuacrOWumuWItueCueaIkTwvYT48L2xpPiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgICAgIDwvdWw+XG4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICA8c3BhbiBpZD0nc3AtYWMtY2FuY2VsYnV0dG9uJyBjbGFzcz0nc3AtYWMtc3BhbmJ1dHRvbicgdGl0bGU9J+WPlua2iCcgc3R5bGU9J3Bvc2l0aW9uOiByZWxhdGl2ZSAhaW1wb3J0YW50O2Zsb2F0OiBsZWZ0ICFpbXBvcnRhbnQ7Jz7lj5bmtog8L3NwYW4+XG4iICsKICAgICAgICAgICAgICAgICIgICAgICAgICAgICA8c3BhbiBpZD0nc3AtYWMtc2F2ZWJ1dHRvbicgY2xhc3M9J3NwLWFjLXNwYW5idXR0b24nIHRpdGxlPSfkv53lrZjorr7nva4nIHN0eWxlPSdwb3NpdGlvbjogcmVsYXRpdmUgIWltcG9ydGFudDtmbG9hdDogcmlnaHQgIWltcG9ydGFudDsnPuS/neWtmDwvc3Bhbj5cbiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgPC9maWVsZHNldD5cbiIgKwogICAgICAgICAgICAgICAgIiAgICAgICAgPC9kaXY+XG4iICsKICAgICAgICAgICAgICAgICIgICAgPC9kaXY+IjsKICAgICAgICAgICAgdHJ5e2RvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoQ29udGFpbmVyKTt9Y2F0Y2ggKGUpe30KICAgICAgICB9CiAgICAgICAgdmFyIGFsbE5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLmZhdmljb25ULCAuQ291bnRlclQiKTsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFsbE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChhbGxOb2Rlc1tpXS5nZXRBdHRyaWJ1dGUoJ2FjQ2xpY2snKSA9PSBudWxsKSB7CiAgICAgICAgICAgICAgICBhbGxOb2Rlc1tpXS5zZXRBdHRyaWJ1dGUoJ2FjQ2xpY2snLCAnMScpOwogICAgICAgICAgICAgICAgdHJ5ewogICAgICAgICAgICAgICAgICAgIGFsbE5vZGVzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIEFDdG9nZ2xlU2V0dGluZ0Rpc3BsYXkoKTsKICAgICAgICAgICAgICAgICAgICB9LCB0cnVlKTsKICAgICAgICAgICAgICAgIH1jYXRjaCAoZSl7fQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRyeXsKICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLXNhdmVidXR0b24iKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICAvLyDkv53lrZjlip/og70KICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCJpc1JlZGlyZWN0RW5hYmxlIiwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLXJlZGlyZWN0IikuY2hlY2tlZCk7CiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgiaXNBZHNFbmFibGUiLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3AtYWMtYWRzIikuY2hlY2tlZCk7CiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgiQWRzU3R5bGVNb2RlIiwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignaW5wdXRbbmFtZT0ic3AtYWMtYV9mb3JjZV9zdHlsZSJdOmNoZWNrZWQnKS52YWx1ZSk7CiAgICAgICAgICAgICAgICBHTV9zZXRWYWx1ZSgiaXNGYXZpY29uRW5hYmxlIiwgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWZhdmljb24iKS5jaGVja2VkKTsKICAgICAgICAgICAgICAgIEdNX3NldFZhbHVlKCJpc0NvdW50ZXJFbmFibGUiLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3AtYWMtY291bnRlciIpLmNoZWNrZWQpOwogICAgICAgICAgICAgICAgR01fc2V0VmFsdWUoImlzQUxpbmVFbmFibGUiLCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3AtYWMtYWxpbmUiKS5jaGVja2VkKTsKICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIH0sIDQwMCk7CiAgICAgICAgICAgIH0sIGZhbHNlKTsKICAgICAgICB9Y2F0Y2ggKGUpe30KICAgICAgICB0cnl7CiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzcC1hYy1jYW5jZWxidXR0b24iKS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3AtYWMtY29udGVudCIpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7CiAgICAgICAgICAgIH0sIGZhbHNlKTsKICAgICAgICB9Y2F0Y2ggKGUpe30KCiAgICB9CgogICAgZnVuY3Rpb24gTG9hZFNldHRpbmcoKSB7CiAgICAgICAgaXNSZWRpcmVjdEVuYWJsZSA9IEdNX2dldFZhbHVlKCJpc1JlZGlyZWN0RW5hYmxlIiwgdHJ1ZSk7CiAgICAgICAgaXNBZHNFbmFibGUgPSBHTV9nZXRWYWx1ZSgiaXNBZHNFbmFibGUiLCB0cnVlKTsKICAgICAgICBBZHNTdHlsZU1vZGUgPSBHTV9nZXRWYWx1ZSgiQWRzU3R5bGVNb2RlIiwgMCk7CiAgICAgICAgaXNGYXZpY29uRW5hYmxlID0gR01fZ2V0VmFsdWUoImlzRmF2aWNvbkVuYWJsZSIsIHRydWUpOwogICAgICAgIGlzQ291bnRlckVuYWJsZSA9IEdNX2dldFZhbHVlKCJpc0NvdW50ZXJFbmFibGUiLCBmYWxzZSk7CiAgICAgICAgaXNBTGluZUVuYWJsZSA9IEdNX2dldFZhbHVlKCJpc0FMaW5lRW5hYmxlIiwgZmFsc2UpOwogICAgfQogICAgZnVuY3Rpb24gcmVtb3ZlT25Nb3VzZURvd25GdW5jKCkgewogICAgICAgIHRyeSB7CiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5nIC5yYyAuciBhIikuZm9yRWFjaChmdW5jdGlvbiAob25lKSB7CiAgICAgICAgICAgICAgICBvbmUuc2V0QXR0cmlidXRlKCJvbm1vdXNlZG93biIsICIiKTsgLy8g6LC35q2M5Y676YeN5a6a5ZCR5bmy5omwCiAgICAgICAgICAgICAgICBvbmUuc2V0QXR0cmlidXRlKCJ0YXJnZXQiLCAiX2JsYW5rIik7IC8vIOiwt+atjOmTvuaOpeaWsOagh+etvuaJk+W8gAogICAgICAgICAgICB9KTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gcmVtb3ZlTGlua1RhcmdldCgpIHsKICAgICAgICAvLyBjb25zb2xlLmxvZygi56e76Zmk55+l5LmO6YeN5a6a5ZCR6Zeu6aKYIik7CiAgICAgICAgdmFyIG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLkNhcmQgLkxpc3QgLlJpY2hDb250ZW50IGFbaHJlZio9J2h0dHBzOi8vbGluay56aGlodS5jb20vP3RhcmdldCddIik7CiAgICAgICAgZm9yKHZhciBpPTA7IGk8bm9kZXMubGVuZ3RoOyBpKyspewogICAgICAgICAgICB2YXIgdXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KG5vZGVzW2ldLmhyZWYucmVwbGFjZSgiaHR0cHM6Ly9saW5rLnpoaWh1LmNvbS8/dGFyZ2V0PSIsICIiKSk7CiAgICAgICAgICAgIG5vZGVzW2ldLmhyZWYgPSB1cmw7CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gcmVzZXRVUkxOb3JtYWwobGlzdCkgewogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAvLyDmraTmlrnms5XmmK/lvILmraXvvIzmlYXlnKjnu5PmnZ/nmoTml7blgJnkvb/nlKhp5Lya5Ye66Zeu6aKYLeS4pemHjSEKICAgICAgICAgICAgLy8g6YeH55So6Zet5YyF55qE5pa55rOV5p2l6L+b6KGM5pWw5o2u55qE5Lyg6YCSCiAgICAgICAgICAgIHZhciBjdXJOb2RlID0gbGlzdFtpXTsKICAgICAgICAgICAgdmFyIGN1cmhyZWYgPSBjdXJOb2RlLmhyZWY7CiAgICAgICAgICAgIGlmIChsaXN0W2ldICE9IG51bGwgJiYgbGlzdFtpXS5nZXRBdHRyaWJ1dGUoImFjX3JlZGlyZWN0U3RhdHVzIikgPT0gbnVsbCkgewogICAgICAgICAgICAgICAgbGlzdFtpXS5zZXRBdHRyaWJ1dGUoImFjX3JlZGlyZWN0U3RhdHVzIiwgIjAiKTsKICAgICAgICAgICAgICAgIGlmIChjdXJocmVmLmluZGV4T2YoInd3dy5iYWlkdS5jb20vbGluayIpID4gLTEgfHwgY3VyaHJlZi5pbmRleE9mKCJtLmJhaWR1LmNvbS9mcm9tIikgPiAtMSB8fCBjdXJocmVmLmluZGV4T2YoInd3dy5zb2dvdS5jb20vbGluayIpID4gLTEgfHwgY3VyaHJlZi5pbmRleE9mKCJzby5jb20vbGluayIpID4gLTEpIHsKICAgICAgICAgICAgICAgICAgICAoZnVuY3Rpb24gKGNfY3Vybm9kZSxjX2N1cmhyZWYpIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgZ21SZXF1ZXN0Tm9kZSA9IEdNX3htbGh0dHBSZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cmw6IGNfY3VyaHJlZiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICJBY2NlcHQiOiAidGV4dC9odG1sIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbWV0aG9kOiAiR0VUIiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbnJlYWR5c3RhdGVjaGFuZ2U6IGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoU2l0ZVR5cGVJRCA9PSBTaXRlVHlwZS5CQUlEVSkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzcG9uc2UuZmluYWxVcmwgIT0gY19jdXJocmVmICYmIHJlc3BvbnNlLmZpbmFsVXJsIT0iIiAmJiByZXNwb25zZS5maW5hbFVybCAhPSBudWxsKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgcmVzdWx0VVJMID0gcmVzcG9uc2UuZmluYWxVcmw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYocmVzdWx0VVJMICE9IG51bGwgJiYgcmVzdWx0VVJMICE9ICIiICYmIChyZXN1bHRVUkwuaW5kZXhPZigid3d3LmJhaWR1LmNvbS9saW5rIikgPCAwICYmIHJlc3VsdFVSTC5pbmRleE9mKCJtLmJhaWR1LmNvbS9mcm9tIikgPCAwKSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICQoImFbaHJlZio9JyIrY19jdXJocmVmKyInXSIpLmF0dHIoImhyZWYiLCByZXN1bHRVUkwpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAkKCJhW2hyZWYqPSciK2NfY3VyaHJlZisiJ10iKS5hdHRyKCJhY19yZWRpcmVjdFN0YXR1cyIsICIyIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGdtUmVxdWVzdE5vZGUuYWJvcnQoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWFsUmVkaXJlY3QoZ21SZXF1ZXN0Tm9kZSwgY19jdXJocmVmLCByZXNwb25zZS5yZXNwb25zZVRleHQsICJsb2NhdGlvbi5yZXBsYWNlXFwoXCIoW15cIl0rKVwiIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1lbHNlIGlmIChTaXRlVHlwZUlEID09IFNpdGVUeXBlLlNPR09VKSB7IC8v5aaC5p6c5piv5pCc54uX55qE57uT5p6cCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBEZWFsUmVkaXJlY3QoZ21SZXF1ZXN0Tm9kZSwgY19jdXJocmVmLCByZXNwb25zZS5yZXNwb25zZVRleHQsICJVUkw9JyhbXiddKyknIik7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihTaXRlVHlwZUlEID09IFNpdGVUeXBlLlNPKXsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIERlYWxSZWRpcmVjdChnbVJlcXVlc3ROb2RlLCBjX2N1cmhyZWYsIHJlc3BvbnNlLnJlc3BvbnNlVGV4dCwgIlVSTD0nKFteJ10rKSciKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICB9LCAxMDApOwogICAgICAgICAgICAgICAgICAgIH0pKGN1ck5vZGUsIGN1cmhyZWYpOyAvL+S8oOmAkuaXp+eahOe9keWdgOi/h+WOu++8jOivu+S9nGNfY3VyaHJlZgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gRGVhbFJlZGlyZWN0KHJlcXVlc3QsIGN1ck5vZGVIcmVmLCByZXNwVGV4dCwgUmVnVGV4dCl7CiAgICAgICAgaWYocmVzcFRleHQgPT0gbnVsbCB8fCB0eXBlb2YocmVzcFRleHQpPT0idW5kZWZpbmVkIikgcmV0dXJuOwogICAgICAgIHZhciByZXN1bHRVUkwgPSAiIjsKICAgICAgICB2YXIgcmVzdWx0UmVzcG9uc2VVcmwgPSBSZWdfR2V0KHJlc3BUZXh0LCBSZWdUZXh0KTsKICAgICAgICBpZiAocmVzdWx0UmVzcG9uc2VVcmwgIT0gbnVsbCl7CiAgICAgICAgICAgIHJlc3VsdFVSTCA9IHJlc3VsdFJlc3BvbnNlVXJsOwogICAgICAgIH0KICAgICAgICBpZihyZXN1bHRVUkwgIT0gbnVsbCAmJiByZXN1bHRVUkwgIT0gIiIpewogICAgICAgICAgICAkKCJhW2hyZWYqPSciK2N1ck5vZGVIcmVmKyInXSIpLmF0dHIoImhyZWYiLCByZXN1bHRVUkwpOwogICAgICAgICAgICAkKCJhW2hyZWYqPSciK2N1ck5vZGVIcmVmKyInXSIpLmF0dHIoImFjX3JlZGlyZWN0U3RhdHVzIiwgIjIiKTsKICAgICAgICAgICAgcmVxdWVzdC5hYm9ydCgpOwogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIFJlZ19HZXQoSFRNTCwgcmVnKSB7CiAgICAgICAgdmFyIFJlZ0UgPSBuZXcgUmVnRXhwKHJlZyk7CiAgICAgICAgdHJ5IHsKICAgICAgICAgICAgcmV0dXJuIFJlZ0UuZXhlYyhIVE1MKVsxXTsKICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIHJldHVybiAiIjsKICAgICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gcmVtb3ZlQURfYmFpZHVfc29nb3UoKSB7IC8vIOenu+mZpOeZvuW6puiHquacieW5v+WRigogICAgICAgIGlmIChTaXRlVHlwZUlEID09IFNpdGVUeXBlLkJBSURVKSB7CiAgICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIjY29udGVudF9sZWZ0IilbMF0gIT0gbnVsbCkgewogICAgICAgICAgICAgICAgdmFyIGZhdGhlcnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIjY29udGVudF9sZWZ0IilbMF0uY2hpbGROb2RlczsKICAgICAgICAgICAgICAgIHZhciBsYXN0SWQgPSAwOwogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBmYXRoZXJzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGN1cnJlbnROb2RlID0gZmF0aGVyc1tpXTsKICAgICAgICAgICAgICAgICAgICBpZiAoY3VycmVudE5vZGUudGFnTmFtZSA9PSAiRElWIiAmJiBjdXJyZW50Tm9kZS5nZXRBdHRyaWJ1dGUoImRlYWxBRCIpID09IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG51bGwgPT0gY3VycmVudE5vZGUuaWQgfHwgIiIgPT0gY3VycmVudE5vZGUuaWQpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIOexs+aciUlE55qE6LKM5Ly86YO95piv5bm/5ZGKCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygi56e76Zmk5bm/5ZGKMSBDTEFTUz0iICsgY3VycmVudE5vZGUuY2xhc3NOYW1lKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnROb2RlLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaS0tOyAvLyDliqjmgIHnp7vpmaTlr7zoh7TnmoRp5b+F6aG75LiL6ZmNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoY3VycmVudE5vZGUuaWQgPT0gImNsb25lIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSUQg5pi+56S65Li6Q0xPTkXnmoTkuZ/mmK/lub/lkYoKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLnp7vpmaTlub/lkYoyIElEPSIgKyBjdXJyZW50Tm9kZS5pZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjdXJyZW50Tm9kZS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGktLTsgLy8g5Yqo5oCB56e76Zmk5a+86Ie055qEaeW/hemhu+S4i+mZjQogICAgICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKGN1cnJlbnROb2RlLmNsYXNzTmFtZS5pbmRleE9mKCJyZXN1bHQiKSAhPSAwICYmIC9eXGQrJC8udGVzdChjdXJyZW50Tm9kZS5pZCkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vIGNsYXNz5LiN5pivcmVzdWx0Li4u55qE77yM5bm25LiUaWTmmK/nuq/nsrnmlbDlrZfnmoQo5b6I5aSnKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIuenu+mZpOW5v+WRijMgSUQ9IiArIGN1cnJlbnROb2RlLmlkKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnJlbnROb2RlLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaS0tOyAvLyDliqjmgIHnp7vpmaTlr7zoh7TnmoRp5b+F6aG75LiL6ZmNCiAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2YXIgbm9kZSA9IGN1cnJlbnROb2RlLnF1ZXJ5U2VsZWN0b3JBbGwoIi5mMTM+c3BhbiIpWzBdOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG5vZGUgIT0gbnVsbCAmJiBub2RlLmlubmVySFRNTCA9PSAi5bm/5ZGKIikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLnp7vpmaTlub/lkYo0IElEPSIgKyBjdXJyZW50Tm9kZS5pZCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE5vZGUucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaS0tOyAvLyDliqjmgIHnp7vpmaTlr7zoh7TnmoRp5b+F6aG75LiL6ZmNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgY3VycmVudE5vZGUuc2V0QXR0cmlidXRlKCJkZWFsQUQiLCAxKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKFNpdGVUeXBlSUQgPT0gU2l0ZVR5cGUuU09HT1UpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNwcm9tb3Rpb25fYWR2X2NvbnRhaW5lciIpLnJlbW92ZSgpOwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNrbWFwX2J1c2luZXNzX3RpdGxlIikucmVtb3ZlKCk7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgfQogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2ttYXBfYnVzaW5lc3NfdWwiKS5yZW1vdmUoKTsKICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICB9CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIucnZyLW1vZGVsW3N0eWxlPSd3aWR0aDoyNTBweDsnXSIpLnN0eWxlID0gImRpc3BsYXk6bm9uZSI7CiAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhZGRDb3VudGVyKGNpdGVMaXN0KSB7CiAgICAgICAgdmFyIGNzc1RleHQgPSAiZGlzcGxheTppbmxpbmUtYmxvY2s7YmFja2dyb3VuZDojRkQ5OTk5O2NvbG9yOiNEN0Q3RDc7Zm9udC1mYW1pbHk6J+W+rui9r+mbhem7kSc7Zm9udC1zaXplOjE2cHg7dGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6MjBweDtsaW5lLWhlaWdodDoyMHB4O2JvcmRlci1yYWRpdXM6NTAlO2Zsb2F0OmxlZnQ7IjsKICAgICAgICB2YXIgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBjaXRlTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBpZiAoY2l0ZUxpc3RbaV0uZ2V0QXR0cmlidXRlKCdzb3J0SW5kZXgnKSkgewogICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICBjaXRlTGlzdFtpXS5zZXRBdHRyaWJ1dGUoJ3NvcnRJbmRleCcsIGkpOwogICAgICAgICAgICAgICAgY2l0ZUxpc3RbaV0uaW5uZXIgPSBjaXRlTGlzdFtpXS5pbm5lckhUTUw7CiAgICAgICAgICAgICAgICBkaXYuaW5uZXJIVE1MID0gIjxkaXYgY2xhc3M9J0NvdW50ZXJUJyBzdHlsZT0iICsgY3NzVGV4dCArICI+IiArIChpICsgMSkgKyAiPC9kaXY+IjsKICAgICAgICAgICAgICAgIGNpdGVMaXN0W2ldLmlubmVySFRNTCA9IGRpdi5pbm5lckhUTUwgKyBjaXRlTGlzdFtpXS5pbm5lcjsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBhZGRGYXZpY29uKGNpdGVMaXN0KSB7CiAgICAgICAgZm9yICh2YXIgaW5kZXggPSAwOyBpbmRleCA8IGNpdGVMaXN0Lmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICB2YXIgdXJsID0gcmVwbGFjZUFsbChjaXRlTGlzdFtpbmRleF0uaW5uZXJIVE1MKTsKICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhpbmRleCsiLiIrdXJsKTsKICAgICAgICAgICAgaWYgKG51bGwgPT0gY2l0ZUxpc3RbaW5kZXhdLmdldEF0dHJpYnV0ZSgiYWNfZmF2aWNvblN0YXR1cyIpKSB7CiAgICAgICAgICAgICAgICBpZiAodXJsID09ICIiKSB7CiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coIuaXoOaViOWcsOWdgO+8miIgKyBjaXRlTGlzdFtpbmRleF0uaW5uZXJIVE1MKTsKICAgICAgICAgICAgICAgICAgICBjaXRlTGlzdFtpbmRleF0uc2V0QXR0cmlidXRlKCJhY19mYXZpY29uU3RhdHVzIiwgIi0xIik7CiAgICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB2YXIgY3VyTm9kZSA9IGNpdGVMaXN0W2luZGV4XTsKICAgICAgICAgICAgICAgIHZhciBmYXZpY29uVXJsID0gdXJsOwogICAgICAgICAgICAgICAgZm9yIChJSSA9IDA7IElJIDw9IDU7IElJKyspIHsKICAgICAgICAgICAgICAgICAgICBjdXJOb2RlID0gY3VyTm9kZS5wYXJlbnROb2RlOwogICAgICAgICAgICAgICAgICAgIGlmIChpc0luVXJsTGlzdChjdXJOb2RlLmNsYXNzTmFtZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgLy9jb25zb2xlLmxvZyhpbmRleCsiLiIrZmF2aWNvblVybCsiLS0iK0lJKTsKICAgICAgICAgICAgICAgIGlmIChJSSA8PSA1KSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIHRtcEhUTUwgPSBjdXJOb2RlLmlubmVySFRNTDsKICAgICAgICAgICAgICAgICAgICB2YXIgcG9zID0gdG1wSFRNTC5pbmRleE9mKCJmYXYtdXJsIikKICAgICAgICAgICAgICAgICAgICAgICAgJiB0bXBIVE1MLmluZGV4T2YoImZhdnVybCIpCiAgICAgICAgICAgICAgICAgICAgICAgICYgdG1wSFRNTC5pbmRleE9mKCJ0aXQtaWNvIikKICAgICAgICAgICAgICAgICAgICAgICAgJiB0bXBIVE1MLmluZGV4T2YoImltZ19mYXYgcm1zX2ltZyIpCiAgICAgICAgICAgICAgICAgICAgICAgICYgdG1wSFRNTC5pbmRleE9mKCJjLXRvb2wtIikKICAgICAgICAgICAgICAgICAgICAgICAgJiB0bXBIVE1MLmluZGV4T2YoInNwYW4gY2xhc3M9XCJjLWljb24gYy1pY29uLSIpOwogICAgICAgICAgICAgICAgICAgIC8v5LuW6Ieq5bex5bey57uP5YGa5LqGZmF2aWNvbuS6hgogICAgICAgICAgICAgICAgICAgIGlmIChwb3MgPiAtMSkgewogICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygi5bey5pyJ5Zu+54mH77yaIiArIGZhdmljb25VcmwpOwogICAgICAgICAgICAgICAgICAgICAgICBjaXRlTGlzdFtpbmRleF0uc2V0QXR0cmlidXRlKCJhY19mYXZpY29uU3RhdHVzIiwgIi0yIik7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAvL2h0dHBzOi8vYXBpLmJ5aS5wdy9mYXZpY29uLz91cmw9Pz8/PyDkuI3nqLPlrpoKICAgICAgICAgICAgICAgICAgICAvL2h0dHA6Ly8iK2Zhdmljb25VcmwrIi9jZG4uaWNvP2RlZmF1bHRpY29uPWh0dHA6Ly9zb3ouaW0vZmF2aWNvbi5pY28g5LiN56iz5a6aCiAgICAgICAgICAgICAgICAgICAgLy9odHRwczovL3d3dy54dHdpbmQuY29tL2FwaS9pbmRleC5waHA/dXJsPT8/Pz8g5oyC5LqG44CC44CC44CCCiAgICAgICAgICAgICAgICAgICAgLy9odHRwczovL3N0YXRpY3MuZG5zcG9kLmNuL3Byb3h5X2Zhdmljb24vXy9mYXZpY29uP2RvbWFpbj1zaW5hLmNuCiAgICAgICAgICAgICAgICAgICAgLy/lpoLmnpzlnLDlnYDkuI3mraPnoa7vvIzpgqPkuYjkuKLlvIMKICAgICAgICAgICAgICAgICAgICB2YXIgaG9zdCA9IGZhdmljb25VcmwucmVwbGFjZSgvW14uXStcLihbXi5dKylcLihbXi5dKykvLCAiJDEuJDIiKTsKICAgICAgICAgICAgICAgICAgICBpZiAoY3VyTm9kZS5xdWVyeVNlbGVjdG9yKCIuZmF2aWNvblQiKSA9PSBudWxsICYmIGhvc3QubGVuZ3RoID4gMykgewogICAgICAgICAgICAgICAgICAgICAgICB2YXIgaW5zTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgICAgICAgICAgICAgICAgICAgICBjdXJOb2RlID0gY3VyTm9kZS5jaGlsZHJlblswXTsgLy9maXJzdENoaWxk5a655piT6YGH5YiwdGV4dOWvueixoQogICAgICAgICAgICAgICAgICAgICAgICBjaXRlTGlzdFtpbmRleF0uc2V0QXR0cmlidXRlKCJhY19mYXZpY29uU3RhdHVzIiwgIjEiKTsKICAgICAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5pbnNlcnRCZWZvcmUoaW5zTm9kZSwgY3VyTm9kZS5maXJzdENoaWxkKTsKICAgICAgICAgICAgICAgICAgICAgICAgaW5zTm9kZS5jbGFzc05hbWUgPSAiZmF2aWNvblQiOwogICAgICAgICAgICAgICAgICAgICAgICBpbnNOb2RlLnN0eWxlID0gInZlcnRpY2FsLWFsaWduOnN1YjtoZWlnaHQ6MTZweDt3aWR0aDoxNnB4O21hcmdpbi1yaWdodDo1cHgiOwogICAgICAgICAgICAgICAgICAgICAgICBpbnNOb2RlLnNyYyA9ICJodHRwczovL2Zhdmljb24ueWFuZGV4Lm5ldC9mYXZpY29uLyIgKyBob3N0OwogICAgICAgICAgICAgICAgICAgICAgICBpbnNOb2RlLnNldEF0dHJpYnV0ZSgiZmF2aWNvbklEIiwgIjAiKTsKICAgICAgICAgICAgICAgICAgICAgICAgaW5zTm9kZS5vbmxvYWQgPSBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAoaW5zTm9kZS5uYXR1cmFsV2lkdGggPCAxNikgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coIuWksei0pTLvvJoiK2Zhdmljb25VcmwrIuaaguaXtuaXoOinoyIpOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGluc05vZGUuc3JjID0gImh0dHBzOi8vY29kaW5nLm5ldC91L3piMjI3L3AvemJJbWcvZ2l0L3Jhdy9tYXN0ZXIvaW1nMC9pY29uLmpwZyI7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiByZXBsYWNlQWxsKHNiZWZvcmUpIHsKICAgICAgICAgICAgdmFyIHNlbmQ7CiAgICAgICAgICAgIHZhciByZXN1bHQgPSBzYmVmb3JlLnNwbGl0KCctJyk7CiAgICAgICAgICAgIGlmIChTaXRlVHlwZUlEID09IFNpdGVUeXBlLlNPR09VICYmIGxvY2F0aW9uLmhyZWYuaW5kZXhPZigic29nb3UiKSA8IDIwKSB7CiAgICAgICAgICAgICAgICAvLyAtLeaQnOeLl+S4k+eUqO+8m+WmguaenOesrOS4gOS4quaYr+S4reaWh+eahOivne+8jOWcsOWdgOWwseaYr+esrOS6jOS4qgogICAgICAgICAgICAgICAgc2JlZm9yZSA9IHJlc3VsdFsxXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBzZW5kID0gc2JlZm9yZS5yZXBsYWNlKC8oXC9bXi9dKnxccyopLywgIiIpLnJlcGxhY2UoLzxbXj5dKj4vZywgIiIpLnJlcGxhY2UoL2h0dHBzPzpcL1wvL2csICIiKS5yZXBsYWNlKC88XC8/c3Ryb25nPi9nLCAiIikucmVwbGFjZSgvPFwvP2I+L2csICIiKS5yZXBsYWNlKC88Pz4/L2csICIiKS5yZXBsYWNlKC8oIHxcLykuKi9nLCAiIik7CiAgICAgICAgICAgIHJldHVybiBzZW5kOwogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gaXNJblVybExpc3QodXJsKSB7CiAgICAgICAgICAgIHZhciBsZW5nID0gZmF0aGVyTmFtZS5sZW5ndGg7CiAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuZzsgaSsrKSB7CiAgICAgICAgICAgICAgICBpZiAodXJsLmluZGV4T2YoZmF0aGVyTmFtZVtpXSkgPj0gMCkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICB9CiAgICBmdW5jdGlvbiBJbnNlcnRTZXR0aW5nTWVudSgpewogICAgICAgIGlmICgkKCIjbXl1c2VyIikubGVuZ3RoIDwgMSkgewogICAgICAgICAgICB2YXIgJHBhcmVudCA9ICQoIiN1Iik7CiAgICAgICAgICAgICRwYXJlbnQuc3R5bGU9IndpZHRoOiAzMTlweDsiOwogICAgICAgICAgICB2YXIgJGRpdiA9ICQoIjxhIHN0eWxlPSd0ZXh0LWRlY29yYXRpb246IG5vbmU7Jz48b2wgaWQ9J215dXNlcicgc3R5bGU9J2Rpc3BsYXk6IGlubGluZS1ibG9jazsnPiIgKwogICAgICAgICAgICAgICAgIjxsaSBjbGFzcz0nbXl1c2VyY29uZmlnJyBzdHlsZT0nZGlzcGxheTogaW5saW5lLWJsb2NrO2hlaWdodDogMThweDtsaW5lLWhlaWdodDogMS41O2JhY2tncm91bmQ6ICMyODY2YmQ7Y29sb3I6ICNmZmY7Zm9udC13ZWlnaHQ6IGJvbGQ7dGV4dC1hbGlnbjogY2VudGVyO3BhZGRpbmc6IDZweDtib3JkZXItcmFkaXVzOiA1cHg7Jz7oh6rlrprkuYk8L2xpPjwvb2w+PC9hPiIpOwogICAgICAgICAgICAkZGl2LnByZXBlbmRUbygkcGFyZW50KTsKICAgICAgICAgICAgdHJ5ewogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI215dXNlciAubXl1c2VyY29uZmlnIikuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBBQ3RvZ2dsZVNldHRpbmdEaXNwbGF5KCk7CiAgICAgICAgICAgICAgICB9LCB0cnVlKTsKICAgICAgICAgICAgfWNhdGNoIChlKXt9CiAgICAgICAgfQogICAgfQogICAgZnVuY3Rpb24gRlNCYWlkdSgpIHsgLy8gdGhhbmtzIGZvciBjb2RlIGZyb20g5rWu55SfQOacquathyBAcGFnZSBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLVRXL3NjcmlwdHMvMzE2NDIKICAgICAgICB2YXIgU3R5bGVNYW5nZXIgPSB7CiAgICAgICAgICAgIGltcG9ydFN0eWxlOiBmdW5jdGlvbiAoZmlsZVVybCwgdG9DbGFzc05hbWUpIHsKICAgICAgICAgICAgICAgIGlmKCQoIi4iK3RvQ2xhc3NOYW1lKS5sZW5ndGggPiAwKSByZXR1cm47CiAgICAgICAgICAgICAgICBpZigkKCIjY29udGVudF9sZWZ0IikubGVuZ3RoIDw9IDApIHJldHVybjsKICAgICAgICAgICAgICAgIHZhciBzc05vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsaW5rIik7CiAgICAgICAgICAgICAgICBzc05vZGUucmVsID0gInN0eWxlc2hlZXQiOwogICAgICAgICAgICAgICAgc3NOb2RlLnR5cGUgPSAidGV4dC9jc3MiOwogICAgICAgICAgICAgICAgc3NOb2RlLmNsYXNzTmFtZSA9IHRvQ2xhc3NOYW1lOwogICAgICAgICAgICAgICAgc3NOb2RlLm1lZGlhID0gInNjcmVlbiI7CiAgICAgICAgICAgICAgICBzc05vZGUuaHJlZiA9IGZpbGVVcmw7CiAgICAgICAgICAgICAgICB0cnl7ZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzc05vZGUpO31jYXRjaCAoZSl7fQogICAgICAgICAgICB9LAogICAgICAgICAgICAvL+WKoOi9veaZrumAmuagt+W8jwogICAgICAgICAgICBsb2FkQ29tbW9uU3R5bGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHRoaXMuaW1wb3J0U3R5bGUoImh0dHBzOi8vcmVtaXguYWMuY24vQUNGaWxlL0NTUy9BQ19CYWlkdS9iYWlkdUNvbW1vblN0eWxlLmNzcyIsICJiYWlkdUNvbW1vblN0eWxlIik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8v5Yqg6L296Ieq5a6a5LmJ6I+c5Y2V5qC35byPCiAgICAgICAgICAgIGxvYWRNeU1lbnVTdHlsZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdGhpcy5pbXBvcnRTdHlsZSgiaHR0cHM6Ly9yZW1peC5hYy5jbi9BQ0ZpbGUvQ1NTL0FDX0JhaWR1L2JhaWR1TXlNZW51U3R5bGUuY3NzIiwgImJhaWR1TXlNZW51U3R5bGUiKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy/liqDovb3ljZXpobXmoLflvI8KICAgICAgICAgICAgbG9hZE9uZVBhZ2VTdHlsZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdGhpcy5pbXBvcnRTdHlsZSgiaHR0cHM6Ly9yZW1peC5hYy5jbi9BQ0ZpbGUvQ1NTL0FDX0JhaWR1L2JhaWR1T25lUGFnZVN0eWxlLmNzcyIsICJiYWlkdU9uZVBhZ2VTdHlsZSIpOwogICAgICAgICAgICAgICAgJCgiI3Jlc3VsdF9sb2dvIGltZyIpLmF0dHIoInNyYyIsICJodHRwOi8vd3cxLnNpbmFpbWcuY24vbGFyZ2UvNmExNTU3OTRseTFma3gxdWh4Zno2ajIwMzkwMTJ3ZW4uanBnIik7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8v5Yqg6L295Y+M6aG15qC35byPCiAgICAgICAgICAgIGxvYWRUd29QYWdlU3R5bGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHRoaXMuaW1wb3J0U3R5bGUoImh0dHBzOi8vcmVtaXguYWMuY24vQUNGaWxlL0NTUy9BQ19CYWlkdS9iYWlkdVR3b1BhZ2VTdHlsZS5jc3MiLCAiYmFpZHVUd29QYWdlU3R5bGUiKTsKICAgICAgICAgICAgICAgICQoIiNyZXN1bHRfbG9nbyBpbWciKS5hdHRyKCJzcmMiLCAiaHR0cDovL3d3MS5zaW5haW1nLmNuL2xhcmdlLzZhMTU1Nzk0bHkxZmt4MXVoeGZ6NmoyMDM5MDEyd2VuLmpwZyIpOwogICAgICAgICAgICB9LAogICAgICAgICAgICBsb2FkRXhwYW5kT25lU3R5bGU6ZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgQUNfYWRkU3R5bGUoCiAgICAgICAgICAgICAgICAgICAgIiNjb250ZW50X2xlZnQgLnJlc3VsdC1vcDpob3ZlciwjY29udGVudF9sZWZ0IC5yZXN1bHQ6aG92ZXJ7Ym94LXNoYWRvdzowIDAgMnB4IGdyYXk7YmFja2dyb3VuZDpyZ2JhKDIzMCwyMzAsMjMwLDAuMSkhaW1wb3J0YW50O31cbiIgKwogICAgICAgICAgICAgICAgICAgICIjY29udGVudF9sZWZ0IC5yZXN1bHQsI2NvbnRlbnRfbGVmdCAucmVzdWx0LW9we3dpZHRoOjEwMCU7IG1pbi13aWR0aDo2NzBweDttYXJnaW4tYm90dG9tOjE0cHghaW1wb3J0YW50O31cbiIgKwogICAgICAgICAgICAgICAgICAgICIuYy1zcGFuMTh7d2lkdGg6NzglIWltcG9ydGFudDttaW4td2lkdGg6NTUwcHg7fVxuIiArCiAgICAgICAgICAgICAgICAgICAgIi5jLXNwYW4yNHt3aWR0aDogYXV0byFpbXBvcnRhbnQ7fSIsICJsb2FkRXhwYW5kT25lU3R5bGUiKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdGhpcy5sb2FkTXlNZW51U3R5bGUoKTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgaW1wb3J0T25jZUNTUzogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdGhpcy5pbml0KCk7CiAgICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIHZhciBDb250cm9sTWFuYWdlciA9IHsKICAgICAgICAgICAgdHdvUGFnZURpc3BsYXk6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciAkZGl2ID0gJCgiPGRpdiBpZD0nZG91YmxlJz48L2Rpdj4iKTsKICAgICAgICAgICAgICAgIHZhciAkZG91YmxlID0gbnVsbDsKICAgICAgICAgICAgICAgIHZhciAkcGFyZW50ID0gbnVsbDsKICAgICAgICAgICAgICAgIHZhciAkc2VsZWN0b3IgPSBudWxsOwogICAgICAgICAgICAgICAgLy/mlofmoaPliqDovb3lrozmiJDlho3ov5DooYwKICAgICAgICAgICAgICAgICQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgICBpZiAoJCgiI2NvbnRlbnRfbGVmdD4jZG91YmxlIikubGVuZ3RoIDwgMSkgewogICAgICAgICAgICAgICAgICAgICAgICAkcGFyZW50ID0gJCgiI2NvbnRlbnRfbGVmdCIpOwogICAgICAgICAgICAgICAgICAgICAgICAkc2VsZWN0b3IgPSAkKCIjY29udGVudF9sZWZ0Pi5jLWNvbnRhaW5lcjpvZGQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgJGRpdi5wcmVwZW5kVG8oJHBhcmVudCk7CiAgICAgICAgICAgICAgICAgICAgICAgICRzZWxlY3Rvci5wcmVwZW5kVG8oJCgiI2RvdWJsZSIpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgLy/lhbzlrrnoh6rliqjnv7vpobXohJrmnKwKICAgICAgICAgICAgICAgICAgICBpZiAoJCgiI2NvbnRlbnRfbGVmdD4uc3Atc2VwYXJhdG9yIikubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBBQ19hZGRTdHlsZSgiI2NvbnRlbnRfbGVmdD4uc3Atc2VwYXJhdG9ye29wYWNpdHk6IDA7fSIpOwogICAgICAgICAgICAgICAgICAgICAgICAkcGFyZW50ID0gJCgiI2NvbnRlbnRfbGVmdD4uc3Atc2VwYXJhdG9yW2lzSGFuZGxlZCE9JzEnXSIpOwogICAgICAgICAgICAgICAgICAgICAgICAkc2VsZWN0b3IgPSAkKCIjY29udGVudF9sZWZ0Pi5zcC1zZXBhcmF0b3JbaXNIYW5kbGVkIT0nMSddfi5jLWNvbnRhaW5lcjpvZGQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gJGRpdi5hZnRlcigkcGFyZW50KTsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gJHBhcmVudC5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgJHBhcmVudC5hdHRyKCJpc0hhbmRsZWQiLCAiMSIpOwogICAgICAgICAgICAgICAgICAgICAgICAkc2VsZWN0b3IuYXBwZW5kVG8oJCgiI2RvdWJsZSIpKTsKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgLy/lsYXkuK3mmL7npLoKICAgICAgICAgICAgY2VudGVyRGlzcGxheTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgdmFyICRyZXN1bHQgPSBBZHNTdHlsZU1vZGUgfHwgbnVsbDsKICAgICAgICAgICAgICAgIGlmKCRyZXN1bHQgPT0gMSl7CiAgICAgICAgICAgICAgICAgICAgU3R5bGVNYW5nZXIubG9hZEV4cGFuZE9uZVN0eWxlKCk7CiAgICAgICAgICAgICAgICAgICAgU3R5bGVNYW5nZXIubG9hZENvbW1vblN0eWxlKCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKCRyZXN1bHQgPT0gMikgey8v5Y2V6aG15bGF5LitCiAgICAgICAgICAgICAgICAgICAgU3R5bGVNYW5nZXIubG9hZEV4cGFuZE9uZVN0eWxlKCk7CiAgICAgICAgICAgICAgICAgICAgU3R5bGVNYW5nZXIubG9hZENvbW1vblN0eWxlKCk7CiAgICAgICAgICAgICAgICAgICAgU3R5bGVNYW5nZXIubG9hZE9uZVBhZ2VTdHlsZSgpOwogICAgICAgICAgICAgICAgfSBlbHNlIGlmICgkcmVzdWx0ID09IDMpIHsgLy/lj4zpobXlsYXkuK0KICAgICAgICAgICAgICAgICAgICBTdHlsZU1hbmdlci5sb2FkQ29tbW9uU3R5bGUoKTsKICAgICAgICAgICAgICAgICAgICBTdHlsZU1hbmdlci5sb2FkVHdvUGFnZVN0eWxlKCk7CiAgICAgICAgICAgICAgICAgICAgdGhpcy50d29QYWdlRGlzcGxheSgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICB0aGlzLmNlbnRlckRpc3BsYXkoKTsKICAgICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgZnVuY3Rpb24gbXV0YXRpb25mdW5jKCkgewogICAgICAgICAgICBpZigkKCIjbGc6dmlzaWJsZSIpLmxlbmd0aCA+IDApeyAvLyDlpKflm77mqKHlvI8tLS0+55m+5bqm6aaW6aG1CiAgICAgICAgICAgICAgICAkKCIjd3JhcHBlciAuc19mb3JtICNmb3JtIikuYXR0cigic3R5bGUiLCAibGVmdDp1bnNldCAhaW1wb3J0YW50OyIpOwogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAgICQoIiN3cmFwcGVyIC5zX2Zvcm0gI2Zvcm0iKS5hdHRyKCJzdHlsZSIsICIiKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZihTaXRlVHlwZUlEID09IFNpdGVUeXBlLkJBSURVKXsKICAgICAgICAgICAgICAgIFN0eWxlTWFuZ2VyLmluaXQoKTsKICAgICAgICAgICAgICAgIENvbnRyb2xNYW5hZ2VyLmluaXQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZigkKCIjZG91YmxlIikubGVuZ3RoID4gMCl7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7IC8vIOWKqOaAgeiuvue9ruW6lemDqOaOqOiNkOWFs+mUruWtl+eahG1hcmdpblRvcOWxnuaApwogICAgICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNjb250YWluZXIgI3JzIGRpdiIpLnBhcmVudE5vZGUuc3R5bGUubWFyZ2luVG9wID0gTWF0aC5tYXgoJCgiI2RvdWJsZSIpLmhlaWdodCgpLCAkKCIjY29udGVudF9sZWZ0IikuaGVpZ2h0KCkpLSQoIiNjb250ZW50X2xlZnQiKS5oZWlnaHQoKSsicHgiOwogICAgICAgICAgICAgICAgfSwgNDAwKTsKICAgICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZihTaXRlVHlwZUlEID09IFNpdGVUeXBlLkJBSURVKXsKICAgICAgICAgICAgU3R5bGVNYW5nZXIuaW5pdCgpOwogICAgICAgICAgICBDb250cm9sTWFuYWdlci5pbml0KCk7CiAgICAgICAgICAgIHRyeXsKICAgICAgICAgICAgICAgIG11dGF0aW9uZnVuYygpOwogICAgICAgICAgICB9Y2F0Y2ggKGUpe30KICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIHZhciBvYnNlcnZlciA9IG5ldyBBQ01PKG11dGF0aW9uZnVuYyk7CiAgICAgICAgICAgICAgICB2YXIgd3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiN3cmFwcGVyIik7CiAgICAgICAgICAgICAgICBvYnNlcnZlci5vYnNlcnZlKHdyYXBwZXIsIHsKICAgICAgICAgICAgICAgICAgICAiYXR0cmlidXRlcyI6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICJjaGFyYWN0ZXJEYXRhIjogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgInN1YnRyZWUiOiB0cnVlLAogICAgICAgICAgICAgICAgICAgICJhdHRyaWJ1dGVzRmlsdGVyIjogWyJjbGFzcyJdLAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBtdXRhdGlvbmZ1bmMoKTsKICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICB9CiAgICAgICAgfWVsc2V7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICB9CiAgICB9Cn0pKCk7"},{"name":"仓库用度盘投稿助手","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://pan.baidu.com/disk/home*","http://yun.baidu.com/disk/home*","https://pan.baidu.com/disk/home*","https://yun.baidu.com/disk/home*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856044},"enabled":false,"position":11,"file_url":"https://greasyfork.org/scripts/3285-%E4%BB%93%E5%BA%93%E7%94%A8%E5%BA%A6%E7%9B%98%E6%8A%95%E7%A8%BF%E5%8A%A9%E6%89%8B/code/%E4%BB%93%E5%BA%93%E7%94%A8%E5%BA%A6%E7%9B%98%E6%8A%95%E7%A8%BF%E5%8A%A9%E6%89%8B.user.js","uuid":"3e5041b5-2d70-4beb-a18b-a2d4336e8a6d","source":""},{"name":"解决百度云大文件下载限制 （路人添加版）","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/*","*://yun.baidu.com/*","*://eyun.baidu.com/*","*://wangpan.baidu.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856048},"enabled":true,"position":12,"file_url":"https://greasyfork.org/scripts/30578-%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6-%E8%B7%AF%E4%BA%BA%E6%B7%BB%E5%8A%A0%E7%89%88/code/%E8%A7%A3%E5%86%B3%E7%99%BE%E5%BA%A6%E4%BA%91%E5%A4%A7%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E9%99%90%E5%88%B6%20%EF%BC%88%E8%B7%AF%E4%BA%BA%E6%B7%BB%E5%8A%A0%E7%89%88%EF%BC%89.user.js","uuid":"27f41bef-dc7f-4fa9-83be-12c32b7729e3","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDop6PlhrPnmb7luqbkupHlpKfmlofku7bkuIvovb3pmZDliLYg77yI6Lev5Lq65re75Yqg54mI77yJCi8vIEBuYW1lc3BhY2UgICAgdW5kZWZpbmVkCi8vIEB2ZXJzaW9uICAgICAgMC4wLjYrCi8vIEBkZXNjcmlwdGlvbiAg5LiA6KGM5Luj56CB77yM6Kej5Yaz55m+5bqm5LqR5aSn5paH5Lu25LiL6L296ZmQ5Yi2Ci8vIEBhdXRob3IgICAgICAg5Y6f5L2c6ICF77yaZnVuaWFud3V4aW4KLy8gQG1hdGNoICAgICAgICAqOi8vcGFuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3l1bi5iYWlkdS5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly9leXVuLmJhaWR1LmNvbS8qCi8vIEBtYXRjaCAgICAgICAgKjovL3dhbmdwYW4uYmFpZHUuY29tLyoKLy8gQHJ1bi1hdCAgICAgICBkb2N1bWVudC1zdGFydAovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09Ci8qIGpzaGludCAtVzA5NyAqLwondXNlIHN0cmljdCc7CgpPYmplY3QuZGVmaW5lUHJvcGVydHkoT2JqZWN0LmdldFByb3RvdHlwZU9mKG5hdmlnYXRvciksJ3BsYXRmb3JtJyx7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuICdzYl9iYWlkdSc7fX0pCgoKKGZ1bmN0aW9uKCl7CnZhciBocmVmPWxvY2F0aW9uLmhyZWY7Ci9odHRwOi8udGVzdChocmVmKT9sb2NhdGlvbi5ocmVmPSdodHRwcycraHJlZi5zbGljZSg0KTowOwp9KCkpOw=="},{"name":"百度网盘直接下载助手","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://pan.baidu.com/disk/home*","*://yun.baidu.com/disk/home*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/link*","*://yun.baidu.com/share/link*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856052},"enabled":false,"position":13,"file_url":"https://greasyfork.org/scripts/23635-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/code/%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E7%9B%B4%E6%8E%A5%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"00119d4c-eb80-437c-b169-cbdb119f6256","source":""},{"name":"城通网盘、皮皮盘、牛盘显示正确下载地址","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*ctfile.com*","*pipipan.com*","*6pan.cc/file-*html","*666pan.cc/file-*html","*777pan.cc/file-*html","*888pan.cc/file-*html"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856058},"enabled":true,"position":14,"file_url":"https://greasyfork.org/scripts/25270-%E5%9F%8E%E9%80%9A%E7%BD%91%E7%9B%98%E7%9A%AE%E7%9A%AE%E7%9B%98%E6%98%BE%E7%A4%BA%E6%AD%A3%E7%A1%AE%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80/code/%E5%9F%8E%E9%80%9A%E7%BD%91%E7%9B%98%E7%9A%AE%E7%9A%AE%E7%9B%98%E6%98%BE%E7%A4%BA%E6%AD%A3%E7%A1%AE%E4%B8%8B%E8%BD%BD%E5%9C%B0%E5%9D%80.user.js","uuid":"b7a8c66f-4ca3-42b3-b2b4-0b2343c8b177","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQGlkICAgICAgICAgICBjdGZpbGVANDA1NjQ3ODI1QHFxLmNvbQovLyBAbmFtZSAgICAgICAgIOWfjumAmue9keebmOOAgeearuearuebmOOAgeeJm+ebmOaYvuekuuato+ehruS4i+i9veWcsOWdgAovLyBAbmFtZXNwYWNlICAgIGh0dHA6Ly93ZWliby5jb20vcGVuZGF2ZQovLyBAdmVyc2lvbiAgICAgIDAuNgovLyBAZGVzY3JpcHRpb24gIOWfjumAmue9keebmOOAgeearuearuebmOOAgeeJm+ebmOaYvuekuuato+ehruS4i+i9veWcsOWdgCHljrvmjonpga7mjKHnmoRwb3BqdW1w6YCP5piO5bGC77yB6Ieq5Yqo6Lez5Yiw56ys5LqM6aG177yBCi8vIEBhdXRob3IgICAgICAgNDA1NjQ3ODI1QHFxLmNvbQovLyBAaW5jbHVkZSAgICAgICpjdGZpbGUuY29tKgovLyBAaW5jbHVkZSAgICAgICpwaXBpcGFuLmNvbSoKLy8gQGluY2x1ZGUgICAgICAqNnBhbi5jYy9maWxlLSpodG1sCi8vIEBpbmNsdWRlICAgICAgKjY2NnBhbi5jYy9maWxlLSpodG1sCi8vIEBpbmNsdWRlICAgICAgKjc3N3Bhbi5jYy9maWxlLSpodG1sCi8vIEBpbmNsdWRlICAgICAgKjg4OHBhbi5jYy9maWxlLSpodG1sCi8vIEByZXF1aXJlICBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvY2xpcGJvYXJkLmpzLzEuNS4xMy9jbGlwYm9hcmQubWluLmpzCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KLy/niZvnm5gKaWYobG9jYXRpb24uaHJlZi5tYXRjaCgvNjY2cGFuXC5jY3w2cGFuXC5jY3w3NzdwYW5cLmNjfDg4OHBhblwuY2MvZykgKXsKCXZhciBmaWxlQ29kZSA9IGxvY2F0aW9uLmhyZWYubWF0Y2goLyhcZCspXC4vZylbMF0ucmVwbGFjZSgnLicsJycpOwoJLy9kb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXYuZmlsZV9pdGVtJykuY2hpbGROb2Rlc1sxXS5pbm5lckhUTUwgKz0gJyZuYnNwOzxhIGlkPSJmcmVlX2Rvd25fbGluayIgY2xhc3M9ImNvbG9yX2J0biBidG5fZGVlcF9ibHVlIHR4dHdoaXRlIiBocmVmPSJodHRwOi8vd3d3Ljc3N3Bhbi5jYy9jZC5waHA/ZmlsZV9pZD0nICsgZmlsZUNvZGUgKyAnIiB0YXJnZXQ9Il9ibGFuayI+4oepIOebtOaOpeS4i+i9vTwvYT48c3Bhbj445YiG6ZKf5LiA5qyhPC9zcGFuPic7CgkvL2RvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNmcmVlX2Rvd25fbGluaycpLmNsaWNrKCk7Cglsb2NhdGlvbi5ocmVmID0gJ2h0dHA6Ly93d3cuNzc3cGFuLmNjL2Rvd24tJyArIGZpbGVDb2RlICsgJy5odG1sJzsKfQovL+WfjumAmue9keebmOOAgeearuearuebmAovL+esrOS4gOmhteiHquWKqOeCueWHu+aMiemSrgppZihsb2NhdGlvbi5ocmVmLm1hdGNoKC9jdGZpbGVcLmNvbXxwaXBpcGFuXC5jb20vZykgJiYgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZyZWVfZG93bl9saW5rJykpewoJZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZyZWVfZG93bl9saW5rJykuY2xpY2soKTsKfQovL+aciXBvcOW5v+WRiueahOenu+mZpAp2YXIgcG9wTm9kZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2FbaHJlZio9InBvcGp1bXAucGhwIl0nKTsKaWYocG9wTm9kZSAhPT0gbnVsbCl7Cglwb3BOb2RlLnJlbW92ZSgpOwp9Ci8v6I635Y+W56ys5LqM6aG16YeM55qE55yf5a6e5LiL6L295Zyw5Z2AIOW7uueri2NvcHnmjInpkq4KdmFyIGRvd24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZnJlZV9kb3duX2xpbmsnKS5vbmNsaWNrLnRvU3RyaW5nKCkubWF0Y2goLygoaHR0cHxmdHB8aHR0cHMpOlwvXC8pKChbYS16QS1aMC05XC5fLV0rXC5bYS16QS1aXXsyLDZ9KXwoWzAtOV17MSwzfVwuWzAtOV17MSwzfVwuWzAtOV17MSwzfVwuWzAtOV17MSwzfSkpKDpbMC05XXsxLDR9KSooXC9bYS16QS1aMC05XCYlX1wuXC8tfi1dKik/L2dpKVswXTsKc2V0VGltZW91dChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjZnJlZV9kb3duX2xpbmtbb25jbGlja149ImZyZWVfZG93bl9hY3Rpb24iXScpLm5leHRTaWJsaW5nLmlubmVySFRNTCA9ICc8YnV0dG9uIGNsYXNzPSJteWJ0biIgZGF0YS1jbGlwYm9hcmQtdGV4dD0iJysgZG93biArJyI+Q29weeecn+WunuS4i+i9veWcsOWdgDwvYnV0dG9uPicsMjAwKTsKdmFyIGNsaXBib2FyZCA9IG5ldyBDbGlwYm9hcmQoJy5teWJ0bicpOwoKY2xpcGJvYXJkLm9uKCdzdWNjZXNzJywgZnVuY3Rpb24oZSkgewoJY29uc29sZS5sb2coZSk7Cn0pOwoKY2xpcGJvYXJkLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGUpIHsKCWNvbnNvbGUubG9nKGUpOwp9KTsK"},{"name":"AdsBypasser","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://*","https://*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"version":"n3"},"ts":1507278856066},"enabled":true,"position":15,"file_url":"https://greasyfork.org/scripts/4881-adsbypasser/code/AdsBypasser.user.js","uuid":"dc722ee7-b054-4527-8f16-7f1d54375cd9","source":""},{"name":"魔趣直接下载跳过广告","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":["http://download.mokeedev.com/ad-dl.php","http://download.mokeedev.com/download.php","https://download.mokeedev.com/ad-dl.php","https://download.mokeedev.com/download.php"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856070},"enabled":true,"position":16,"file_url":"https://greasyfork.org/scripts/26673-mokee-download-ad-bypass/code/Mokee%20Download%20Ad%20Bypass.user.js","uuid":"d7ad32c3-4fd5-40ec-90bc-b7ba65677fdc","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDprZTotqPnm7TmjqXkuIvovb3ot7Pov4flub/lkYoKLy8gQG5hbWVzcGFjZSAgICBkb3dubG9hZC5tb2tlZWRldi5jb20KLy8gQHZlcnNpb24gICAgICAwLjIKLy8gQGRlc2NyaXB0aW9uICBza2lwIGFkcyBhbmQgYnlwYXNzIGFkcyBjaGVjayBmb3IgZG93bmxvYWQubW9rZWVkZXYuY29tCi8vIEBsaWNlbnNlICAgICAgTUlUCi8vIEBpbmNsdWRlICAgICAgaHR0cDovL2Rvd25sb2FkLm1va2VlZGV2LmNvbS9hZC1kbC5waHAKLy8gQGluY2x1ZGUgICAgICBodHRwOi8vZG93bmxvYWQubW9rZWVkZXYuY29tL2Rvd25sb2FkLnBocAovLyBAaW5jbHVkZSAgICAgIGh0dHBzOi8vZG93bmxvYWQubW9rZWVkZXYuY29tL2FkLWRsLnBocAovLyBAaW5jbHVkZSAgICAgIGh0dHBzOi8vZG93bmxvYWQubW9rZWVkZXYuY29tL2Rvd25sb2FkLnBocAovLyBAZ3JhbnQgICAgICAgIG5vbmUKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24gKCkgewogICd1c2XCoHN0cmljdCc7CiAgdmFyIGtleSA9IGRvY3VtZW50LmJvZHkuaW5uZXJIVE1MLm1hdGNoKC9bMC05YS1mQS1GXXszMiwzMn0vKS50b1N0cmluZygpOwogIGlmIChrZXkpICQucG9zdCgibGluay5waHAiLCB7CiAgICBrZXk6IGtleQogIH0sIGZ1bmN0aW9uIChkYXRhLCBzdGF0dXMpIHsKICAgIGxvY2F0aW9uLmhyZWYgPSBkYXRhOwogICAgZG9jdW1lbnQuYm9keS5pbm5lckhUTUwgPSBkYXRhOwogIH0pOwp9KSgpOw=="},{"name":"download.mokeedev.com","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://download.mokeedev.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856073},"enabled":false,"position":17,"file_url":"https://greasyfork.org/scripts/28480-download-mokeedev-com/code/downloadmokeedevcom.user.js","uuid":"7fc12bb4-790d-4bb3-8314-c7af1df94ce7","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICBkb3dubG9hZC5tb2tlZWRldi5jb20KLy8gQG5hbWU6cnUgICAgICAgICBkb3dubG9hZC5tb2tlZWRldi5jb20KLy8gQG5hbWVzcGFjZSAgICAgICBGSVgKLy8gQHZlcnNpb24gICAgICAgICAwLjIKLy8gQGRlc2NyaXB0aW9uICAgICBkb3dubG9hZC5tb2tlZWRldi5jb20gd2l0aG91dCB3YWl0aW5nCi8vIEBkZXNjcmlwdGlvbjpydSAgZG93bmxvYWQubW9rZWVkZXYuY29tINCx0LXQtyDQvtC20LjQtNCw0L3QuNGPCi8vIEBhdXRob3IgICAgICAgICAgcmFsZXRhZwovLyBAbWF0Y2ggICAgICAgICAgICo6Ly9kb3dubG9hZC5tb2tlZWRldi5jb20vKgovLyBAZ3JhbnQgICAgICAgICAgIG5vbmUKLy8gQHJ1bi1hdCAgICAgICAgICBkb2N1bWVudC1lbmQKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICBjb25zb2xlLmxvZygnZG93bmxvYWQubW9rZWVkZXYuY29tIHdpdGhvdXQgd2FpdGluZycpOwogICAgaWYgKGxvY2F0aW9uLnBhdGhuYW1lID09ICcvbGluay5waHAnICYmIGRvY3VtZW50LmJvZHkuaW5uZXJUZXh0ICYmIGRvY3VtZW50LmJvZHkuaW5uZXJUZXh0Lm1hdGNoKC9eaHR0cCh8cyk6XC9cLy9pKSkgbG9jYXRpb24uaHJlZiA9IGRvY3VtZW50LmJvZHkuaW5uZXJUZXh0OwogICAgZWxzZSBmb3IgKHZhciBsaW5rcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ2FbaHJlZio9ImRvd25sb2FkUG9zdCJdJyksIGkgPSBsaW5rcy5sZW5ndGggLSAxOyBpID49IDA7IC0taSkgewogICAgICAgICAgICBsaW5rc1tpXS5ocmVmID0gbGlua3NbaV0uaHJlZi5yZXBsYWNlKCdkb3dubG9hZC5waHAnLCAnbGluay5waHAnKS5yZXBsYWNlKCdnZXQnLCdrZXknKTsKICAgIH0KfSkoKTs="},{"name":"解除B站区域限制","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*://www.bilibili.com/video/av*","*://bangumi.bilibili.com/anime/*","*://bangumi.bilibili.com/movie/*","*://www.bilibili.com/blackboard/html5player.html*","*://www.bilibili.com/blackboard/html5playerbeta.html*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856078},"enabled":true,"position":18,"file_url":"https://greasyfork.org/scripts/25718-%E8%A7%A3%E9%99%A4b%E7%AB%99%E5%8C%BA%E5%9F%9F%E9%99%90%E5%88%B6/code/%E8%A7%A3%E9%99%A4B%E7%AB%99%E5%8C%BA%E5%9F%9F%E9%99%90%E5%88%B6.user.js","uuid":"d0888079-7ecc-43a3-8ff1-e03af6b04e4d","source":""},{"name":"Bypass Wait, Code & Login on Websites","options":{"awareOfChrome":true,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_prototypes":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":["down.lepan.cc","music.baidu.com","yinyueyun.baidu.com","media.store.kugou.com","trackercdn.kugou.com","yinyuetai.com","itwusun.com","self"],"orig_excludes":[],"orig_includes":["http://localhost.cuwcl4c/*","http://jixunmoe.github.io/*","http://123564.com/*","http://m.123564.com/*","http://5xfile.com/*","http://www.5xfile.com/*","http://yun.baidu.com/*","http://pan.baidu.com/*","http://howfile.com/*","http://*.howfile.com/*","http://jkpan.cc/*","http://*.jkpan.cc/*","http://namipan.cc/*","http://*.namipan.cc/*","http://10pan.cc/*","http://*.10pan.cc/*","http://66yp.cc/*","http://*.66yp.cc/*","http://123wzwp.com/*","http://*.123wzwp.com/*","http://hiyp.cc/*","http://*.hiyp.cc/*","http://jkpan.cc/*","http://*.jkpan.cc/*","http://webhd.xuite.net/*","http://sync.hamicloud.net/*","http://www.yimuhe.com/*","http://douban.fm/*","https://douban.fm/*","http://moe.fm/*","http://music.163.com/*","https://music.163.com/*","http://www.1ting.com/*","http://www.23356.com/*","http://www.app-echo.com/*","http://web.kugou.com/*","https://jixunmoe.github.io/cuwcl4c/config/"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"CUWCL4C":"s{\"version\":1,\"bDiaplayLog\":true,\"bUseCustomRules\":false,\"dAria_auth\":0,\"dAria_port\":6800,\"dUriType\":0,\"sAria_dir\":\"D:\\\\Download\\\\\",\"sAria_host\":\"127.0.0.1\",\"sAria_pass\":\"\",\"sAria_user\":\"\",\"sCustomRule\":\"\"}"},"ts":1507278856085},"enabled":true,"position":19,"file_url":"https://greasyfork.org/scripts/2600-%E8%B7%B3%E8%BF%87%E7%BD%91%E7%AB%99%E7%AD%89%E5%BE%85-%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8F%8A%E7%99%BB%E5%BD%95/code/%E8%B7%B3%E8%BF%87%E7%BD%91%E7%AB%99%E7%AD%89%E5%BE%85%E3%80%81%E9%AA%8C%E8%AF%81%E7%A0%81%E5%8F%8A%E7%99%BB%E5%BD%95.user.js","uuid":"81ad6b0d-215a-42bb-8f1f-a74eb03d0780","source":""},{"name":"Resize Image On \"Open image in new tab\"","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["http://*.googleusercontent.com/*","https://*.googleusercontent.com/*","http://*.media.tumblr.com/*","https://*.media.tumblr.com/*","http://secure.static.tumblr.com/*","https://secure.static.tumblr.com/*","http://*.bp.blogspot.com/*","https://*.bp.blogspot.com/*","http://*.sinaimg.cn/*","https://*.sinaimg.cn/*","http://*.sinaimg.com/*","https://*.sinaimg.com/*","http://*.twimg.com/*","https://*.twimg.com/*","http://*.zhimg.com/*","https://*.zhimg.com/*","http://*.douban.com/view/*","https://*.douban.com/view/*","http://*.doubanio.com/view/*","https://*.doubanio.com/view/*","http://imgsrc.baidu.com/*","https://imgsrc.baidu.com/*","http://imgsrc.bdimg.com/*","https://imgsrc.bdimg.com/*","http://*.hiphotos.baidu.com/*","https://*.hiphotos.baidu.com/*","http://*.hiphotos.bdimg.com/*","https://*.hiphotos.bdimg.com/*","http://imgsa.baidu.com/*","https://imgsa.baidu.com/*","http://imgsa.bdimg.com/*","https://imgsa.bdimg.com/*","http://images.akamai.steamusercontent.com/*","https://images.akamai.steamusercontent.com/*","http://steamuserimages-a.akamaihd.net/*","https://steamuserimages-a.akamaihd.net/*","http://*.artstation.com/*","https://*.artstation.com/*","http://i.ytimg.com/*","https://i.ytimg.com/*","http://*.ggpht.com/*","https://*.ggpht.com/*","http://*.pinimg.com/*","https://*.pinimg.com/*","http://*.hdslb.com/*","https://*.hdslb.com/*"],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856088},"enabled":true,"position":20,"file_url":"https://greasyfork.org/scripts/2312-resize-image-on-open-image-in-new-tab/code/Resize%20Image%20On%20%22Open%20image%20in%20new%20tab%22.user.js","uuid":"ff696ed5-9678-48cb-8c10-cbc4f894fac1","source":""},{"name":"VIP视频在线解析","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":[],"orig_matches":["*://v.youku.com/v_show/*","*://*.iqiyi.com/v_*","*://*.iqiyi.com/dianying/*","*://*.le.com/ptv/vplay/*","*://v.qq.com/x/cover/*","*://v.qq.com/x/page/*","*://*.tudou.com/listplay/*","*://*.tudou.com/albumplay/*","*://*.tudou.com/programs/view/*","*://*.mgtv.com/b/*","*://film.sohu.com/album/*","*://*.acfun.cn/v/*","*://*.bilibili.com/video/*","*://*.bilibili.com/anime/*","*://vip.pptv.com/show/*","*://v.yinyuetai.com/video/*","*://v.yinyuetai.com/playlist/*","*://*.wasu.cn/Play/show/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856092},"enabled":true,"position":21,"file_url":"https://greasyfork.org/scripts/27349-vip%E8%A7%86%E9%A2%91%E5%9C%A8%E7%BA%BF%E8%A7%A3%E6%9E%90/code/VIP%E8%A7%86%E9%A2%91%E5%9C%A8%E7%BA%BF%E8%A7%A3%E6%9E%90.user.js","uuid":"7dc84377-cb97-464e-8404-34dc1e1e5be6","source":""},{"name":"度盘给我播！","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["http*://pan.baidu.com/disk/home*search*"],"orig_includes":[],"orig_matches":["http*://pan.baidu.com/disk/home*"],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856097},"enabled":true,"position":22,"file_url":"https://greasyfork.org/scripts/33039-%E5%BA%A6%E7%9B%98%E7%BB%99%E6%88%91%E6%92%AD/code/%E5%BA%A6%E7%9B%98%E7%BB%99%E6%88%91%E6%92%AD%EF%BC%81.user.js","uuid":"c3909534-11a2-450f-8049-77e66a7a4833","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDluqbnm5jnu5nmiJHmkq3vvIEKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vdGFtcGVybW9ua2V5Lm5ldC8KLy8gQHZlcnNpb24gICAgICAwLjEuMgovLyBAZGVzY3JpcHRpb24gIOW8uui/q+W6puebmOaJk+W8gCB0cyBtdHMgZjR2IG0ydHPnrYnop4bpopHmlofku7bnmoTmkq3mlL7pobXpnaLjgIIKLy8gQGF1dGhvciAgICAgICBjb29sd2luZDIwMTIKLy8gQG1hdGNoICAgICAgICBodHRwKjovL3Bhbi5iYWlkdS5jb20vZGlzay9ob21lKgovLyBAZXhjbHVkZSAgICAgIGh0dHAqOi8vcGFuLmJhaWR1LmNvbS9kaXNrL2hvbWUqc2VhcmNoKgovLyBAaWNvbiAgICAgICAgIGh0dHBzOi8vcGFuLmJhaWR1LmNvbS9ib3gtc3RhdGljL2Rpc2stc3lzdGVtL2ltYWdlcy9mYXZpY29uLmljbwovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuLmJvb3Rjc3MuY29tL2pxdWVyeS8zLjIuMS9qcXVlcnkubWluLmpzCi8vIEBncmFudCAgICAgICAgbm9uZQovLyA9PS9Vc2VyU2NyaXB0PT0KdmFyIGNvdW50ID0gMDsKY2hhbmdlID0gZnVuY3Rpb24oKXsKICAgICd1c2Ugc3RyaWN0JzsKICAgIHZhciBtZWRpYVR5cGUgPSBuZXcgQXJyYXkoJ3RzJywnM2dwMicsJzNnMicsJzNncHAnLCdhbXYnLCdkaXZ4JywnZHBnJywnZjR2JywnbTJ0JywnbTJ0cycsJ20ydicsJ21wZScsJ21wZWcnLCdtdHMnLCd2b2InLCd3ZWJtJywnd3hwJywnd3h2Jyk7CiAgICAvL3ZhciBjb21wcmVzc1R5cGU9IG5ldyBBcnJheSgnemlwJywnN3ppcCcsJ3JhcicsJ2d6JywnZ3ppcCcpOwogICAgdmFyIG15TW9kZSAgICA9ICgkKCcuekpNdEFFYicpLmF0dHIoJ3N0eWxlJykhPT0iZGlzcGxheTogbm9uZTsiKT8wOjE7CiAgICBpZigkKCcuekpNdEFFYicpLmF0dHIoJ3N0eWxlJyk9PT0iZGlzcGxheTogbm9uZTsiKQogICAgey8v5aSn5Zu+5qCHCiAgICAgICAgdmFyIGZhdGhlclN0ciA9ICcuSkt2SEpNYiBkZCcsCiAgICAgICAgICAgIGNoaWxkU3RyICA9ICcuY0VlZnl6Om5vdCgub3Blbi1lbmFibGUpJywKICAgICAgICAgICAgdGFyZ2V0U3RyID0gJy5maWxlLW5hbWUgYSc7CiAgICB9ZWxzZXsvL+Wwj+WbvuaghwogICAgICAgIHZhciBmYXRoZXJTdHIgPSAiLnZkQWZLTWIiLAogICAgICAgICAgICBjaGlsZFN0ciAgPSAiZGQ6bm90KC5vcGVuLWVuYWJsZSkiLAogICAgICAgICAgICB0YXJnZXRTdHIgPSAnLnRleHQgYSc7CiAgICB9CiAgICB2YXIgbXlQYXRoID0gJyc7CiAgICAvL2FsZXJ0KG15TW9kZSk7CiAgICAvLyBAbWF0Y2ggICAgICAgIGh0dHAqOi8vcGFuLmJhaWR1LmNvbS9zLyovcGF0aD0qCiAgICBpZihsb2NhdGlvbi5ocmVmLmluZGV4T2YoJy5jb21cL3NcLzEnKT4xKQogICAgewogICAgICAgIC8vIOmcgOimgXNoYXJlaWQKICAgICAgICB2YXIgdWsgICAgICA9IHl1bkRhdGEuU0hBUkVfOwogICAgICAgIHZhciBzaGFyZUlkID0geXVuRGF0YS5TSEFSRV9JRDsKICAgICAgICAvLyAgdCA9IGIuZ2V0RWxlbWVudERhdGFCeVBvc2l0aW9uKGUpOyAvL2U9X3Bvc2l0aW9uCiAgICAgICAgLy8gIHZhciBmaWQgPSB0LmZzX2lkOwogICAgICAgIC8vbXlQYXRoID0gCiAgICB9CiAgICAvLyBodHRwczovL3Bhbi5iYWlkdS5jb20vZGlzay9ob21lI2xpc3QvcGF0aD0lMkYmdm1vZGU9bGlzdAogICAgaWYobG9jYXRpb24uaHJlZi5pbmRleE9mKCcvZGlzay9ob21lJykhPT0tMSkKICAgIHsKICAgICAgICBteVBhdGggPSBsb2NhdGlvbi5ocmVmLnNwbGl0KCdwYXRoPScpWzFdLnNwbGl0KCcmJylbMF07CiAgICB9CiAgICBteVBhdGggKz0gKGRlY29kZVVSSUNvbXBvbmVudChteVBhdGgpLnNsaWNlKC0xKT09PScvJyk/ICcnOiclMkYnOwogICAgLy92YXIgbXlQYXRoID0gbG9jYXRpb24uaHJlZi5zcGxpdCgncGF0aD0nKVsxXTsKICAgIC8vIOS7juaQnOe0oumhtemdouW+l+WIsOeahAogICAgLy8gaHR0cHM6Ly9wYW4uYmFpZHUuY29tL2Rpc2svaG9tZSNzZWFyY2gva2V5PS50cyZ2bW9kZT1saXN0CiAgICAvLyDmmoLml7bov5jmmK/ml6Dog73kuLrlipvllYogVF9UCiAgICAvLyAkKCcuSkt2SEpNYiBkZCAuY0VlZnl6JykKICAgICQoZmF0aGVyU3RyKS5jaGlsZHJlbihjaGlsZFN0cikuZWFjaChmdW5jdGlvbigpewogICAgICAgIHZhciBob3V6aHVpID0gJCh0aGlzKS5maW5kKHRhcmdldFN0cikuYXR0cigndGl0bGUnKS5zcGxpdCgnLicpLnBvcCgpOwogICAgICAgIGlmKGlzTWVkaWEoaG91emh1aSkpCiAgICAgICAgewogICAgICAgICAgICB2YXIgdG1wID0gJCh0aGlzKS5maW5kKHRhcmdldFN0cikuYXR0cignaHJlZicpOwogICAgICAgICAgICBpZih0bXAgPT09ICdqYXZhc2NyaXB0OnZvaWQoMCk7Jyl7CiAgICAgICAgICAgICAgICB2YXIgdG1wVGl0bGUgPSAkKHRoaXMpLmZpbmQodGFyZ2V0U3RyKS5hdHRyKCd0aXRsZScpOwogICAgICAgICAgICAgICAgJCh0aGlzKS5maW5kKHRhcmdldFN0cikuYXR0cignaHJlZicgICwgICdodHRwczovL3Bhbi5iYWlkdS5jb20vcGxheS92aWRlbyN2aWRlby9wYXRoPScgKyAgbXlQYXRoICArIGVuY29kZVVSSUNvbXBvbmVudCh0bXBUaXRsZSkgKyAgJ1wmdD0tMScpLmF0dHIoJ3RhcmdldCcsJ19ibGFua18nKTsKICAgICAgICAgICAgICAgIGlmKCFteU1vZGUpIHskKHRoaXMpLmZpbmQoJy5hdmpaMmdBJykucmVtb3ZlQ2xhc3MoJ2RlZmF1bHQtc21hbGwnKTskKHRoaXMpLmZpbmQoJy5hdmpaMmdBJykuYWRkQ2xhc3MoJ2ZpbGVpY29uLXNtYWxsLXZpZGVvJyk7CiQodGhpcykuZmluZCgnLnpqdW1BNEJ5JykucmVtb3ZlQ2xhc3MoJ2RlZmF1bHQtc21hbGwnKTskKHRoaXMpLmZpbmQoJy56anVtQTRCeScpLmFkZENsYXNzKCdmaWxlaWNvbi1zbWFsbC12aWRlbycpO30KICAgICAgICAgICAgICAgIGVsc2UgJCh0aGlzKS5maW5kKHRhcmdldFN0cikuYXR0cignc3R5bGUnLCdjdXJzb3I6cG9pbnRlcjsnKTsKICAgICAgICAgICAgICAgIC8vICBub2RlLXR5cGU9ImluYmVBVm5RIiBjbGFzcz0icXduQW9SRSIKICAgICAgICAgICAgICAgIC8vIG5vZGUtdHlwZT0iaW5iZUFWblEiIGNsYXNzPSJxd25Bb1JFIgogICAgICAgICAgICB9Ly8gZy1jbGVhcmZpeCBBdVBLeXogb3Blbi1lbmFibGUKICAgICAgICAgICAgJCh0aGlzKS5hZGRDbGFzcygib3Blbi1lbmFibGUiKTsKICAgICAgICB9CiAgICB9KTsKLyogICAgJCgiLnZkQWZLTWIgLm9wZW4tZW5hYmxlIikuZWFjaChmdW5jdGlvbigpewogICAgICAgIHZhciBob3V6aHVpID0gJCh0aGlzKS5maW5kKCcudGV4dCBhJykuYXR0cigndGl0bGUnKS5zcGxpdCgnLicpLnBvcCgpOwogICAgICAgIGNvbnNvbGUubG9nKGhvdXpodWkpOwogICAgICAgIC8vYWxlcnQoaG91emh1aSk7CiAgICAgICAgaWYoaXNDb21wcmVzcyhob3V6aHVpKSkKICAgICAgICB7CiAgICAgICAgICAgICQodGhpcykucmVtb3ZlQ2xhc3MoIm9wZW4tZW5hYmxlIik7CiAgICAgICAgfQogICAgfSk7CiAgICAqLwogICAgZnVuY3Rpb24gaXNNZWRpYShzdHIpewogICAgICAgIHZhciB0bXAgPSBzdHIudG9Mb3dlckNhc2UoKTsKICAgICAgICBmb3IodmFyIGk9MDtpPG1lZGlhVHlwZS5sZW5ndGg7aSsrKQogICAgICAgIHsKICAgICAgICAgICAgaWYodG1wPT09bWVkaWFUeXBlW2ldKQogICAgICAgICAgICAgICAgcmV0dXJuIDE7CiAgICAgICAgfQogICAgICAgIHJldHVybiAwOwogICAgfQogLyogICBmdW5jdGlvbiBpc0NvbXByZXNzKHN0cil7CiAgICAgICAgdmFyIHRtcCA9IHN0ci50b0xvd2VyQ2FzZSgpOwogICAgICAgIGZvcih2YXIgaT0wO2k8Y29tcHJlc3NUeXBlLmxlbmd0aDtpKyspCiAgICAgICAgewogICAgICAgICAgICBpZih0bXA9PT1tZWRpYVR5cGVbaV0pCiAgICAgICAgICAgICAgICByZXR1cm4gMTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIDA7CiAgICB9Ki8KICAgIGlmKCsrY291bnQ+NTApCiAgICB7CiAgICAgICAgdGltZWlkID0gd2luZG93LmNsZWFySW50ZXJ2YWwodGltZWlkKTsKICAgICAgICBjb3VudD0wOwogICAgfQp9OwoKJCgnLnZkQWZLTWInKS5yZWFkeSggICAgZnVuY3Rpb24oKSB7CiAgICBjaGFuZ2UoKTsKfSk7CiQoJ2RvY3VtZW50JykucmVhZHkoICAgIGZ1bmN0aW9uKCkgewogICAgY2hhbmdlKCk7Cn0pOwp2YXIgbXloYXNoID0gbG9jYXRpb24uaHJlZjsKdmFyIHRpbWVpZCA9IG51bGw7CndpbmRvdy5zZXRJbnRlcnZhbCggIGZ1bmN0aW9uKCl7IGlmKGxvY2F0aW9uLmhyZWYhPT1teWhhc2gpe2NvdW50PTA7bXloYXNoPWxvY2F0aW9uLmhyZWY7dGltZWlkID0gd2luZG93LnNldEludGVydmFsKGNoYW5nZSw2MCk7fSAgfSAgICwxMjAgICk7Cgo="},{"name":"疯狂影视搜索","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":[],"orig_includes":[],"orig_matches":["*://movie.douban.com/subject/*","*://www.yugaopian.cn/movie/*","*://movie.mtime.com/*"],"orig_noframes":null,"orig_run_at":"document-end","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{},"ts":1507278856100},"enabled":true,"position":23,"file_url":"https://greasyfork.org/scripts/30363-%E7%96%AF%E7%8B%82%E5%BD%B1%E8%A7%86%E6%90%9C%E7%B4%A2/code/%E7%96%AF%E7%8B%82%E5%BD%B1%E8%A7%86%E6%90%9C%E7%B4%A2.user.js","uuid":"2d3ae4cb-653b-45d8-b24b-0ef002ad54f0","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICDnlq/ni4LlvbHop4bmkJzntKIKLy8gQG5hbWVzcGFjZSAgICBodHRwOi8vaWZrZHkuY29tLwovLyBAdmVyc2lvbiAgICAgIDAuMgovLyBAZGVzY3JpcHRpb24gIOWcqOixhueTo+eUteW9se+8jOmihOWRiueJh+S4lueVjO+8jOaXtuWFieeUteW9seeahOe9kemhtemHjO+8jOa3u+WKoOeUteW9seaQnOe0ouaMiemSru+8gQovLyBAYXV0aG9yICAgICAgIGlma2R5Ci8vIEBncmFudCAgICAgICAgR01fYWRkU3R5bGUKLy8gQG1hdGNoICAgICAgICAqOi8vbW92aWUuZG91YmFuLmNvbS9zdWJqZWN0LyoKLy8gQG1hdGNoICAgICAgICAqOi8vd3d3Lnl1Z2FvcGlhbi5jbi9tb3ZpZS8qCi8vIEBtYXRjaCAgICAgICAgKjovL21vdmllLm10aW1lLmNvbS8qCi8vIEByZXF1aXJlICAgICAgaHR0cDovL2Nkbi5ib290Y3NzLmNvbS9qcXVlcnkvMS44LjMvanF1ZXJ5Lm1pbi5qcwovLyBAcnVuLWF0ICAgICAgIGRvY3VtZW50LWVuZAovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKICAgICd1c2Ugc3RyaWN0JzsKICAgIEdNX2FkZFN0eWxlKCJAY2hhcnNldCB1dGYtODsjbXRpbWVTZWFyY2hCdG57bWFyZ2luLWxlZnQ6IDVweDtwYWRkaW5nOjVweCAxMHB4O2ZvbnQtc2l6ZToyNXB4O2NvbG9yOiNmZmY7YmFja2dyb3VuZDogIzEyN2JhYjt9I210aW1lU2VhcmNoQnRuOmhvdmVye3RleHQtZGVjb3JhdGlvbjogbm9uZTt9I3l1Z2FvcGlhblNlYXJjaEJ0bnttYXJnaW4tbGVmdDo1cHg7bGV0dGVyLXNwYWNpbmc6MXB4O3BhZGRpbmc6NXB4IDEwcHg7bGluZS1oZWlnaHQ6MjdweDtmb250LWZhbWlseTogJ+W+rui9r+mbhem7kScsJ+m7keS9kyc7YmFja2dyb3VuZDogIzdjZDM3Yztjb2xvcjojZmZmO2ZvbnQtc2l6ZToxNHB4O30jeXVnYW9waWFuU2VhcmNoQnRuOmhvdmVye2JhY2tncm91bmQ6ICM1N2M4NTc7fSNkb3ViYW5TZWFyY2hCdG57Ym9yZGVyLXJhZGl1czoycHg7bGV0dGVyLXNwYWNpbmc6MXB4O2NvbG9yOiNjYTY0NDU7Zm9udC13ZWlnaHQ6bm9ybWFsO2JhY2tncm91bmQ6ICNmYWU5ZGE7Zm9udC1zaXplOjE2cHg7cGFkZGluZzo1cHggMTBweDtsaW5lLWhlaWdodDoyOHB4O30jZG91YmFuU2VhcmNoQnRuOmhvdmVye2NvbG9yOiAjZDk4OTZhO2JhY2tncm91bmQ6ICNmY2VmZTM7fSIpOwogICAgdmFyIHJlRG91YmFuID0gL2RvdWJhbi9pOwogICAgdmFyIHJlWXVnYW9waWFuID0gL3l1Z2FvcGlhbi9pOwogICAgdmFyIHJlTXRpbWUgPSAvbXRpbWUvaTsKICAgIHZhciBjdXJVcmwgPSB3aW5kb3cubG9jYXRpb24uaHJlZjsKICAgIHZhciBjdXJXb3JkcyA9ICcnOwogICAgZnVuY3Rpb24gdHJpbShzdHIpewoJICAgIHJldHVybiBzdHIucmVwbGFjZSgvKF5ccyopfChccyokKS9nLCAiIik7Cgl9Cgl2YXIgZmtkeVVybCA9ICdodHRwOi8vaWZrZHkuY29tLz9xPSc7CiAgICB2YXIgZGJTZWFyY2hCdG4gPSAnPGEgaWQ9ImRvdWJhblNlYXJjaEJ0biIgdGFyZ2V0PSJfYmxhbmsiPuaQnOe0ouacrOeJhzwvYT4nOwogICAgdmFyIHlncFNlYXJjaEJ0biA9ICc8YSBpZD0ieXVnYW9waWFuU2VhcmNoQnRuIiB0YXJnZXQ9Il9ibGFuayI+5pCc57Si5pys54mHPC9hPic7CiAgICB2YXIgbXRTZWFyY2hCdG4gPSAnPGEgaWQ9Im10aW1lU2VhcmNoQnRuIiB0YXJnZXQ9Il9ibGFuayI+5pCc57Si5pys54mHPC9hPic7CiAgICBpZihyZURvdWJhbi50ZXN0KGN1clVybCkpewogICAgICAgIHZhciBkb3ViYW5UaXRsZSA9ICQoJyNjb250ZW50JykuZmluZCgnaDEnKTsKICAgICAgICBkb3ViYW5UaXRsZS5hcHBlbmQoZGJTZWFyY2hCdG4pOwogICAgICAgCWN1cldvcmRzID0gdHJpbSgkKCd0aXRsZScpLnRleHQoKS5zcGxpdCgnKCcpWzBdKTsKICAgICAgICAkKCcjZG91YmFuU2VhcmNoQnRuJykuYXR0cignaHJlZicsJ2h0dHA6Ly9pZmtkeS5jb20vP3E9JyArIGN1cldvcmRzICsgJyZwPTEnKTsKICAgIH0KICAgIGlmKHJlWXVnYW9waWFuLnRlc3QoY3VyVXJsKSl7CiAgICAgICAgJCgnLm1vdmllLW5hbWUnKS5jc3MoJ2Zsb2F0JywnbGVmdCcpLmFmdGVyKHlncFNlYXJjaEJ0bik7CiAgICAgICAJY3VyV29yZHMgPSB0cmltKCQoJy5tb3ZpZS1uYW1lJykuYXR0cigndGl0bGUnKSk7CiAgICAgICAgJCgnI3l1Z2FvcGlhblNlYXJjaEJ0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vaWZrZHkuY29tLz9xPScgKyBjdXJXb3JkcyArICcmcD0xJyk7CiAgICB9CiAgICBpZihyZU10aW1lLnRlc3QoY3VyVXJsKSl7CiAgICAJaWYoJCgnLmRiX2hlYWQnKS5sZW5ndGg+MCl7CiAgICAJCXZhciBjdXJNdGl0bGUgPSAkKCcuZGJfaGVhZCcpLmZpbmQoJ2gxJyk7CiAgICAJCWN1ck10aXRsZS5uZXh0KCdwJykuYWZ0ZXIobXRTZWFyY2hCdG4pOwoJICAgICAgIAljdXJXb3JkcyA9IHRyaW0oY3VyTXRpdGxlLnRleHQoKSk7CgkgICAgICAgICQoJyNtdGltZVNlYXJjaEJ0bicpLmF0dHIoJ2hyZWYnLCdodHRwOi8vaWZrZHkuY29tLz9xPScgKyBjdXJXb3JkcyArICcmcD0xJyk7CiAgICAJfQogICAgfQp9KSgpOw=="},{"name":"Kill Baidu AD","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http*://www.baidu.com/*","http*://m.baidu.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1508686265006,"data":{}},"enabled":true,"position":24,"file_url":"https://greasyfork.org/scripts/24192-kill-baidu-ad/code/Kill%20Baidu%20AD.user.js","uuid":"eb27f23e-602f-4a76-a5e4-cafc7b6f6e1b","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgICBLaWxsIEJhaWR1IEFECi8vIEBuYW1lOnpoLUNOICAgICAgICAg55m+5bqm5bm/5ZGKKOmmluWwvuaOqOW5v+WPiuWPs+S+p+W5v+WRiinmuIXnkIYKLy8gQG5hbWVzcGFjZSAgICAgICAgICBob290aGluCi8vIEB2ZXJzaW9uICAgICAgICAgICAgMC44NgovLyBAZGVzY3JpcHRpb24gICAgICAgIEp1c3QgS2lsbCBCYWlkdSBBRAovLyBAZGVzY3JpcHRpb246emgtQ04gIOW9u+W6lea4heeQhueZvuW6puaQnOe0oih3d3cuYmFpZHUuY29tKee7k+aenOmmluWwvueahOaOqOW5v+W5v+WRiuOAgeS6jOasoemhveWbuuW5v+WRiuS4juWPs+S+p+W5v+WRiu+8jOW5tumYsuatouWPjeWkjQovLyBAYXV0aG9yICAgICAgICAgICAgIGhvb3RoaW4KLy8gQGluY2x1ZGUgICAgICAgICAgICBodHRwKjovL3d3dy5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICAgICAgICAgIGh0dHAqOi8vbS5iYWlkdS5jb20vKgovLyBAZ3JhbnQgICAgICAgICAgICAgIG5vbmUKLy8gQHJ1bi1hdCAgICAgICAgICAgICBkb2N1bWVudC1zdGFydAovLyBAbGljZW5zZSAgICAgICAgICAgIE1JVCBMaWNlbnNlCi8vIEBjb21wYXRpYmxlICAgICAgICAgY2hyb21lIOa1i+ivlemAmui/hwovLyBAY29tcGF0aWJsZSAgICAgICAgIGZpcmVmb3gg5rWL6K+V6YCa6L+HCi8vIEBjb21wYXRpYmxlICAgICAgICAgb3BlcmEg5pyq5rWL6K+VCi8vIEBjb21wYXRpYmxlICAgICAgICAgc2FmYXJpIOacqua1i+ivlQovLyBAY29udHJpYnV0aW9uVVJMICAgIGh0dHBzOi8vd3d3LnBheXBhbC5jb20vY2dpLWJpbi93ZWJzY3I/Y21kPV9kb25hdGlvbnMmYnVzaW5lc3M9cml4aXhpQHNpbmEuY29tJml0ZW1fbmFtZT1HcmVhc3krRm9yaytkb25hdGlvbgovLyBAY29udHJpYnV0aW9uQW1vdW50IDEKLy8gPT0vVXNlclNjcmlwdD09CgooZnVuY3Rpb24oKSB7CiAgICAndXNlIHN0cmljdCc7CiAgICB2YXIgTXV0YXRpb25PYnNlcnZlciA9IHdpbmRvdy5NdXRhdGlvbk9ic2VydmVyIHx8IHdpbmRvdy5XZWJLaXRNdXRhdGlvbk9ic2VydmVyIHx8IHdpbmRvdy5Nb3pNdXRhdGlvbk9ic2VydmVyOwogICAgdmFyIG9ic2VydmVyID0gbmV3IE11dGF0aW9uT2JzZXJ2ZXIoZnVuY3Rpb24ocmVjb3Jkcyl7CiAgICAgICAgY2xlYXJBRCgpOwogICAgfSk7CiAgICB2YXIgb3B0aW9uID0gewogICAgICAgICdjaGlsZExpc3QnOiB0cnVlLAogICAgICAgICdzdWJ0cmVlJzogdHJ1ZQogICAgfTsKICAgIGRvY3VtZW50Lm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCl7CiAgICAgICAgaWYoZG9jdW1lbnQucmVhZHlTdGF0ZSA9PSAiaW50ZXJhY3RpdmUiKXsKICAgICAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShkb2N1bWVudC5ib2R5LCBvcHRpb24pOwogICAgICAgIH0KICAgIH07CgogICAgZnVuY3Rpb24gY2xlYXJBRCgpewogICAgICAgIHZhciBtQWRzPWRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5lY193aXNlX2FkLC5lY195b3V4dWFuX2NhcmQiKSxpOwogICAgICAgIGZvcihpPTA7aTxtQWRzLmxlbmd0aDtpKyspewogICAgICAgICAgICB2YXIgbUFkPW1BZHNbaV07CiAgICAgICAgICAgIG1BZC5yZW1vdmUoKTsKICAgICAgICB9CiAgICAgICAgdmFyIGxpc3Q9ZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yQWxsKCIjY29udGVudF9sZWZ0PmRpdiwjY29udGVudF9sZWZ0PnRhYmxlIik7CiAgICAgICAgZm9yKGk9MDtpPGxpc3QubGVuZ3RoO2krKyl7CiAgICAgICAgICAgIGxldCBpdGVtID0gbGlzdFtpXTsKICAgICAgICAgICAgbGV0IHMgPSBpdGVtLmdldEF0dHJpYnV0ZSgic3R5bGUiKTsKICAgICAgICAgICAgaWYgKHMgJiYgL2Rpc3BsYXk6KHRhYmxlfGJsb2NrKVxzIWltcG9ydGFudC8udGVzdChzKSkgewogICAgICAgICAgICAgICAgaXRlbS5yZW1vdmUoKTsKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICB2YXIgc3Bhbj1pdGVtLnF1ZXJ5U2VsZWN0b3IoImRpdj5zcGFuIik7CiAgICAgICAgICAgICAgICBpZihzcGFuICYmIHNwYW4uaW5uZXJIVE1MPT0i5bm/5ZGKIil7CiAgICAgICAgICAgICAgICAgICAgaXRlbS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIFtdLmZvckVhY2guY2FsbChpdGVtLnF1ZXJ5U2VsZWN0b3JBbGwoImE+c3BhbiIpLGZ1bmN0aW9uKHNwYW4pewogICAgICAgICAgICAgICAgICAgIGlmKHNwYW4gJiYgKHNwYW4uaW5uZXJIVE1MPT0i5bm/5ZGKIiB8fCBzcGFuLmdldEF0dHJpYnV0ZSgiZGF0YS10dWlndWFuZyIpKSl7CiAgICAgICAgICAgICAgICAgICAgICAgIGl0ZW0ucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHZhciBlYiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIiNjb250ZW50X3JpZ2h0PnRhYmxlPnRib2R5PnRyPnRkPmRpdiIpOwogICAgICAgIGZvcihpPTA7aTxlYi5sZW5ndGg7aSsrKXsKICAgICAgICAgICAgbGV0IGQgPSBlYltpXTsKICAgICAgICAgICAgaWYgKGQuaWQhPSJjb24tYXIiKSB7CiAgICAgICAgICAgICAgICBkLnJlbW92ZSgpOwogICAgICAgICAgICB9CiAgICAgICAgfQogICAgfQogICAgc2V0VGltZW91dCgoKT0+e2NsZWFyQUQoKTt9LDIwMDApOwp9KSgpOw=="},{"name":"gwdang","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["http://*.jd.com/*","https://*.jd.com/*","http://*.jd.hk/*","https://*.jd.hk/*","http://*.taobao.com/*","https://*.taobao.com/*","http://*.tmall.com/*","https://*.tmall.com/*","https://*.tmall.hk/*","http://*.yixun.com/*","http://*.51buy.com/*","http://*.yhd.com/*","http://*.suning.com/*","https://*.suning.com/*","http://*.dangdang.com/*","http://*.gome.com.cn/*","http://*.newegg.cn/*","http://*.paipai.com/*","https://*.amazon.com/*","https://*.amazon.cn/*","https://*.amazon.*/*","http://www.kjt.com/*","http://www.kaola.com/*","http://www.tcl.com/*","http://shop.hisense.com/*","http://*.oppo.com/*","http://shop.vivo.com.cn/*","http://www.ebay.com/*","http://t.dianping.com/*","http://*.nuomi.com/*","http://*.meituan.com/*","https://yao.95095.com/*","http://*.feiniu.com/*","http://*.meilishuo.com/*","http://*.mogujie.com/*","http://shop.coolpad.cn/*","http://*.sephora.cn/*","http://*.yesmywine.com/*","http://*.yiguo.com/*","http://*.wanggou.com/*","http://mall.jia.com/*","http://weigou.baidu.com/*","http://*.mi.com/*","http://shop.letv.com/*","http://*.handu.com/*","http://*.taoshu.com/*","http://*.1688.com/*","http://*.muyingzhijia.com/*","http://*.vmall.com/*","http://*.xiji.com/*","http://*.xijie.com/*","http://www.yougou.com/*","http://www.okbuy.com/*","http://*.001town.com/*","http://*.01goo.com/*","http://*.03l.cn/*","http://*.133china.com/*","http://*.139shop.com/*","http://yxp.163.com/*","http://*.168dg.com/*","http://*.186mall.com/*","http://*.18to82.com/*","http://*.1j.cn/*","http://*.22shop.com/*","http://*.24dq.com/*","http://*.24quan.com/*","http://*.258sd.com/*","http://*.2688.com/*","http://*.360buy.com/*","http://*.360hqb.com/*","http://*.360kxr.com/*","http://*.360mart.com/*","http://*.365goba.com/*","http://*.38hzt.com/*","http://*.39ty.com/*","http://*.4inlook.com/*","http://*.5188bag.com/*","http://*.51buy.com/*","http://51buy.com/","http://*.51dg.com/*","http://*.51eng.com/*","http://*.51sheyuan.com/*","http://*.51youpin.com/*","http://*.520eye.com/*","http://*.52shehua.com/*","http://*.5366.com/*","http://t.58.com/*","http://*.58hua.com/*","http://*.5lux.com/*","http://*.5yth.com/*","http://*.6919.com/*","http://*.6sbuy.com/*","http://*.77toy.com/*","http://*.7caihua.com/*","http://*.7cv.com/*","http://*.7sev.com/*","http://*.80ebus.com/*","http://*.8801.net/*","http://*.919it.com/*","http://*.929.cn/*","http://*.942radio.com/*","http://b2c.958shop.com/*","http://*.96128.com/*","http://*.99pto.com/*","http://*.99read.com/*","http://*.9dadao.com/*","http://*.9you.com/*","http://*.afffff.com/*","http://*.ai356.com/*","http://*.aibang.com/*","http://*.aidai.com/*","http://*.aiju.com/*","http://*.aim36.com/*","http://*.aimer.com.cn/*","http://*.aiyingshi.com/*","http://*.aizhigu.com.cn/*","http://*.amazon.cn/*","http://*.anni.com/*","http://*.apabi.com/*","http://*.augshow.com/*","http://*.autosup.com/*","http://*.baiyjk.com/*","http://*.bbesports.com/*","http://*.bookuu.com/*","http://*.bearbuy.com.cn/*","http://*.beautyplus.cn/*","http://*.beifabook.com/*","http://*.benq.com.cn/*","http://*.best1.com/*","http://*.biaoshang.hk/*","http://*.binggo.com/*","http://*.bloves.com/*","http://*.bobomobi.com/*","http://*.bookschina.com/*","http://*.boqii.com/*","http://*.buding.com/*","http://*.buy007.com/*","http://*.buy361.cn/*","http://*.buyfine.net/*","http://*.buynow.com.cn/*","http://*.caistv.com/*","http://*.caomeipai.com/*","http://*.car339.com.cn/*","http://*.car6688.com/*","http://*.carrefour.com.cn/*","http://*.cdream.com/*","http://*.ceetop.com/*","http://*.chashu.cn/*","http://*.chedangjia.com/*","http://*.chengdecs.com/*","http://*.china-gift.com/*","http://*.china-pub.com/*","http://emall.chinapay.com/*","http://*.chinayrs.com/*","http://*.chris-tina.com/*","http://*.clady.com/*","http://*.clinique.com.cn/*","http://*.cncard.com/*","http://*.cnfse.com/*","http://*.colebuy.com/*","http://*.conslive.com/*","http://*.coo8.com/*","http://*.cosize.com/*","http://*.cosme-de.com/*","http://*.ctrip.com/*","http://*.cw100.com/*","http://*.d1.com.cn/*","http://*.daisonghua.com/*","http://*.dangdang.com/*","http://*.daoyao.com/*","http://*.woyo.com/*","http://*.dazhe.cn/*","http://*.dazhongdianqi.com.cn/*","http://*.dianpu.com/*","http://*.didatuan.com/*","http://*.disiqu.cn/*","http://*.dixintong.com/*","http://*.doulaimai.com/*","http://*.dsgoo.com/*","http://*.dtoto.com/*","http://*.duhub.com/*","http://*.duoding.com/*","http://*.e-giordano.com/*","http://*.e-lining.com/*","http://*.e-my.com.cn/*","http://*.easy361.com/*","http://*.ebaimi.com/*","http://*.eboxbuy.com/*","http://*.ebtea.com/*","http://*.ecosme.cn/*","http://*.efeihu.com/*","http://*.ehaier.com/*","http://*.ejia.com/*","http://*.enet.com.cn/*","http://*.enjoyeye.com/*","http://*.epetbar.com/*","http://*.et5155.com/*","http://*.f508.com/*","http://*.fclub.cn/*","http://*.flowerby.com/*","http://*.flowercn.com/*","http://*.gap.cn/*","http://*.godida.com/*","http://*.gome.com.cn/*","http://*.goocctv.cn/*","http://*.goodjd.com/*","http://*.goodnourish.cn/*","http://*.gou3618.com/*","http://*.gouduo.com/*","http://*.gouwulian.com/*","http://*.gouxie.com/*","http://*.goyahome.com/*","http://*.guobuy.com/*","http://*.guopi.com/*","http://*.guuoo.com/*","http://*.hany.cn/*","http://*.happigo.com/*","http://*.hit168.com.cn/*","http://*.hitao.com/*","http://*.homeold.cn/*","http://*.homevv.com/*","http://*.hongkouzi.com/*","http://*.hopebook.net/*","http://*.huachu.com.cn/*","http://*.huimeifang.cn/*","http://*.hw2008.cn/*","http://*.icaifeng.com/*","http://*.icson.com/*","http://*.ideemall.com/*","http://*.ihush.com/*","http://*.iloveyou.com.cn/*","http://*.ilovezuan.com/*","http://*.imeelee.com/*","http://*.inoble.com.cn/*","http://*.inshion.com/*","http://*.ishop.cn/*","http://*.it88.com.cn/*","http://*.itzm.com/*","http://*.iyuyou.com/*","http://*.jiajiajk.com/*","http://*.jiaju.com/*","http://*.jiatx.com/*","http://*.jiayougo.com/*","http://*.jinbaidu.com/*","http://*.jmeishop.com/*","http://*.joyran.com/*","http://*.jsbcmall.com/*","http://*.jtlhome.com/*","http://*.jumei.com/*","http://*.junph.com/*","http://*.justonline.cn/*","http://*.jxdyf.com/*","http://*.k121.com/*","http://*.kadang.com/*","http://*.keede.com.cn/*","http://*.kela.cn/*","http://*.kuaishubao.com/*","http://*.kxtkx.com/*","http://*.ladypk.com/*","http://*.laeibelle.com/*","http://*.lafaso.com/*","http://*.lamiu.com/*","http://*.lancome.com.cn/*","http://*.lashou.com/*","http://*.ledaojia.com/*","http://*.leftlady.com/*","http://*.lenovo.com.cn/*","http://*.lens2005.com/*","http://*.letao.com/*","http://*.leyou.com/*","http://*.leyou.com.cn/*","http://*.lijiababy.com.cn/*","http://*.lijigou.com/*","http://*.likebuy.com/*","http://*.likeface.com/*","http://*.lingshi.com/*","http://*.liqunshop.com/*","http://*.liyi99.com/*","http://*.locknlock.com.cn/*","http://*.lovo.cn/*","http://*.luckigo.com/*","http://*.lusen.com/*","http://*.lyceem.com/*","http://*.m18.com/*","http://*.maichawang.com/*","http://*.maimaike.cn/*","http://*.mamabb.com/*","http://*.mamahao.cn/*","http://*.mangocity.com/*","http://*.manzuo.com/*","http://*.masamaso.com/*","http://*.maxfunbuy.com/*","http://*.maywon.com/*","http://*.mbaobao.com/*","http://*.meici.com/*","http://*.meilele.com/*","http://*.meilieasy.com/*","http://*.meituan.com/*","http://*.menglu.com/*","http://*.mengmai.com/*","http://*.minibuy.com/*","http://*.mmgw.cn/*","http://*.mmuses.com/*","http://*.mobi001.com/*","http://*.mokamall.com/*","http://*.momoyoyo.com/*","http://*.montrosechina.com/*","http://*.mooiee.com/*","http://*.moonbasa.com/*","http://*.motostore.com.cn/*","http://*.mpshow.com.cn/*","http://*.naccoo.com/*","http://*.naguu.com/*","http://*.nayao.com/*","http://*.newegg.com.cn/*","http://*.newgo5.com/*","http://*.nmlch.com/*","http://*.no5.com.cn/*","http://*.nokia.com.cn/*","http://*.nonmin88.com/*","http://*.obuy.cn/*","http://*.ofcard.com/*","http://*.ogage.cn/*","http://*.okbig.com/*","http://*.okbuy.com/*","http://*.okddy.com/*","http://*.okgolf.cn/*","http://*.olomo.com/*","http://*.olympus.com.cn/*","http://*.olymsports.com/*","http://*.ono.com.cn/*","http://*.orange3c.com/*","http://*.ouku.com/*","http://*.ourtasty.com/*","http://*.outice.com/*","http://*.oyego.com/*","http://*.paixie.net/*","http://*.palcent.com/*","http://*.ocj.com.cn/*","http://*.pb89.com/*","http://*.pcarm.com/*","http://*.petyoo.com/*","http://*.pgbao.com/*","http://*.piaoliang100.com/*","http://*.pirateship.com.cn/*","http://*.popyj.com/*","http://*.pupai.cn/*","http://*.purcotton.com/*","http://*.qianxun.com/*","http://*.qingci.com/*","http://*.qinqinbaby.com/*","http://*.qmango.com/*","http://*.qumei.com/*","http://*.quwan.com/*","http://*.qxian.com/*","http://*.rayi.cn/*","http://*.redbaby.com.cn/*","http://*.robam.com/*","http://*.salala.com.cn/*","http://*.samsclub.cn/*","http://*.sanfo.com/*","http://*.sapo.com.hk/*","http://*.sasa.com/*","http://*.sasacity.com/*","http://*.sawbuy.com/*","http://*.shanghai-sports.com/*","http://*.shentop.com/*","http://*.shishangqiyi.com/*","http://*.shjdq.com/*","http://*.shnn.com/*","http://*.shopin.net/*","http://*.shoubiao.com.cn/*","http://*.sigo.cn/*","http://mall.sina.com.cn/*","http://*.sinobuy.cn/*","http://*.skcoo.com/*","http://*.skomart.com/*","http://*.snyun.com/*","http://*.sonmai.cn/*","http://*.sport2008.com.cn/*","http://*.strawberrynet.com/*","http://*.suning.com/*","http://*.sz-esun.com/*","http://*.tao3c.com/*","http://item.taobao.com/*","http://*.taoxie.cn/*","http://*.the365.com/*","http://*.thinkshop.cn/*","http://*.tian10.com/*","http://*.tiantian.com/*","http://*.junph.com/*","http://*.tieyou.com/*","http://detail.tmall.com/*","http://*.togj.com/*","http://*.tooogooo.com/*","http://*.toy90.com/*","http://*.toys365.com/*","http://*.tpy100.com/*","http://*.tuniu.com/*","http://*.tztart.com/*","http://*.ugou.cn/*","http://*.uipmall.com/*","http://*.uiyi.cn/*","http://*.ushan.cn/*","http://*.uushouji.com/*","http://*.uya100.com/*","http://*.vaakav.com/*","http://*.vafox.com/*","http://*.vancl.com/*","http://*.vcotton.com/*","http://*.veedl.com/*","http://*.vegoos.com/*","http://*.venusveil.com/*","http://*.veryok.cn/*","http://*.viccol.com/*","http://*.vipshop.com/*","http://*.vipstore.com/*","http://*.vivian.cn/*","http://*.vjia.com/*","http://*.vnasi.com/*","http://*.voipyeah.com/*","http://*.w1.cn/*","http://*.waipowang.com/*","http://*.wangshanghai.com/*","http://*.wg365.com/*","http://*.winenice.com/*","http://*.wl.cn/*","http://*.womai.com/*","http://*.woye.com/*","http://*.wtaotao.com/*","http://*.wumeiwang.com/*","http://*.x-playboy.com/*","http://*.xiaokang.com/*","http://*.xiaozhuren.com/*","http://*.xinbaigo.com/*","http://*.xindou.com/*","http://*.xing800.com/*","http://*.xinhuabookstore.com/*","http://*.xiu.com/*","http://*.xtpo.cn/*","http://*.xzuan.com/*","http://*.yaja.com.cn/*","http://*.yaofang.cn/*","http://*.yasai.cn/*","http://*.yeecare.com/*","http://buy.yesky.com/*","http://*.yesmytea.com/*","http://*.yesmywine.com/*","http://*.yide.com/*","http://*.yifu.com/*","http://*.yihaodian.com/*","http://*.yintai.com/*","http://*.yinyuehe.net/*","http://*.yjcs.cn/*","http://*.yobrand.com/*","http://*.yoger.com.cn/*","http://*.yoho.cn/*","http://*.yongle.com.cn/*","http://*.yougou.com/*","http://*.youjk.com/*","http://*.yoyo18.com/*","http://*.yumaoclub.com/*","http://*.yyosso.com/*","http://*.zbird.com/*","http://*.zgcbb.com/*","http://*.zm7.cn/*","http://*.zopo.com/*","http://*.ibuying.com/*","http://*.33go.com.cn/*","http://*.xijie.com/*","http://*.nop.cn/*","http://*.asyp.com/*","http://*.sparty.cn/*","http://*.yizhedian.com/*","http://*.lvhezi.com/*","http://*.aishangbaobao.com/*","http://*.sportica.cn/*","http://*.jstsilk.cn/*","http://*.camel.com.cn/*","http://*.cottonpop.net/*","http://*.hyj.com/*","http://*.myxiequ.com/*","http://*.mfplaza.com/*","http://*.do93.com/*","http://*.3guo.cn/*","http://*.yaqifushi.com/*","http://*.trura.com/*","http://*.lbaobao.cn/*","http://*.xiutuan.com/*","http://*.usashopcn.com/*","http://*.ihaveu.com/*","http://*.vipku.com/*","http://*.vipchina.com/*","http://*.fanrry.cn/*","http://*.lesunvip.com/*","http://*.nala.com.cn/*","http://*.miqi.cn/*","http://*.meiribuy.com/*","http://*.pufung.com/*","http://*.xiaoye.com/*","http://*.hmeili.com/*","http://*.oulybuy.com/*","http://*.meifenzi.com/*","http://*.caomeishop.com/*","http://*.meifu360.com/*","http://*.bapashop.com/*","http://*.bulangxiongdi.com/*","http://*.gusubuy.com/*","http://*.opearl.net/*","http://*.ruci.cn/*","http://*.rax.cn/*","http://*.jiuxian.com/*","http://*.maimaicha.com/*","http://*.pinwine.cn/*","http://*.meiweidao.com/*","http://*.okliang.com/*","http://*.365wine.com/*","http://*.jjlg.com.cn/*","http://*.bianlishe.com/*","http://*.epkmall.com/*","http://*.gdcct.com/*","http://*.500ccc.com/*","http://*.me361.com/*","http://*.malatamobile.com/*","http://*.trioo.com/*","http://*.oohdear.com/*","http://*.yaahe.cn/*","http://*.easeeyes.com/*","http://*.dbox.cn/*","http://*.haotehui.com/*","http://*.m6go.com/*","http://*.bianyigo.com/*","http://*.okjee.com/*","http://*.mygeek.cn/*","http://*.tbb.cn/*","http://*.ushare360.com/*","http://*.gqt168.com/*","http://*.konjoy.com/*","http://*.aoliz.com/*","http://*.jianianle.com/*","http://*.akajia.com/*","http://*.miqi.com.cn/*","http://*.lehuimai.com/*","http://*.lifevc.com/*","http://*www.ouku.com/","http://nuomi.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-idle","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1508687183101,"data":{}},"enabled":true,"position":25,"file_url":"https://greasyfork.org/scripts/14466-%E8%B4%AD%E7%89%A9%E5%85%9A%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7/code/%E8%B4%AD%E7%89%A9%E5%85%9A%E6%AF%94%E4%BB%B7%E5%B7%A5%E5%85%B7.user.js","uuid":"f99463e2-8098-4c22-be4b-5d8dc409fcce","source":""},{"name":"京东自营过滤","options":{"awareOfChrome":false,"check_for_updates":true,"comment":null,"compat_arrayleft":false,"compat_foreach":false,"compat_forvarin":false,"compat_metadata":false,"compat_uW_gmonkey":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_connects":[],"orig_excludes":[],"orig_includes":["*://list.jd.com/list.html?*","*://search.jd.com/search?*","*://search.jd.com/Search?*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"ts":1508688273167,"data":{}},"enabled":true,"position":26,"file_url":"https://greasyfork.org/scripts/33729-%E4%BA%AC%E4%B8%9C%E8%87%AA%E8%90%A5%E8%BF%87%E6%BB%A4/code/%E4%BA%AC%E4%B8%9C%E8%87%AA%E8%90%A5%E8%BF%87%E6%BB%A4.user.js","uuid":"898bc446-b39f-4488-a587-243681745f98","source":""}],"settings":{"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":"2"},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":"3"}]}}